package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS570001 physical file definition.
* 
* File level identifier is 1090501191958.
* Record format level identifier is 5858362F53276.
*/

public class ESS570001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01IMFLIF",
                                     "E01IMFCDE",
                                     "E01IMFLTY",
                                     "E01IMFLN1",
                                     "E01IMFLN2",
                                     "E01IMFLN3",
                                     "E01IMFLN4",
                                     "E01IMFLN5"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01IMFLIF",
                                   "E01IMFCDE",
                                   "E01IMFLTY",
                                   "E01IMFLN1",
                                   "E01IMFLN2",
                                   "E01IMFLN3",
                                   "E01IMFLN4",
                                   "E01IMFLN5"
                                 };
  final static String fid = "1090501191958";
  final static String rid = "5858362F53276";
  final static String fmtname = "ESS570001";
  final int FIELDCOUNT = 15;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01IMFLIF = null;
  private DecimalField fieldE01IMFCDE = null;
  private CharacterField fieldE01IMFLTY = null;
  private CharacterField fieldE01IMFLN1 = null;
  private CharacterField fieldE01IMFLN2 = null;
  private CharacterField fieldE01IMFLN3 = null;
  private CharacterField fieldE01IMFLN4 = null;
  private CharacterField fieldE01IMFLN5 = null;

  /**
  * Constructor for ESS570001Message.
  */
  public ESS570001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 336;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 20, 4, "H01OPECOD");
    fields[3] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 24, 1, "H01FLGMAS");
    fields[4] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 25, 1, "H01FLGWK1");
    fields[5] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 26, 1, "H01FLGWK2");
    fields[6] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 27, 1, "H01FLGWK3");
    fields[7] = fieldE01IMFLIF =
    new CharacterField(message, HEADERSIZE + 28, 1, "E01IMFLIF");
    fields[8] = fieldE01IMFCDE =
    new DecimalField(message, HEADERSIZE + 29, 5, 0, "E01IMFCDE");
    fields[9] = fieldE01IMFLTY =
    new CharacterField(message, HEADERSIZE + 34, 2, "E01IMFLTY");
    fields[10] = fieldE01IMFLN1 =
    new CharacterField(message, HEADERSIZE + 36, 60, "E01IMFLN1");
    fields[11] = fieldE01IMFLN2 =
    new CharacterField(message, HEADERSIZE + 96, 60, "E01IMFLN2");
    fields[12] = fieldE01IMFLN3 =
    new CharacterField(message, HEADERSIZE + 156, 60, "E01IMFLN3");
    fields[13] = fieldE01IMFLN4 =
    new CharacterField(message, HEADERSIZE + 216, 60, "E01IMFLN4");
    fields[14] = fieldE01IMFLN5 =
    new CharacterField(message, HEADERSIZE + 276, 60, "E01IMFLN5");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01IMFLIF using a String value.
  */
  public void setE01IMFLIF(String newvalue)
  {
    fieldE01IMFLIF.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLIF as a String.
  */
  public String getE01IMFLIF()
  {
    return fieldE01IMFLIF.getString();
  }

  /**
  * Set field E01IMFCDE using a String value.
  */
  public void setE01IMFCDE(String newvalue)
  {
    fieldE01IMFCDE.setString(newvalue);
  }

  /**
  * Get value of field E01IMFCDE as a String.
  */
  public String getE01IMFCDE()
  {
    return fieldE01IMFCDE.getString();
  }

  /**
  * Set numeric field E01IMFCDE using a BigDecimal value.
  */
  public void setE01IMFCDE(BigDecimal newvalue)
  {
    fieldE01IMFCDE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01IMFCDE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01IMFCDE()
  {
    return fieldE01IMFCDE.getBigDecimal();
  }

  /**
  * Set field E01IMFLTY using a String value.
  */
  public void setE01IMFLTY(String newvalue)
  {
    fieldE01IMFLTY.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLTY as a String.
  */
  public String getE01IMFLTY()
  {
    return fieldE01IMFLTY.getString();
  }

  /**
  * Set field E01IMFLN1 using a String value.
  */
  public void setE01IMFLN1(String newvalue)
  {
    fieldE01IMFLN1.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLN1 as a String.
  */
  public String getE01IMFLN1()
  {
    return fieldE01IMFLN1.getString();
  }

  /**
  * Set field E01IMFLN2 using a String value.
  */
  public void setE01IMFLN2(String newvalue)
  {
    fieldE01IMFLN2.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLN2 as a String.
  */
  public String getE01IMFLN2()
  {
    return fieldE01IMFLN2.getString();
  }

  /**
  * Set field E01IMFLN3 using a String value.
  */
  public void setE01IMFLN3(String newvalue)
  {
    fieldE01IMFLN3.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLN3 as a String.
  */
  public String getE01IMFLN3()
  {
    return fieldE01IMFLN3.getString();
  }

  /**
  * Set field E01IMFLN4 using a String value.
  */
  public void setE01IMFLN4(String newvalue)
  {
    fieldE01IMFLN4.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLN4 as a String.
  */
  public String getE01IMFLN4()
  {
    return fieldE01IMFLN4.getString();
  }

  /**
  * Set field E01IMFLN5 using a String value.
  */
  public void setE01IMFLN5(String newvalue)
  {
    fieldE01IMFLN5.setString(newvalue);
  }

  /**
  * Get value of field E01IMFLN5 as a String.
  */
  public String getE01IMFLN5()
  {
    return fieldE01IMFLN5.getString();
  }

}
