package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EACH11001 physical file definition.
* 
* File level identifier is 1080825165449.
* Record format level identifier is 453D6718C4823.
*/

public class EACH11001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ACOCDE",
                                     "E01ACONME",
                                     "E01ACOTYP",
                                     "E01ACOOCO",
                                     "E01ACOUTC",
                                     "E01ACOADD",
                                     "E01ACOSTE",
                                     "E01ACOCIT",
                                     "E01ACOZIP",
                                     "E01ACOFED",
                                     "E01ACONEW",
                                     "E01ACOAMT",
                                     "E01ACORDM",
                                     "E01ACORDD",
                                     "E01ACORDY",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ACOCDE",
                                   "E01ACONME",
                                   "E01ACOTYP",
                                   "E01ACOOCO",
                                   "E01ACOUTC",
                                   "E01ACOADD",
                                   "E01ACOSTE",
                                   "E01ACOCIT",
                                   "E01ACOZIP",
                                   "E01ACOFED",
                                   "E01ACONEW",
                                   "E01ACOAMT",
                                   "E01ACORDM",
                                   "E01ACORDD",
                                   "E01ACORDY",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1080825165449";
  final static String rid = "453D6718C4823";
  final static String fmtname = "EACH11001";
  final int FIELDCOUNT = 27;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01ACOCDE = null;
  private CharacterField fieldE01ACONME = null;
  private CharacterField fieldE01ACOTYP = null;
  private CharacterField fieldE01ACOOCO = null;
  private CharacterField fieldE01ACOUTC = null;
  private CharacterField fieldE01ACOADD = null;
  private CharacterField fieldE01ACOSTE = null;
  private CharacterField fieldE01ACOCIT = null;
  private CharacterField fieldE01ACOZIP = null;
  private CharacterField fieldE01ACOFED = null;
  private CharacterField fieldE01ACONEW = null;
  private DecimalField fieldE01ACOAMT = null;
  private DecimalField fieldE01ACORDM = null;
  private DecimalField fieldE01ACORDD = null;
  private DecimalField fieldE01ACORDY = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EACH11001Message.
  */
  public EACH11001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 202;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ACOCDE =
    new CharacterField(message, HEADERSIZE + 42, 10, "E01ACOCDE");
    fields[10] = fieldE01ACONME =
    new CharacterField(message, HEADERSIZE + 52, 30, "E01ACONME");
    fields[11] = fieldE01ACOTYP =
    new CharacterField(message, HEADERSIZE + 82, 1, "E01ACOTYP");
    fields[12] = fieldE01ACOOCO =
    new CharacterField(message, HEADERSIZE + 83, 1, "E01ACOOCO");
    fields[13] = fieldE01ACOUTC =
    new CharacterField(message, HEADERSIZE + 84, 1, "E01ACOUTC");
    fields[14] = fieldE01ACOADD =
    new CharacterField(message, HEADERSIZE + 85, 36, "E01ACOADD");
    fields[15] = fieldE01ACOSTE =
    new CharacterField(message, HEADERSIZE + 121, 2, "E01ACOSTE");
    fields[16] = fieldE01ACOCIT =
    new CharacterField(message, HEADERSIZE + 123, 15, "E01ACOCIT");
    fields[17] = fieldE01ACOZIP =
    new CharacterField(message, HEADERSIZE + 138, 10, "E01ACOZIP");
    fields[18] = fieldE01ACOFED =
    new CharacterField(message, HEADERSIZE + 148, 9, "E01ACOFED");
    fields[19] = fieldE01ACONEW =
    new CharacterField(message, HEADERSIZE + 157, 9, "E01ACONEW");
    fields[20] = fieldE01ACOAMT =
    new DecimalField(message, HEADERSIZE + 166, 17, 2, "E01ACOAMT");
    fields[21] = fieldE01ACORDM =
    new DecimalField(message, HEADERSIZE + 183, 3, 0, "E01ACORDM");
    fields[22] = fieldE01ACORDD =
    new DecimalField(message, HEADERSIZE + 186, 3, 0, "E01ACORDD");
    fields[23] = fieldE01ACORDY =
    new DecimalField(message, HEADERSIZE + 189, 3, 0, "E01ACORDY");
    fields[24] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 192, 1, "E01ACT");
    fields[25] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 193, 8, 0, "E01NUMREC");
    fields[26] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 201, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ACOCDE using a String value.
  */
  public void setE01ACOCDE(String newvalue)
  {
    fieldE01ACOCDE.setString(newvalue);
  }

  /**
  * Get value of field E01ACOCDE as a String.
  */
  public String getE01ACOCDE()
  {
    return fieldE01ACOCDE.getString();
  }

  /**
  * Set field E01ACONME using a String value.
  */
  public void setE01ACONME(String newvalue)
  {
    fieldE01ACONME.setString(newvalue);
  }

  /**
  * Get value of field E01ACONME as a String.
  */
  public String getE01ACONME()
  {
    return fieldE01ACONME.getString();
  }

  /**
  * Set field E01ACOTYP using a String value.
  */
  public void setE01ACOTYP(String newvalue)
  {
    fieldE01ACOTYP.setString(newvalue);
  }

  /**
  * Get value of field E01ACOTYP as a String.
  */
  public String getE01ACOTYP()
  {
    return fieldE01ACOTYP.getString();
  }

  /**
  * Set field E01ACOOCO using a String value.
  */
  public void setE01ACOOCO(String newvalue)
  {
    fieldE01ACOOCO.setString(newvalue);
  }

  /**
  * Get value of field E01ACOOCO as a String.
  */
  public String getE01ACOOCO()
  {
    return fieldE01ACOOCO.getString();
  }

  /**
  * Set field E01ACOUTC using a String value.
  */
  public void setE01ACOUTC(String newvalue)
  {
    fieldE01ACOUTC.setString(newvalue);
  }

  /**
  * Get value of field E01ACOUTC as a String.
  */
  public String getE01ACOUTC()
  {
    return fieldE01ACOUTC.getString();
  }

  /**
  * Set field E01ACOADD using a String value.
  */
  public void setE01ACOADD(String newvalue)
  {
    fieldE01ACOADD.setString(newvalue);
  }

  /**
  * Get value of field E01ACOADD as a String.
  */
  public String getE01ACOADD()
  {
    return fieldE01ACOADD.getString();
  }

  /**
  * Set field E01ACOSTE using a String value.
  */
  public void setE01ACOSTE(String newvalue)
  {
    fieldE01ACOSTE.setString(newvalue);
  }

  /**
  * Get value of field E01ACOSTE as a String.
  */
  public String getE01ACOSTE()
  {
    return fieldE01ACOSTE.getString();
  }

  /**
  * Set field E01ACOCIT using a String value.
  */
  public void setE01ACOCIT(String newvalue)
  {
    fieldE01ACOCIT.setString(newvalue);
  }

  /**
  * Get value of field E01ACOCIT as a String.
  */
  public String getE01ACOCIT()
  {
    return fieldE01ACOCIT.getString();
  }

  /**
  * Set field E01ACOZIP using a String value.
  */
  public void setE01ACOZIP(String newvalue)
  {
    fieldE01ACOZIP.setString(newvalue);
  }

  /**
  * Get value of field E01ACOZIP as a String.
  */
  public String getE01ACOZIP()
  {
    return fieldE01ACOZIP.getString();
  }

  /**
  * Set field E01ACOFED using a String value.
  */
  public void setE01ACOFED(String newvalue)
  {
    fieldE01ACOFED.setString(newvalue);
  }

  /**
  * Get value of field E01ACOFED as a String.
  */
  public String getE01ACOFED()
  {
    return fieldE01ACOFED.getString();
  }

  /**
  * Set field E01ACONEW using a String value.
  */
  public void setE01ACONEW(String newvalue)
  {
    fieldE01ACONEW.setString(newvalue);
  }

  /**
  * Get value of field E01ACONEW as a String.
  */
  public String getE01ACONEW()
  {
    return fieldE01ACONEW.getString();
  }

  /**
  * Set field E01ACOAMT using a String value.
  */
  public void setE01ACOAMT(String newvalue)
  {
    fieldE01ACOAMT.setString(newvalue);
  }

  /**
  * Get value of field E01ACOAMT as a String.
  */
  public String getE01ACOAMT()
  {
    return fieldE01ACOAMT.getString();
  }

  /**
  * Set numeric field E01ACOAMT using a BigDecimal value.
  */
  public void setE01ACOAMT(BigDecimal newvalue)
  {
    fieldE01ACOAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACOAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACOAMT()
  {
    return fieldE01ACOAMT.getBigDecimal();
  }

  /**
  * Set field E01ACORDM using a String value.
  */
  public void setE01ACORDM(String newvalue)
  {
    fieldE01ACORDM.setString(newvalue);
  }

  /**
  * Get value of field E01ACORDM as a String.
  */
  public String getE01ACORDM()
  {
    return fieldE01ACORDM.getString();
  }

  /**
  * Set numeric field E01ACORDM using a BigDecimal value.
  */
  public void setE01ACORDM(BigDecimal newvalue)
  {
    fieldE01ACORDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACORDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACORDM()
  {
    return fieldE01ACORDM.getBigDecimal();
  }

  /**
  * Set field E01ACORDD using a String value.
  */
  public void setE01ACORDD(String newvalue)
  {
    fieldE01ACORDD.setString(newvalue);
  }

  /**
  * Get value of field E01ACORDD as a String.
  */
  public String getE01ACORDD()
  {
    return fieldE01ACORDD.getString();
  }

  /**
  * Set numeric field E01ACORDD using a BigDecimal value.
  */
  public void setE01ACORDD(BigDecimal newvalue)
  {
    fieldE01ACORDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACORDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACORDD()
  {
    return fieldE01ACORDD.getBigDecimal();
  }

  /**
  * Set field E01ACORDY using a String value.
  */
  public void setE01ACORDY(String newvalue)
  {
    fieldE01ACORDY.setString(newvalue);
  }

  /**
  * Get value of field E01ACORDY as a String.
  */
  public String getE01ACORDY()
  {
    return fieldE01ACORDY.getString();
  }

  /**
  * Set numeric field E01ACORDY using a BigDecimal value.
  */
  public void setE01ACORDY(BigDecimal newvalue)
  {
    fieldE01ACORDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACORDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACORDY()
  {
    return fieldE01ACORDY.getBigDecimal();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
