package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD020501 physical file definition.
* 
* File level identifier is 1060822183912.
* Record format level identifier is 459FDE31477BE.
*/

public class ESD020501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01RTEBNK",
                                     "E01RTEACD",
                                     "E01RTEATY",
                                     "E01RTETAR",
                                     "E01RTECUN",
                                     "E01RTECCY",
                                     "E01RTEDSC",
                                     "E01RTEFTL",
                                     "E01RTEFYL",
                                     "E01RTEFTA",
                                     "E01RTEFYA",
                                     "E01CDROPE",
                                     "E01RTEUSR",
                                     "E01RTELDY",
                                     "E01RTELDM",
                                     "E01RTELDD",
                                     "E01RTELDT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01RTEBNK",
                                   "E01RTEACD",
                                   "E01RTEATY",
                                   "E01RTETAR",
                                   "E01RTECUN",
                                   "E01RTECCY",
                                   "E01RTEDSC",
                                   "E01RTEFTL",
                                   "E01RTEFYL",
                                   "E01RTEFTA",
                                   "E01RTEFYA",
                                   "E01CDROPE",
                                   "E01RTEUSR",
                                   "E01RTELDY",
                                   "E01RTELDM",
                                   "E01RTELDD",
                                   "E01RTELDT"
                                 };
  final static String fid = "1060822183912";
  final static String rid = "459FDE31477BE";
  final static String fmtname = "ESD020501";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01RTEBNK = null;
  private CharacterField fieldE01RTEACD = null;
  private CharacterField fieldE01RTEATY = null;
  private DecimalField fieldE01RTETAR = null;
  private DecimalField fieldE01RTECUN = null;
  private CharacterField fieldE01RTECCY = null;
  private CharacterField fieldE01RTEDSC = null;
  private CharacterField fieldE01RTEFTL = null;
  private CharacterField fieldE01RTEFYL = null;
  private CharacterField fieldE01RTEFTA = null;
  private CharacterField fieldE01RTEFYA = null;
  private CharacterField fieldE01CDROPE = null;
  private CharacterField fieldE01RTEUSR = null;
  private DecimalField fieldE01RTELDY = null;
  private DecimalField fieldE01RTELDM = null;
  private DecimalField fieldE01RTELDD = null;
  private DecimalField fieldE01RTELDT = null;

  /**
  * Constructor for ESD020501Message.
  */
  public ESD020501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 126;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01RTEBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01RTEBNK");
    fields[10] = fieldE01RTEACD =
    new CharacterField(message, HEADERSIZE + 44, 2, "E01RTEACD");
    fields[11] = fieldE01RTEATY =
    new CharacterField(message, HEADERSIZE + 46, 4, "E01RTEATY");
    fields[12] = fieldE01RTETAR =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "E01RTETAR");
    fields[13] = fieldE01RTECUN =
    new DecimalField(message, HEADERSIZE + 53, 10, 0, "E01RTECUN");
    fields[14] = fieldE01RTECCY =
    new CharacterField(message, HEADERSIZE + 63, 3, "E01RTECCY");
    fields[15] = fieldE01RTEDSC =
    new CharacterField(message, HEADERSIZE + 66, 25, "E01RTEDSC");
    fields[16] = fieldE01RTEFTL =
    new CharacterField(message, HEADERSIZE + 91, 2, "E01RTEFTL");
    fields[17] = fieldE01RTEFYL =
    new CharacterField(message, HEADERSIZE + 93, 2, "E01RTEFYL");
    fields[18] = fieldE01RTEFTA =
    new CharacterField(message, HEADERSIZE + 95, 2, "E01RTEFTA");
    fields[19] = fieldE01RTEFYA =
    new CharacterField(message, HEADERSIZE + 97, 2, "E01RTEFYA");
    fields[20] = fieldE01CDROPE =
    new CharacterField(message, HEADERSIZE + 99, 1, "E01CDROPE");
    fields[21] = fieldE01RTEUSR =
    new CharacterField(message, HEADERSIZE + 100, 10, "E01RTEUSR");
    fields[22] = fieldE01RTELDY =
    new DecimalField(message, HEADERSIZE + 110, 3, 0, "E01RTELDY");
    fields[23] = fieldE01RTELDM =
    new DecimalField(message, HEADERSIZE + 113, 3, 0, "E01RTELDM");
    fields[24] = fieldE01RTELDD =
    new DecimalField(message, HEADERSIZE + 116, 3, 0, "E01RTELDD");
    fields[25] = fieldE01RTELDT =
    new DecimalField(message, HEADERSIZE + 119, 7, 0, "E01RTELDT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01RTEBNK using a String value.
  */
  public void setE01RTEBNK(String newvalue)
  {
    fieldE01RTEBNK.setString(newvalue);
  }

  /**
  * Get value of field E01RTEBNK as a String.
  */
  public String getE01RTEBNK()
  {
    return fieldE01RTEBNK.getString();
  }

  /**
  * Set field E01RTEACD using a String value.
  */
  public void setE01RTEACD(String newvalue)
  {
    fieldE01RTEACD.setString(newvalue);
  }

  /**
  * Get value of field E01RTEACD as a String.
  */
  public String getE01RTEACD()
  {
    return fieldE01RTEACD.getString();
  }

  /**
  * Set field E01RTEATY using a String value.
  */
  public void setE01RTEATY(String newvalue)
  {
    fieldE01RTEATY.setString(newvalue);
  }

  /**
  * Get value of field E01RTEATY as a String.
  */
  public String getE01RTEATY()
  {
    return fieldE01RTEATY.getString();
  }

  /**
  * Set field E01RTETAR using a String value.
  */
  public void setE01RTETAR(String newvalue)
  {
    fieldE01RTETAR.setString(newvalue);
  }

  /**
  * Get value of field E01RTETAR as a String.
  */
  public String getE01RTETAR()
  {
    return fieldE01RTETAR.getString();
  }

  /**
  * Set numeric field E01RTETAR using a BigDecimal value.
  */
  public void setE01RTETAR(BigDecimal newvalue)
  {
    fieldE01RTETAR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTETAR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTETAR()
  {
    return fieldE01RTETAR.getBigDecimal();
  }

  /**
  * Set field E01RTECUN using a String value.
  */
  public void setE01RTECUN(String newvalue)
  {
    fieldE01RTECUN.setString(newvalue);
  }

  /**
  * Get value of field E01RTECUN as a String.
  */
  public String getE01RTECUN()
  {
    return fieldE01RTECUN.getString();
  }

  /**
  * Set numeric field E01RTECUN using a BigDecimal value.
  */
  public void setE01RTECUN(BigDecimal newvalue)
  {
    fieldE01RTECUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTECUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTECUN()
  {
    return fieldE01RTECUN.getBigDecimal();
  }

  /**
  * Set field E01RTECCY using a String value.
  */
  public void setE01RTECCY(String newvalue)
  {
    fieldE01RTECCY.setString(newvalue);
  }

  /**
  * Get value of field E01RTECCY as a String.
  */
  public String getE01RTECCY()
  {
    return fieldE01RTECCY.getString();
  }

  /**
  * Set field E01RTEDSC using a String value.
  */
  public void setE01RTEDSC(String newvalue)
  {
    fieldE01RTEDSC.setString(newvalue);
  }

  /**
  * Get value of field E01RTEDSC as a String.
  */
  public String getE01RTEDSC()
  {
    return fieldE01RTEDSC.getString();
  }

  /**
  * Set field E01RTEFTL using a String value.
  */
  public void setE01RTEFTL(String newvalue)
  {
    fieldE01RTEFTL.setString(newvalue);
  }

  /**
  * Get value of field E01RTEFTL as a String.
  */
  public String getE01RTEFTL()
  {
    return fieldE01RTEFTL.getString();
  }

  /**
  * Set field E01RTEFYL using a String value.
  */
  public void setE01RTEFYL(String newvalue)
  {
    fieldE01RTEFYL.setString(newvalue);
  }

  /**
  * Get value of field E01RTEFYL as a String.
  */
  public String getE01RTEFYL()
  {
    return fieldE01RTEFYL.getString();
  }

  /**
  * Set field E01RTEFTA using a String value.
  */
  public void setE01RTEFTA(String newvalue)
  {
    fieldE01RTEFTA.setString(newvalue);
  }

  /**
  * Get value of field E01RTEFTA as a String.
  */
  public String getE01RTEFTA()
  {
    return fieldE01RTEFTA.getString();
  }

  /**
  * Set field E01RTEFYA using a String value.
  */
  public void setE01RTEFYA(String newvalue)
  {
    fieldE01RTEFYA.setString(newvalue);
  }

  /**
  * Get value of field E01RTEFYA as a String.
  */
  public String getE01RTEFYA()
  {
    return fieldE01RTEFYA.getString();
  }

  /**
  * Set field E01CDROPE using a String value.
  */
  public void setE01CDROPE(String newvalue)
  {
    fieldE01CDROPE.setString(newvalue);
  }

  /**
  * Get value of field E01CDROPE as a String.
  */
  public String getE01CDROPE()
  {
    return fieldE01CDROPE.getString();
  }

  /**
  * Set field E01RTEUSR using a String value.
  */
  public void setE01RTEUSR(String newvalue)
  {
    fieldE01RTEUSR.setString(newvalue);
  }

  /**
  * Get value of field E01RTEUSR as a String.
  */
  public String getE01RTEUSR()
  {
    return fieldE01RTEUSR.getString();
  }

  /**
  * Set field E01RTELDY using a String value.
  */
  public void setE01RTELDY(String newvalue)
  {
    fieldE01RTELDY.setString(newvalue);
  }

  /**
  * Get value of field E01RTELDY as a String.
  */
  public String getE01RTELDY()
  {
    return fieldE01RTELDY.getString();
  }

  /**
  * Set numeric field E01RTELDY using a BigDecimal value.
  */
  public void setE01RTELDY(BigDecimal newvalue)
  {
    fieldE01RTELDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTELDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTELDY()
  {
    return fieldE01RTELDY.getBigDecimal();
  }

  /**
  * Set field E01RTELDM using a String value.
  */
  public void setE01RTELDM(String newvalue)
  {
    fieldE01RTELDM.setString(newvalue);
  }

  /**
  * Get value of field E01RTELDM as a String.
  */
  public String getE01RTELDM()
  {
    return fieldE01RTELDM.getString();
  }

  /**
  * Set numeric field E01RTELDM using a BigDecimal value.
  */
  public void setE01RTELDM(BigDecimal newvalue)
  {
    fieldE01RTELDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTELDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTELDM()
  {
    return fieldE01RTELDM.getBigDecimal();
  }

  /**
  * Set field E01RTELDD using a String value.
  */
  public void setE01RTELDD(String newvalue)
  {
    fieldE01RTELDD.setString(newvalue);
  }

  /**
  * Get value of field E01RTELDD as a String.
  */
  public String getE01RTELDD()
  {
    return fieldE01RTELDD.getString();
  }

  /**
  * Set numeric field E01RTELDD using a BigDecimal value.
  */
  public void setE01RTELDD(BigDecimal newvalue)
  {
    fieldE01RTELDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTELDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTELDD()
  {
    return fieldE01RTELDD.getBigDecimal();
  }

  /**
  * Set field E01RTELDT using a String value.
  */
  public void setE01RTELDT(String newvalue)
  {
    fieldE01RTELDT.setString(newvalue);
  }

  /**
  * Get value of field E01RTELDT as a String.
  */
  public String getE01RTELDT()
  {
    return fieldE01RTELDT.getString();
  }

  /**
  * Set numeric field E01RTELDT using a BigDecimal value.
  */
  public void setE01RTELDT(BigDecimal newvalue)
  {
    fieldE01RTELDT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTELDT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTELDT()
  {
    return fieldE01RTELDT.getBigDecimal();
  }

}
