package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EIB000002 physical file definition.
* 
* File level identifier is 1040412122206.
* Record format level identifier is 3014CB25F52CB.
*/

public class EIB000002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02IBTDFB",
                                     "E02IBTDFR",
                                     "E02IBTDFC",
                                     "E02IBTDFA",
                                     "E02IBTDFF",
                                     "E02IBTDTB",
                                     "E02IBTDTR",
                                     "E02IBTDTC",
                                     "E02IBTDTA",
                                     "E02IBTDTF",
                                     "E02IBTENT",
                                     "E02GLDDFA",
                                     "E02GLDDTA"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02IBTDFB",
                                   "E02IBTDFR",
                                   "E02IBTDFC",
                                   "E02IBTDFA",
                                   "E02IBTDFF",
                                   "E02IBTDTB",
                                   "E02IBTDTR",
                                   "E02IBTDTC",
                                   "E02IBTDTA",
                                   "E02IBTDTF",
                                   "E02IBTENT",
                                   "E02GLDDFA",
                                   "E02GLDDTA"
                                 };
  final static String fid = "1040412122206";
  final static String rid = "3014CB25F52CB";
  final static String fmtname = "EIB000002";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02IBTDFB = null;
  private DecimalField fieldE02IBTDFR = null;
  private CharacterField fieldE02IBTDFC = null;
  private DecimalField fieldE02IBTDFA = null;
  private CharacterField fieldE02IBTDFF = null;
  private CharacterField fieldE02IBTDTB = null;
  private DecimalField fieldE02IBTDTR = null;
  private CharacterField fieldE02IBTDTC = null;
  private DecimalField fieldE02IBTDTA = null;
  private CharacterField fieldE02IBTDTF = null;
  private CharacterField fieldE02IBTENT = null;
  private CharacterField fieldE02GLDDFA = null;
  private CharacterField fieldE02GLDDTA = null;

  /**
  * Constructor for EIB000002Message.
  */
  public EIB000002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 167;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02IBTDFB =
    new CharacterField(message, HEADERSIZE + 42, 2, "E02IBTDFB");
    fields[10] = fieldE02IBTDFR =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "E02IBTDFR");
    fields[11] = fieldE02IBTDFC =
    new CharacterField(message, HEADERSIZE + 48, 3, "E02IBTDFC");
    fields[12] = fieldE02IBTDFA =
    new DecimalField(message, HEADERSIZE + 51, 17, 0, "E02IBTDFA");
    fields[13] = fieldE02IBTDFF =
    new CharacterField(message, HEADERSIZE + 68, 1, "E02IBTDFF");
    fields[14] = fieldE02IBTDTB =
    new CharacterField(message, HEADERSIZE + 69, 2, "E02IBTDTB");
    fields[15] = fieldE02IBTDTR =
    new DecimalField(message, HEADERSIZE + 71, 4, 0, "E02IBTDTR");
    fields[16] = fieldE02IBTDTC =
    new CharacterField(message, HEADERSIZE + 75, 3, "E02IBTDTC");
    fields[17] = fieldE02IBTDTA =
    new DecimalField(message, HEADERSIZE + 78, 17, 0, "E02IBTDTA");
    fields[18] = fieldE02IBTDTF =
    new CharacterField(message, HEADERSIZE + 95, 1, "E02IBTDTF");
    fields[19] = fieldE02IBTENT =
    new CharacterField(message, HEADERSIZE + 96, 1, "E02IBTENT");
    fields[20] = fieldE02GLDDFA =
    new CharacterField(message, HEADERSIZE + 97, 35, "E02GLDDFA");
    fields[21] = fieldE02GLDDTA =
    new CharacterField(message, HEADERSIZE + 132, 35, "E02GLDDTA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02IBTDFB using a String value.
  */
  public void setE02IBTDFB(String newvalue)
  {
    fieldE02IBTDFB.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDFB as a String.
  */
  public String getE02IBTDFB()
  {
    return fieldE02IBTDFB.getString();
  }

  /**
  * Set field E02IBTDFR using a String value.
  */
  public void setE02IBTDFR(String newvalue)
  {
    fieldE02IBTDFR.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDFR as a String.
  */
  public String getE02IBTDFR()
  {
    return fieldE02IBTDFR.getString();
  }

  /**
  * Set numeric field E02IBTDFR using a BigDecimal value.
  */
  public void setE02IBTDFR(BigDecimal newvalue)
  {
    fieldE02IBTDFR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IBTDFR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IBTDFR()
  {
    return fieldE02IBTDFR.getBigDecimal();
  }

  /**
  * Set field E02IBTDFC using a String value.
  */
  public void setE02IBTDFC(String newvalue)
  {
    fieldE02IBTDFC.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDFC as a String.
  */
  public String getE02IBTDFC()
  {
    return fieldE02IBTDFC.getString();
  }

  /**
  * Set field E02IBTDFA using a String value.
  */
  public void setE02IBTDFA(String newvalue)
  {
    fieldE02IBTDFA.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDFA as a String.
  */
  public String getE02IBTDFA()
  {
    return fieldE02IBTDFA.getString();
  }

  /**
  * Set numeric field E02IBTDFA using a BigDecimal value.
  */
  public void setE02IBTDFA(BigDecimal newvalue)
  {
    fieldE02IBTDFA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IBTDFA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IBTDFA()
  {
    return fieldE02IBTDFA.getBigDecimal();
  }

  /**
  * Set field E02IBTDFF using a String value.
  */
  public void setE02IBTDFF(String newvalue)
  {
    fieldE02IBTDFF.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDFF as a String.
  */
  public String getE02IBTDFF()
  {
    return fieldE02IBTDFF.getString();
  }

  /**
  * Set field E02IBTDTB using a String value.
  */
  public void setE02IBTDTB(String newvalue)
  {
    fieldE02IBTDTB.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDTB as a String.
  */
  public String getE02IBTDTB()
  {
    return fieldE02IBTDTB.getString();
  }

  /**
  * Set field E02IBTDTR using a String value.
  */
  public void setE02IBTDTR(String newvalue)
  {
    fieldE02IBTDTR.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDTR as a String.
  */
  public String getE02IBTDTR()
  {
    return fieldE02IBTDTR.getString();
  }

  /**
  * Set numeric field E02IBTDTR using a BigDecimal value.
  */
  public void setE02IBTDTR(BigDecimal newvalue)
  {
    fieldE02IBTDTR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IBTDTR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IBTDTR()
  {
    return fieldE02IBTDTR.getBigDecimal();
  }

  /**
  * Set field E02IBTDTC using a String value.
  */
  public void setE02IBTDTC(String newvalue)
  {
    fieldE02IBTDTC.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDTC as a String.
  */
  public String getE02IBTDTC()
  {
    return fieldE02IBTDTC.getString();
  }

  /**
  * Set field E02IBTDTA using a String value.
  */
  public void setE02IBTDTA(String newvalue)
  {
    fieldE02IBTDTA.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDTA as a String.
  */
  public String getE02IBTDTA()
  {
    return fieldE02IBTDTA.getString();
  }

  /**
  * Set numeric field E02IBTDTA using a BigDecimal value.
  */
  public void setE02IBTDTA(BigDecimal newvalue)
  {
    fieldE02IBTDTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IBTDTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IBTDTA()
  {
    return fieldE02IBTDTA.getBigDecimal();
  }

  /**
  * Set field E02IBTDTF using a String value.
  */
  public void setE02IBTDTF(String newvalue)
  {
    fieldE02IBTDTF.setString(newvalue);
  }

  /**
  * Get value of field E02IBTDTF as a String.
  */
  public String getE02IBTDTF()
  {
    return fieldE02IBTDTF.getString();
  }

  /**
  * Set field E02IBTENT using a String value.
  */
  public void setE02IBTENT(String newvalue)
  {
    fieldE02IBTENT.setString(newvalue);
  }

  /**
  * Get value of field E02IBTENT as a String.
  */
  public String getE02IBTENT()
  {
    return fieldE02IBTENT.getString();
  }

  /**
  * Set field E02GLDDFA using a String value.
  */
  public void setE02GLDDFA(String newvalue)
  {
    fieldE02GLDDFA.setString(newvalue);
  }

  /**
  * Get value of field E02GLDDFA as a String.
  */
  public String getE02GLDDFA()
  {
    return fieldE02GLDDFA.getString();
  }

  /**
  * Set field E02GLDDTA using a String value.
  */
  public void setE02GLDDTA(String newvalue)
  {
    fieldE02GLDDTA.setString(newvalue);
  }

  /**
  * Get value of field E02GLDDTA as a String.
  */
  public String getE02GLDDTA()
  {
    return fieldE02GLDDTA.getString();
  }

}
