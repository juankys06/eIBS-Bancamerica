package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPV014002 physical file definition.
* 
* File level identifier is 1041203172204.
* Record format level identifier is 41FCEB6D49ECF.
*/

public class EPV014002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02PVENUM",
                                     "E02PVEEXC",
                                     "E02EXCDSC",
                                     "E02PVELVL",
                                     "E02PVEDT1",
                                     "E02PVEDT2",
                                     "E02PVEDT3",
                                     "E02PVEDTI",
                                     "E02PVEUSR",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02PVENUM",
                                   "E02PVEEXC",
                                   "E02EXCDSC",
                                   "E02PVELVL",
                                   "E02PVEDT1",
                                   "E02PVEDT2",
                                   "E02PVEDT3",
                                   "E02PVEDTI",
                                   "E02PVEUSR",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1041203172204";
  final static String rid = "41FCEB6D49ECF";
  final static String fmtname = "EPV014002";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02PVENUM = null;
  private CharacterField fieldE02PVEEXC = null;
  private CharacterField fieldE02EXCDSC = null;
  private DecimalField fieldE02PVELVL = null;
  private DecimalField fieldE02PVEDT1 = null;
  private DecimalField fieldE02PVEDT2 = null;
  private DecimalField fieldE02PVEDT3 = null;
  private DecimalField fieldE02PVEDTI = null;
  private CharacterField fieldE02PVEUSR = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EPV014002Message.
  */
  public EPV014002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 132;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02PVENUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02PVENUM");
    fields[10] = fieldE02PVEEXC =
    new CharacterField(message, HEADERSIZE + 55, 4, "E02PVEEXC");
    fields[11] = fieldE02EXCDSC =
    new CharacterField(message, HEADERSIZE + 59, 35, "E02EXCDSC");
    fields[12] = fieldE02PVELVL =
    new DecimalField(message, HEADERSIZE + 94, 3, 0, "E02PVELVL");
    fields[13] = fieldE02PVEDT1 =
    new DecimalField(message, HEADERSIZE + 97, 3, 0, "E02PVEDT1");
    fields[14] = fieldE02PVEDT2 =
    new DecimalField(message, HEADERSIZE + 100, 3, 0, "E02PVEDT2");
    fields[15] = fieldE02PVEDT3 =
    new DecimalField(message, HEADERSIZE + 103, 3, 0, "E02PVEDT3");
    fields[16] = fieldE02PVEDTI =
    new DecimalField(message, HEADERSIZE + 106, 7, 0, "E02PVEDTI");
    fields[17] = fieldE02PVEUSR =
    new CharacterField(message, HEADERSIZE + 113, 10, "E02PVEUSR");
    fields[18] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 123, 8, 0, "E02NUMREC");
    fields[19] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 131, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02PVENUM using a String value.
  */
  public void setE02PVENUM(String newvalue)
  {
    fieldE02PVENUM.setString(newvalue);
  }

  /**
  * Get value of field E02PVENUM as a String.
  */
  public String getE02PVENUM()
  {
    return fieldE02PVENUM.getString();
  }

  /**
  * Set numeric field E02PVENUM using a BigDecimal value.
  */
  public void setE02PVENUM(BigDecimal newvalue)
  {
    fieldE02PVENUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PVENUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PVENUM()
  {
    return fieldE02PVENUM.getBigDecimal();
  }

  /**
  * Set field E02PVEEXC using a String value.
  */
  public void setE02PVEEXC(String newvalue)
  {
    fieldE02PVEEXC.setString(newvalue);
  }

  /**
  * Get value of field E02PVEEXC as a String.
  */
  public String getE02PVEEXC()
  {
    return fieldE02PVEEXC.getString();
  }

  /**
  * Set field E02EXCDSC using a String value.
  */
  public void setE02EXCDSC(String newvalue)
  {
    fieldE02EXCDSC.setString(newvalue);
  }

  /**
  * Get value of field E02EXCDSC as a String.
  */
  public String getE02EXCDSC()
  {
    return fieldE02EXCDSC.getString();
  }

  /**
  * Set field E02PVELVL using a String value.
  */
  public void setE02PVELVL(String newvalue)
  {
    fieldE02PVELVL.setString(newvalue);
  }

  /**
  * Get value of field E02PVELVL as a String.
  */
  public String getE02PVELVL()
  {
    return fieldE02PVELVL.getString();
  }

  /**
  * Set numeric field E02PVELVL using a BigDecimal value.
  */
  public void setE02PVELVL(BigDecimal newvalue)
  {
    fieldE02PVELVL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PVELVL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PVELVL()
  {
    return fieldE02PVELVL.getBigDecimal();
  }

  /**
  * Set field E02PVEDT1 using a String value.
  */
  public void setE02PVEDT1(String newvalue)
  {
    fieldE02PVEDT1.setString(newvalue);
  }

  /**
  * Get value of field E02PVEDT1 as a String.
  */
  public String getE02PVEDT1()
  {
    return fieldE02PVEDT1.getString();
  }

  /**
  * Set numeric field E02PVEDT1 using a BigDecimal value.
  */
  public void setE02PVEDT1(BigDecimal newvalue)
  {
    fieldE02PVEDT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PVEDT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PVEDT1()
  {
    return fieldE02PVEDT1.getBigDecimal();
  }

  /**
  * Set field E02PVEDT2 using a String value.
  */
  public void setE02PVEDT2(String newvalue)
  {
    fieldE02PVEDT2.setString(newvalue);
  }

  /**
  * Get value of field E02PVEDT2 as a String.
  */
  public String getE02PVEDT2()
  {
    return fieldE02PVEDT2.getString();
  }

  /**
  * Set numeric field E02PVEDT2 using a BigDecimal value.
  */
  public void setE02PVEDT2(BigDecimal newvalue)
  {
    fieldE02PVEDT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PVEDT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PVEDT2()
  {
    return fieldE02PVEDT2.getBigDecimal();
  }

  /**
  * Set field E02PVEDT3 using a String value.
  */
  public void setE02PVEDT3(String newvalue)
  {
    fieldE02PVEDT3.setString(newvalue);
  }

  /**
  * Get value of field E02PVEDT3 as a String.
  */
  public String getE02PVEDT3()
  {
    return fieldE02PVEDT3.getString();
  }

  /**
  * Set numeric field E02PVEDT3 using a BigDecimal value.
  */
  public void setE02PVEDT3(BigDecimal newvalue)
  {
    fieldE02PVEDT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PVEDT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PVEDT3()
  {
    return fieldE02PVEDT3.getBigDecimal();
  }

  /**
  * Set field E02PVEDTI using a String value.
  */
  public void setE02PVEDTI(String newvalue)
  {
    fieldE02PVEDTI.setString(newvalue);
  }

  /**
  * Get value of field E02PVEDTI as a String.
  */
  public String getE02PVEDTI()
  {
    return fieldE02PVEDTI.getString();
  }

  /**
  * Set numeric field E02PVEDTI using a BigDecimal value.
  */
  public void setE02PVEDTI(BigDecimal newvalue)
  {
    fieldE02PVEDTI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PVEDTI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PVEDTI()
  {
    return fieldE02PVEDTI.getBigDecimal();
  }

  /**
  * Set field E02PVEUSR using a String value.
  */
  public void setE02PVEUSR(String newvalue)
  {
    fieldE02PVEUSR.setString(newvalue);
  }

  /**
  * Get value of field E02PVEUSR as a String.
  */
  public String getE02PVEUSR()
  {
    return fieldE02PVEUSR.getString();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
