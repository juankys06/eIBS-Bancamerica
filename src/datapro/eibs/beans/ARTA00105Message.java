package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ARTA00105 physical file definition.
* 
* File level identifier is 1040520160413.
* Record format level identifier is 4CE17815EF6A2.
*/

public class ARTA00105Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H05USERID",
                                     "H05PROGRM",
                                     "H05TIMSYS",
                                     "H05SCRCOD",
                                     "H05OPECOD",
                                     "H05FLGMAS",
                                     "H05FLGWK1",
                                     "H05FLGWK2",
                                     "H05FLGWK3",
                                     "E05DEAACC",
                                     "E05NUMSCW",
                                     "E05DSCSCW",
                                     "E05SCWAMT"
                                   };
  final static String tnames[] = {
                                   "H05USERID",
                                   "H05PROGRM",
                                   "H05TIMSYS",
                                   "H05SCRCOD",
                                   "H05OPECOD",
                                   "H05FLGMAS",
                                   "H05FLGWK1",
                                   "H05FLGWK2",
                                   "H05FLGWK3",
                                   "E05DEAACC",
                                   "E05NUMSCW",
                                   "E05DSCSCW",
                                   "E05SCWAMT"
                                 };
  final static String fid = "1040520160413";
  final static String rid = "4CE17815EF6A2";
  final static String fmtname = "ARTA00105";
  final int FIELDCOUNT = 13;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH05USERID = null;
  private CharacterField fieldH05PROGRM = null;
  private CharacterField fieldH05TIMSYS = null;
  private CharacterField fieldH05SCRCOD = null;
  private CharacterField fieldH05OPECOD = null;
  private CharacterField fieldH05FLGMAS = null;
  private CharacterField fieldH05FLGWK1 = null;
  private CharacterField fieldH05FLGWK2 = null;
  private CharacterField fieldH05FLGWK3 = null;
  private DecimalField fieldE05DEAACC = null;
  private CharacterField fieldE05NUMSCW = null;
  private CharacterField fieldE05DSCSCW = null;
  private DecimalField fieldE05SCWAMT = null;

  /**
  * Constructor for ARTA00105Message.
  */
  public ARTA00105Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 101;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH05USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H05USERID");
    fields[1] = fieldH05PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H05PROGRM");
    fields[2] = fieldH05TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H05TIMSYS");
    fields[3] = fieldH05SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H05SCRCOD");
    fields[4] = fieldH05OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H05OPECOD");
    fields[5] = fieldH05FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H05FLGMAS");
    fields[6] = fieldH05FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H05FLGWK1");
    fields[7] = fieldH05FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H05FLGWK2");
    fields[8] = fieldH05FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H05FLGWK3");
    fields[9] = fieldE05DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E05DEAACC");
    fields[10] = fieldE05NUMSCW =
    new CharacterField(message, HEADERSIZE + 52, 4, "E05NUMSCW");
    fields[11] = fieldE05DSCSCW =
    new CharacterField(message, HEADERSIZE + 56, 30, "E05DSCSCW");
    fields[12] = fieldE05SCWAMT =
    new DecimalField(message, HEADERSIZE + 86, 15, 2, "E05SCWAMT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H05USERID using a String value.
  */
  public void setH05USERID(String newvalue)
  {
    fieldH05USERID.setString(newvalue);
  }

  /**
  * Get value of field H05USERID as a String.
  */
  public String getH05USERID()
  {
    return fieldH05USERID.getString();
  }

  /**
  * Set field H05PROGRM using a String value.
  */
  public void setH05PROGRM(String newvalue)
  {
    fieldH05PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H05PROGRM as a String.
  */
  public String getH05PROGRM()
  {
    return fieldH05PROGRM.getString();
  }

  /**
  * Set field H05TIMSYS using a String value.
  */
  public void setH05TIMSYS(String newvalue)
  {
    fieldH05TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H05TIMSYS as a String.
  */
  public String getH05TIMSYS()
  {
    return fieldH05TIMSYS.getString();
  }

  /**
  * Set field H05SCRCOD using a String value.
  */
  public void setH05SCRCOD(String newvalue)
  {
    fieldH05SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H05SCRCOD as a String.
  */
  public String getH05SCRCOD()
  {
    return fieldH05SCRCOD.getString();
  }

  /**
  * Set field H05OPECOD using a String value.
  */
  public void setH05OPECOD(String newvalue)
  {
    fieldH05OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H05OPECOD as a String.
  */
  public String getH05OPECOD()
  {
    return fieldH05OPECOD.getString();
  }

  /**
  * Set field H05FLGMAS using a String value.
  */
  public void setH05FLGMAS(String newvalue)
  {
    fieldH05FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H05FLGMAS as a String.
  */
  public String getH05FLGMAS()
  {
    return fieldH05FLGMAS.getString();
  }

  /**
  * Set field H05FLGWK1 using a String value.
  */
  public void setH05FLGWK1(String newvalue)
  {
    fieldH05FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK1 as a String.
  */
  public String getH05FLGWK1()
  {
    return fieldH05FLGWK1.getString();
  }

  /**
  * Set field H05FLGWK2 using a String value.
  */
  public void setH05FLGWK2(String newvalue)
  {
    fieldH05FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK2 as a String.
  */
  public String getH05FLGWK2()
  {
    return fieldH05FLGWK2.getString();
  }

  /**
  * Set field H05FLGWK3 using a String value.
  */
  public void setH05FLGWK3(String newvalue)
  {
    fieldH05FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK3 as a String.
  */
  public String getH05FLGWK3()
  {
    return fieldH05FLGWK3.getString();
  }

  /**
  * Set field E05DEAACC using a String value.
  */
  public void setE05DEAACC(String newvalue)
  {
    fieldE05DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E05DEAACC as a String.
  */
  public String getE05DEAACC()
  {
    return fieldE05DEAACC.getString();
  }

  /**
  * Set numeric field E05DEAACC using a BigDecimal value.
  */
  public void setE05DEAACC(BigDecimal newvalue)
  {
    fieldE05DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05DEAACC()
  {
    return fieldE05DEAACC.getBigDecimal();
  }

  /**
  * Set field E05NUMSCW using a String value.
  */
  public void setE05NUMSCW(String newvalue)
  {
    fieldE05NUMSCW.setString(newvalue);
  }

  /**
  * Get value of field E05NUMSCW as a String.
  */
  public String getE05NUMSCW()
  {
    return fieldE05NUMSCW.getString();
  }

  /**
  * Set field E05DSCSCW using a String value.
  */
  public void setE05DSCSCW(String newvalue)
  {
    fieldE05DSCSCW.setString(newvalue);
  }

  /**
  * Get value of field E05DSCSCW as a String.
  */
  public String getE05DSCSCW()
  {
    return fieldE05DSCSCW.getString();
  }

  /**
  * Set field E05SCWAMT using a String value.
  */
  public void setE05SCWAMT(String newvalue)
  {
    fieldE05SCWAMT.setString(newvalue);
  }

  /**
  * Get value of field E05SCWAMT as a String.
  */
  public String getE05SCWAMT()
  {
    return fieldE05SCWAMT.getString();
  }

  /**
  * Set numeric field E05SCWAMT using a BigDecimal value.
  */
  public void setE05SCWAMT(BigDecimal newvalue)
  {
    fieldE05SCWAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05SCWAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05SCWAMT()
  {
    return fieldE05SCWAMT.getBigDecimal();
  }

}
