package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0307DS physical file definition.
* 
* File level identifier is 1011206134547.
* Record format level identifier is 3F704927EEB48.
*/

public class EWD0307DSMessage extends MessageRecord
{
  final int FIELDCOUNT = 13;
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDCOD = null;
  private CharacterField fieldSWDSIM = null;
  private CharacterField fieldSWDNME = null;
  private CharacterField fieldSWDCCY = null;
  private CharacterField fieldSWDGLL = null;
  private CharacterField fieldSWDTDF = null;
  private DecimalField fieldSWDCUN = null;
  private CharacterField fieldSWDNMC = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0307DSMessage.
  */
  public EWD0307DSMessage()
  {
	createFields();
	initialize();
  }  

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
	recordsize = 138;
	fileid = "1011206134547";
	recordid = "3F704927EEB48";
	message = new byte[getByteLength()];
	formatname = "EWD0307DS";
	fieldnames = new String[FIELDCOUNT];
	tagnames = new String[FIELDCOUNT];
	fields = new MessageField[FIELDCOUNT];

	fieldnames[0] = "RWDUSR";
	tagnames[0] = "RWDUSR";
	fields[0] = fieldRWDUSR =
	new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
	fieldnames[1] = "RWDTYP";
	tagnames[1] = "RWDTYP";
	fields[1] = fieldRWDTYP =
	new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
	fieldnames[2] = "RWDFRC";
	tagnames[2] = "RWDFRC";
	fields[2] = fieldRWDFRC =
	new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
	fieldnames[3] = "SWDCOD";
	tagnames[3] = "SWDCOD";
	fields[3] = fieldSWDCOD =
	new CharacterField(message, HEADERSIZE + 19, 3, "SWDCOD");
	fieldnames[4] = "SWDSIM";
	tagnames[4] = "SWDSIM";
	fields[4] = fieldSWDSIM =
	new CharacterField(message, HEADERSIZE + 22, 15, "SWDSIM");
	fieldnames[5] = "SWDNME";
	tagnames[5] = "SWDNME";
	fields[5] = fieldSWDNME =
	new CharacterField(message, HEADERSIZE + 37, 35, "SWDNME");
	fieldnames[6] = "SWDCCY";
	tagnames[6] = "SWDCCY";
	fields[6] = fieldSWDCCY =
	new CharacterField(message, HEADERSIZE + 72, 3, "SWDCCY");
	fieldnames[7] = "SWDGLL";
	tagnames[7] = "SWDGLL";
	fields[7] = fieldSWDGLL =
	new CharacterField(message, HEADERSIZE + 75, 8, "SWDGLL");
	fieldnames[8] = "SWDTDF";
	tagnames[8] = "SWDTDF";
	fields[8] = fieldSWDTDF =
	new CharacterField(message, HEADERSIZE + 83, 1, "SWDTDF");
	fieldnames[9] = "SWDCUN";
	tagnames[9] = "SWDCUN";
	fields[9] = fieldSWDCUN =
	new DecimalField(message, HEADERSIZE + 84, 10, 0, "SWDCUN");
	fieldnames[10] = "SWDNMC";
	tagnames[10] = "SWDNMC";
	fields[10] = fieldSWDNMC =
	new CharacterField(message, HEADERSIZE + 94, 35, "SWDNMC");
	fieldnames[11] = "SWDREC";
	tagnames[11] = "SWDREC";
	fields[11] = fieldSWDREC =
	new DecimalField(message, HEADERSIZE + 129, 8, 0, "SWDREC");
	fieldnames[12] = "SWDOPE";
	tagnames[12] = "SWDOPE";
	fields[12] = fieldSWDOPE =
	new CharacterField(message, HEADERSIZE + 137, 1, "SWDOPE");
  }  

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
	fieldRWDUSR.setString(newvalue);
  }  

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
	return fieldRWDUSR.getString();
  }  

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
	fieldRWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
	return fieldRWDTYP.getString();
  }  

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
	fieldRWDFRC.setString(newvalue);
  }  

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
	return fieldRWDFRC.getString();
  }  

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
	fieldRWDFRC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
	return fieldRWDFRC.getBigDecimal();
  }  

  /**
  * Set field SWDCOD using a String value.
  */
  public void setSWDCOD(String newvalue)
  {
	fieldSWDCOD.setString(newvalue);
  }  

  /**
  * Get value of field SWDCOD as a String.
  */
  public String getSWDCOD()
  {
	return fieldSWDCOD.getString();
  }  

  /**
  * Set field SWDSIM using a String value.
  */
  public void setSWDSIM(String newvalue)
  {
	fieldSWDSIM.setString(newvalue);
  }  

  /**
  * Get value of field SWDSIM as a String.
  */
  public String getSWDSIM()
  {
	return fieldSWDSIM.getString();
  }  

  /**
  * Set field SWDNME using a String value.
  */
  public void setSWDNME(String newvalue)
  {
	fieldSWDNME.setString(newvalue);
  }  

  /**
  * Get value of field SWDNME as a String.
  */
  public String getSWDNME()
  {
	return fieldSWDNME.getString();
  }  

  /**
  * Set field SWDCCY using a String value.
  */
  public void setSWDCCY(String newvalue)
  {
	fieldSWDCCY.setString(newvalue);
  }  

  /**
  * Get value of field SWDCCY as a String.
  */
  public String getSWDCCY()
  {
	return fieldSWDCCY.getString();
  }  

  /**
  * Set field SWDGLL using a String value.
  */
  public void setSWDGLL(String newvalue)
  {
	fieldSWDGLL.setString(newvalue);
  }  

  /**
  * Get value of field SWDGLL as a String.
  */
  public String getSWDGLL()
  {
	return fieldSWDGLL.getString();
  }  

  /**
  * Set field SWDTDF using a String value.
  */
  public void setSWDTDF(String newvalue)
  {
	fieldSWDTDF.setString(newvalue);
  }  

  /**
  * Get value of field SWDTDF as a String.
  */
  public String getSWDTDF()
  {
	return fieldSWDTDF.getString();
  }  

  /**
  * Set field SWDCUN using a String value.
  */
  public void setSWDCUN(String newvalue)
  {
	fieldSWDCUN.setString(newvalue);
  }  

  /**
  * Get value of field SWDCUN as a String.
  */
  public String getSWDCUN()
  {
	return fieldSWDCUN.getString();
  }  

  /**
  * Set numeric field SWDCUN using a BigDecimal value.
  */
  public void setSWDCUN(BigDecimal newvalue)
  {
	fieldSWDCUN.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCUN()
  {
	return fieldSWDCUN.getBigDecimal();
  }  

  /**
  * Set field SWDNMC using a String value.
  */
  public void setSWDNMC(String newvalue)
  {
	fieldSWDNMC.setString(newvalue);
  }  

  /**
  * Get value of field SWDNMC as a String.
  */
  public String getSWDNMC()
  {
	return fieldSWDNMC.getString();
  }  

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
	fieldSWDREC.setString(newvalue);
  }  

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
	return fieldSWDREC.getString();
  }  

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
	fieldSWDREC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
	return fieldSWDREC.getBigDecimal();
  }  

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
	fieldSWDOPE.setString(newvalue);
  }  

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
	return fieldSWDOPE.getString();
  }  

}