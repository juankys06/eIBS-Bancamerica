package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECD001302 physical file definition.
* 
* File level identifier is 1070227175533.
* Record format level identifier is 358EDCA93193A.
*/

public class ECD001302Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CDRTAR",
                                     "E02CDRCID",
                                     "E02CDRCUN",
                                     "E02CDRNAM",
                                     "E02CDRDLY",
                                     "E02CDRDLM",
                                     "E02CDRDLD",
                                     "E02CDREXY",
                                     "E02CDREXM",
                                     "E02CDREXD",
                                     "E02FDESDE",
                                     "E02FHASTA"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CDRTAR",
                                   "E02CDRCID",
                                   "E02CDRCUN",
                                   "E02CDRNAM",
                                   "E02CDRDLY",
                                   "E02CDRDLM",
                                   "E02CDRDLD",
                                   "E02CDREXY",
                                   "E02CDREXM",
                                   "E02CDREXD",
                                   "E02FDESDE",
                                   "E02FHASTA"
                                 };
  final static String fid = "1070227175533";
  final static String rid = "358EDCA93193A";
  final static String fmtname = "ECD001302";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02CDRTAR = null;
  private CharacterField fieldE02CDRCID = null;
  private DecimalField fieldE02CDRCUN = null;
  private CharacterField fieldE02CDRNAM = null;
  private DecimalField fieldE02CDRDLY = null;
  private DecimalField fieldE02CDRDLM = null;
  private DecimalField fieldE02CDRDLD = null;
  private DecimalField fieldE02CDREXY = null;
  private DecimalField fieldE02CDREXM = null;
  private DecimalField fieldE02CDREXD = null;
  private DecimalField fieldE02FDESDE = null;
  private DecimalField fieldE02FHASTA = null;

  /**
  * Constructor for ECD001302Message.
  */
  public ECD001302Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 177;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CDRTAR =
    new CharacterField(message, HEADERSIZE + 42, 20, "E02CDRTAR");
    fields[10] = fieldE02CDRCID =
    new CharacterField(message, HEADERSIZE + 62, 20, "E02CDRCID");
    fields[11] = fieldE02CDRCUN =
    new DecimalField(message, HEADERSIZE + 82, 10, 0, "E02CDRCUN");
    fields[12] = fieldE02CDRNAM =
    new CharacterField(message, HEADERSIZE + 92, 45, "E02CDRNAM");
    fields[13] = fieldE02CDRDLY =
    new DecimalField(message, HEADERSIZE + 137, 5, 0, "E02CDRDLY");
    fields[14] = fieldE02CDRDLM =
    new DecimalField(message, HEADERSIZE + 142, 3, 0, "E02CDRDLM");
    fields[15] = fieldE02CDRDLD =
    new DecimalField(message, HEADERSIZE + 145, 3, 0, "E02CDRDLD");
    fields[16] = fieldE02CDREXY =
    new DecimalField(message, HEADERSIZE + 148, 5, 0, "E02CDREXY");
    fields[17] = fieldE02CDREXM =
    new DecimalField(message, HEADERSIZE + 153, 3, 0, "E02CDREXM");
    fields[18] = fieldE02CDREXD =
    new DecimalField(message, HEADERSIZE + 156, 3, 0, "E02CDREXD");
    fields[19] = fieldE02FDESDE =
    new DecimalField(message, HEADERSIZE + 159, 9, 0, "E02FDESDE");
    fields[20] = fieldE02FHASTA =
    new DecimalField(message, HEADERSIZE + 168, 9, 0, "E02FHASTA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CDRTAR using a String value.
  */
  public void setE02CDRTAR(String newvalue)
  {
    fieldE02CDRTAR.setString(newvalue);
  }

  /**
  * Get value of field E02CDRTAR as a String.
  */
  public String getE02CDRTAR()
  {
    return fieldE02CDRTAR.getString();
  }

  /**
  * Set field E02CDRCID using a String value.
  */
  public void setE02CDRCID(String newvalue)
  {
    fieldE02CDRCID.setString(newvalue);
  }

  /**
  * Get value of field E02CDRCID as a String.
  */
  public String getE02CDRCID()
  {
    return fieldE02CDRCID.getString();
  }

  /**
  * Set field E02CDRCUN using a String value.
  */
  public void setE02CDRCUN(String newvalue)
  {
    fieldE02CDRCUN.setString(newvalue);
  }

  /**
  * Get value of field E02CDRCUN as a String.
  */
  public String getE02CDRCUN()
  {
    return fieldE02CDRCUN.getString();
  }

  /**
  * Set numeric field E02CDRCUN using a BigDecimal value.
  */
  public void setE02CDRCUN(BigDecimal newvalue)
  {
    fieldE02CDRCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDRCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDRCUN()
  {
    return fieldE02CDRCUN.getBigDecimal();
  }

  /**
  * Set field E02CDRNAM using a String value.
  */
  public void setE02CDRNAM(String newvalue)
  {
    fieldE02CDRNAM.setString(newvalue);
  }

  /**
  * Get value of field E02CDRNAM as a String.
  */
  public String getE02CDRNAM()
  {
    return fieldE02CDRNAM.getString();
  }

  /**
  * Set field E02CDRDLY using a String value.
  */
  public void setE02CDRDLY(String newvalue)
  {
    fieldE02CDRDLY.setString(newvalue);
  }

  /**
  * Get value of field E02CDRDLY as a String.
  */
  public String getE02CDRDLY()
  {
    return fieldE02CDRDLY.getString();
  }

  /**
  * Set numeric field E02CDRDLY using a BigDecimal value.
  */
  public void setE02CDRDLY(BigDecimal newvalue)
  {
    fieldE02CDRDLY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDRDLY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDRDLY()
  {
    return fieldE02CDRDLY.getBigDecimal();
  }

  /**
  * Set field E02CDRDLM using a String value.
  */
  public void setE02CDRDLM(String newvalue)
  {
    fieldE02CDRDLM.setString(newvalue);
  }

  /**
  * Get value of field E02CDRDLM as a String.
  */
  public String getE02CDRDLM()
  {
    return fieldE02CDRDLM.getString();
  }

  /**
  * Set numeric field E02CDRDLM using a BigDecimal value.
  */
  public void setE02CDRDLM(BigDecimal newvalue)
  {
    fieldE02CDRDLM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDRDLM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDRDLM()
  {
    return fieldE02CDRDLM.getBigDecimal();
  }

  /**
  * Set field E02CDRDLD using a String value.
  */
  public void setE02CDRDLD(String newvalue)
  {
    fieldE02CDRDLD.setString(newvalue);
  }

  /**
  * Get value of field E02CDRDLD as a String.
  */
  public String getE02CDRDLD()
  {
    return fieldE02CDRDLD.getString();
  }

  /**
  * Set numeric field E02CDRDLD using a BigDecimal value.
  */
  public void setE02CDRDLD(BigDecimal newvalue)
  {
    fieldE02CDRDLD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDRDLD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDRDLD()
  {
    return fieldE02CDRDLD.getBigDecimal();
  }

  /**
  * Set field E02CDREXY using a String value.
  */
  public void setE02CDREXY(String newvalue)
  {
    fieldE02CDREXY.setString(newvalue);
  }

  /**
  * Get value of field E02CDREXY as a String.
  */
  public String getE02CDREXY()
  {
    return fieldE02CDREXY.getString();
  }

  /**
  * Set numeric field E02CDREXY using a BigDecimal value.
  */
  public void setE02CDREXY(BigDecimal newvalue)
  {
    fieldE02CDREXY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDREXY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDREXY()
  {
    return fieldE02CDREXY.getBigDecimal();
  }

  /**
  * Set field E02CDREXM using a String value.
  */
  public void setE02CDREXM(String newvalue)
  {
    fieldE02CDREXM.setString(newvalue);
  }

  /**
  * Get value of field E02CDREXM as a String.
  */
  public String getE02CDREXM()
  {
    return fieldE02CDREXM.getString();
  }

  /**
  * Set numeric field E02CDREXM using a BigDecimal value.
  */
  public void setE02CDREXM(BigDecimal newvalue)
  {
    fieldE02CDREXM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDREXM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDREXM()
  {
    return fieldE02CDREXM.getBigDecimal();
  }

  /**
  * Set field E02CDREXD using a String value.
  */
  public void setE02CDREXD(String newvalue)
  {
    fieldE02CDREXD.setString(newvalue);
  }

  /**
  * Get value of field E02CDREXD as a String.
  */
  public String getE02CDREXD()
  {
    return fieldE02CDREXD.getString();
  }

  /**
  * Set numeric field E02CDREXD using a BigDecimal value.
  */
  public void setE02CDREXD(BigDecimal newvalue)
  {
    fieldE02CDREXD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDREXD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDREXD()
  {
    return fieldE02CDREXD.getBigDecimal();
  }

  /**
  * Set field E02FDESDE using a String value.
  */
  public void setE02FDESDE(String newvalue)
  {
    fieldE02FDESDE.setString(newvalue);
  }

  /**
  * Get value of field E02FDESDE as a String.
  */
  public String getE02FDESDE()
  {
    return fieldE02FDESDE.getString();
  }

  /**
  * Set numeric field E02FDESDE using a BigDecimal value.
  */
  public void setE02FDESDE(BigDecimal newvalue)
  {
    fieldE02FDESDE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FDESDE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FDESDE()
  {
    return fieldE02FDESDE.getBigDecimal();
  }

  /**
  * Set field E02FHASTA using a String value.
  */
  public void setE02FHASTA(String newvalue)
  {
    fieldE02FHASTA.setString(newvalue);
  }

  /**
  * Get value of field E02FHASTA as a String.
  */
  public String getE02FHASTA()
  {
    return fieldE02FHASTA.getString();
  }

  /**
  * Set numeric field E02FHASTA using a BigDecimal value.
  */
  public void setE02FHASTA(BigDecimal newvalue)
  {
    fieldE02FHASTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FHASTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FHASTA()
  {
    return fieldE02FHASTA.getBigDecimal();
  }

}
