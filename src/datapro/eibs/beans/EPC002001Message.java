package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPC002001 physical file definition.
* 
* File level identifier is 1080220203736.
* Record format level identifier is 42E8DEB5B6843.
*/

public class EPC002001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PCMBNK",
                                     "E01PCMBRN",
                                     "E01PCMCCY",
                                     "E01PCMGLN",
                                     "E01PCMACC",
                                     "E01PCMCCN",
                                     "E01PCMCUN",
                                     "E01PCMNME",
                                     "E01PCMAD1",
                                     "E01PCMAD2",
                                     "E01PCMAD3",
                                     "E01PCMAD4",
                                     "E01PCMNRG",
                                     "E01PCMACD",
                                     "E01PCMCLS",
                                     "E01PCMPRO",
                                     "E01PCMPTY",
                                     "E01PCMPRD",
                                     "E01PCMATY",
                                     "E01PCMVPR",
                                     "E01PCMVSL",
                                     "E01PCMPOL",
                                     "E01PCMUNI",
                                     "E01PCMTUN",
                                     "E01PCMRMK",
                                     "D01PCMCUN",
                                     "D01PCMPRO"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PCMBNK",
                                   "E01PCMBRN",
                                   "E01PCMCCY",
                                   "E01PCMGLN",
                                   "E01PCMACC",
                                   "E01PCMCCN",
                                   "E01PCMCUN",
                                   "E01PCMNME",
                                   "E01PCMAD1",
                                   "E01PCMAD2",
                                   "E01PCMAD3",
                                   "E01PCMAD4",
                                   "E01PCMNRG",
                                   "E01PCMACD",
                                   "E01PCMCLS",
                                   "E01PCMPRO",
                                   "E01PCMPTY",
                                   "E01PCMPRD",
                                   "E01PCMATY",
                                   "E01PCMVPR",
                                   "E01PCMVSL",
                                   "E01PCMPOL",
                                   "E01PCMUNI",
                                   "E01PCMTUN",
                                   "E01PCMRMK",
                                   "D01PCMCUN",
                                   "D01PCMPRO"
                                 };
  final static String fid = "1080220203736";
  final static String rid = "42E8DEB5B6843";
  final static String fmtname = "EPC002001";
  final int FIELDCOUNT = 36;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01PCMBNK = null;
  private DecimalField fieldE01PCMBRN = null;
  private CharacterField fieldE01PCMCCY = null;
  private DecimalField fieldE01PCMGLN = null;
  private DecimalField fieldE01PCMACC = null;
  private DecimalField fieldE01PCMCCN = null;
  private DecimalField fieldE01PCMCUN = null;
  private CharacterField fieldE01PCMNME = null;
  private CharacterField fieldE01PCMAD1 = null;
  private CharacterField fieldE01PCMAD2 = null;
  private CharacterField fieldE01PCMAD3 = null;
  private CharacterField fieldE01PCMAD4 = null;
  private CharacterField fieldE01PCMNRG = null;
  private CharacterField fieldE01PCMACD = null;
  private DecimalField fieldE01PCMCLS = null;
  private CharacterField fieldE01PCMPRO = null;
  private CharacterField fieldE01PCMPTY = null;
  private CharacterField fieldE01PCMPRD = null;
  private CharacterField fieldE01PCMATY = null;
  private DecimalField fieldE01PCMVPR = null;
  private DecimalField fieldE01PCMVSL = null;
  private DecimalField fieldE01PCMPOL = null;
  private DecimalField fieldE01PCMUNI = null;
  private CharacterField fieldE01PCMTUN = null;
  private CharacterField fieldE01PCMRMK = null;
  private CharacterField fieldD01PCMCUN = null;
  private CharacterField fieldD01PCMPRO = null;

  /**
  * Constructor for EPC002001Message.
  */
  public EPC002001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 467;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PCMBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01PCMBNK");
    fields[10] = fieldE01PCMBRN =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "E01PCMBRN");
    fields[11] = fieldE01PCMCCY =
    new CharacterField(message, HEADERSIZE + 48, 3, "E01PCMCCY");
    fields[12] = fieldE01PCMGLN =
    new DecimalField(message, HEADERSIZE + 51, 17, 0, "E01PCMGLN");
    fields[13] = fieldE01PCMACC =
    new DecimalField(message, HEADERSIZE + 68, 13, 0, "E01PCMACC");
    fields[14] = fieldE01PCMCCN =
    new DecimalField(message, HEADERSIZE + 81, 9, 0, "E01PCMCCN");
    fields[15] = fieldE01PCMCUN =
    new DecimalField(message, HEADERSIZE + 90, 10, 0, "E01PCMCUN");
    fields[16] = fieldE01PCMNME =
    new CharacterField(message, HEADERSIZE + 100, 45, "E01PCMNME");
    fields[17] = fieldE01PCMAD1 =
    new CharacterField(message, HEADERSIZE + 145, 35, "E01PCMAD1");
    fields[18] = fieldE01PCMAD2 =
    new CharacterField(message, HEADERSIZE + 180, 35, "E01PCMAD2");
    fields[19] = fieldE01PCMAD3 =
    new CharacterField(message, HEADERSIZE + 215, 35, "E01PCMAD3");
    fields[20] = fieldE01PCMAD4 =
    new CharacterField(message, HEADERSIZE + 250, 35, "E01PCMAD4");
    fields[21] = fieldE01PCMNRG =
    new CharacterField(message, HEADERSIZE + 285, 15, "E01PCMNRG");
    fields[22] = fieldE01PCMACD =
    new CharacterField(message, HEADERSIZE + 300, 2, "E01PCMACD");
    fields[23] = fieldE01PCMCLS =
    new DecimalField(message, HEADERSIZE + 302, 3, 0, "E01PCMCLS");
    fields[24] = fieldE01PCMPRO =
    new CharacterField(message, HEADERSIZE + 305, 4, "E01PCMPRO");
    fields[25] = fieldE01PCMPTY =
    new CharacterField(message, HEADERSIZE + 309, 4, "E01PCMPTY");
    fields[26] = fieldE01PCMPRD =
    new CharacterField(message, HEADERSIZE + 313, 4, "E01PCMPRD");
    fields[27] = fieldE01PCMATY =
    new CharacterField(message, HEADERSIZE + 317, 4, "E01PCMATY");
    fields[28] = fieldE01PCMVPR =
    new DecimalField(message, HEADERSIZE + 321, 17, 2, "E01PCMVPR");
    fields[29] = fieldE01PCMVSL =
    new DecimalField(message, HEADERSIZE + 338, 17, 2, "E01PCMVSL");
    fields[30] = fieldE01PCMPOL =
    new DecimalField(message, HEADERSIZE + 355, 3, 0, "E01PCMPOL");
    fields[31] = fieldE01PCMUNI =
    new DecimalField(message, HEADERSIZE + 358, 5, 0, "E01PCMUNI");
    fields[32] = fieldE01PCMTUN =
    new CharacterField(message, HEADERSIZE + 363, 4, "E01PCMTUN");
    fields[33] = fieldE01PCMRMK =
    new CharacterField(message, HEADERSIZE + 367, 20, "E01PCMRMK");
    fields[34] = fieldD01PCMCUN =
    new CharacterField(message, HEADERSIZE + 387, 45, "D01PCMCUN");
    fields[35] = fieldD01PCMPRO =
    new CharacterField(message, HEADERSIZE + 432, 35, "D01PCMPRO");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PCMBNK using a String value.
  */
  public void setE01PCMBNK(String newvalue)
  {
    fieldE01PCMBNK.setString(newvalue);
  }

  /**
  * Get value of field E01PCMBNK as a String.
  */
  public String getE01PCMBNK()
  {
    return fieldE01PCMBNK.getString();
  }

  /**
  * Set field E01PCMBRN using a String value.
  */
  public void setE01PCMBRN(String newvalue)
  {
    fieldE01PCMBRN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMBRN as a String.
  */
  public String getE01PCMBRN()
  {
    return fieldE01PCMBRN.getString();
  }

  /**
  * Set numeric field E01PCMBRN using a BigDecimal value.
  */
  public void setE01PCMBRN(BigDecimal newvalue)
  {
    fieldE01PCMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMBRN()
  {
    return fieldE01PCMBRN.getBigDecimal();
  }

  /**
  * Set field E01PCMCCY using a String value.
  */
  public void setE01PCMCCY(String newvalue)
  {
    fieldE01PCMCCY.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCCY as a String.
  */
  public String getE01PCMCCY()
  {
    return fieldE01PCMCCY.getString();
  }

  /**
  * Set field E01PCMGLN using a String value.
  */
  public void setE01PCMGLN(String newvalue)
  {
    fieldE01PCMGLN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMGLN as a String.
  */
  public String getE01PCMGLN()
  {
    return fieldE01PCMGLN.getString();
  }

  /**
  * Set numeric field E01PCMGLN using a BigDecimal value.
  */
  public void setE01PCMGLN(BigDecimal newvalue)
  {
    fieldE01PCMGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMGLN()
  {
    return fieldE01PCMGLN.getBigDecimal();
  }

  /**
  * Set field E01PCMACC using a String value.
  */
  public void setE01PCMACC(String newvalue)
  {
    fieldE01PCMACC.setString(newvalue);
  }

  /**
  * Get value of field E01PCMACC as a String.
  */
  public String getE01PCMACC()
  {
    return fieldE01PCMACC.getString();
  }

  /**
  * Set numeric field E01PCMACC using a BigDecimal value.
  */
  public void setE01PCMACC(BigDecimal newvalue)
  {
    fieldE01PCMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMACC()
  {
    return fieldE01PCMACC.getBigDecimal();
  }

  /**
  * Set field E01PCMCCN using a String value.
  */
  public void setE01PCMCCN(String newvalue)
  {
    fieldE01PCMCCN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCCN as a String.
  */
  public String getE01PCMCCN()
  {
    return fieldE01PCMCCN.getString();
  }

  /**
  * Set numeric field E01PCMCCN using a BigDecimal value.
  */
  public void setE01PCMCCN(BigDecimal newvalue)
  {
    fieldE01PCMCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMCCN()
  {
    return fieldE01PCMCCN.getBigDecimal();
  }

  /**
  * Set field E01PCMCUN using a String value.
  */
  public void setE01PCMCUN(String newvalue)
  {
    fieldE01PCMCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCUN as a String.
  */
  public String getE01PCMCUN()
  {
    return fieldE01PCMCUN.getString();
  }

  /**
  * Set numeric field E01PCMCUN using a BigDecimal value.
  */
  public void setE01PCMCUN(BigDecimal newvalue)
  {
    fieldE01PCMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMCUN()
  {
    return fieldE01PCMCUN.getBigDecimal();
  }

  /**
  * Set field E01PCMNME using a String value.
  */
  public void setE01PCMNME(String newvalue)
  {
    fieldE01PCMNME.setString(newvalue);
  }

  /**
  * Get value of field E01PCMNME as a String.
  */
  public String getE01PCMNME()
  {
    return fieldE01PCMNME.getString();
  }

  /**
  * Set field E01PCMAD1 using a String value.
  */
  public void setE01PCMAD1(String newvalue)
  {
    fieldE01PCMAD1.setString(newvalue);
  }

  /**
  * Get value of field E01PCMAD1 as a String.
  */
  public String getE01PCMAD1()
  {
    return fieldE01PCMAD1.getString();
  }

  /**
  * Set field E01PCMAD2 using a String value.
  */
  public void setE01PCMAD2(String newvalue)
  {
    fieldE01PCMAD2.setString(newvalue);
  }

  /**
  * Get value of field E01PCMAD2 as a String.
  */
  public String getE01PCMAD2()
  {
    return fieldE01PCMAD2.getString();
  }

  /**
  * Set field E01PCMAD3 using a String value.
  */
  public void setE01PCMAD3(String newvalue)
  {
    fieldE01PCMAD3.setString(newvalue);
  }

  /**
  * Get value of field E01PCMAD3 as a String.
  */
  public String getE01PCMAD3()
  {
    return fieldE01PCMAD3.getString();
  }

  /**
  * Set field E01PCMAD4 using a String value.
  */
  public void setE01PCMAD4(String newvalue)
  {
    fieldE01PCMAD4.setString(newvalue);
  }

  /**
  * Get value of field E01PCMAD4 as a String.
  */
  public String getE01PCMAD4()
  {
    return fieldE01PCMAD4.getString();
  }

  /**
  * Set field E01PCMNRG using a String value.
  */
  public void setE01PCMNRG(String newvalue)
  {
    fieldE01PCMNRG.setString(newvalue);
  }

  /**
  * Get value of field E01PCMNRG as a String.
  */
  public String getE01PCMNRG()
  {
    return fieldE01PCMNRG.getString();
  }

  /**
  * Set field E01PCMACD using a String value.
  */
  public void setE01PCMACD(String newvalue)
  {
    fieldE01PCMACD.setString(newvalue);
  }

  /**
  * Get value of field E01PCMACD as a String.
  */
  public String getE01PCMACD()
  {
    return fieldE01PCMACD.getString();
  }

  /**
  * Set field E01PCMCLS using a String value.
  */
  public void setE01PCMCLS(String newvalue)
  {
    fieldE01PCMCLS.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCLS as a String.
  */
  public String getE01PCMCLS()
  {
    return fieldE01PCMCLS.getString();
  }

  /**
  * Set numeric field E01PCMCLS using a BigDecimal value.
  */
  public void setE01PCMCLS(BigDecimal newvalue)
  {
    fieldE01PCMCLS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMCLS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMCLS()
  {
    return fieldE01PCMCLS.getBigDecimal();
  }

  /**
  * Set field E01PCMPRO using a String value.
  */
  public void setE01PCMPRO(String newvalue)
  {
    fieldE01PCMPRO.setString(newvalue);
  }

  /**
  * Get value of field E01PCMPRO as a String.
  */
  public String getE01PCMPRO()
  {
    return fieldE01PCMPRO.getString();
  }

  /**
  * Set field E01PCMPTY using a String value.
  */
  public void setE01PCMPTY(String newvalue)
  {
    fieldE01PCMPTY.setString(newvalue);
  }

  /**
  * Get value of field E01PCMPTY as a String.
  */
  public String getE01PCMPTY()
  {
    return fieldE01PCMPTY.getString();
  }

  /**
  * Set field E01PCMPRD using a String value.
  */
  public void setE01PCMPRD(String newvalue)
  {
    fieldE01PCMPRD.setString(newvalue);
  }

  /**
  * Get value of field E01PCMPRD as a String.
  */
  public String getE01PCMPRD()
  {
    return fieldE01PCMPRD.getString();
  }

  /**
  * Set field E01PCMATY using a String value.
  */
  public void setE01PCMATY(String newvalue)
  {
    fieldE01PCMATY.setString(newvalue);
  }

  /**
  * Get value of field E01PCMATY as a String.
  */
  public String getE01PCMATY()
  {
    return fieldE01PCMATY.getString();
  }

  /**
  * Set field E01PCMVPR using a String value.
  */
  public void setE01PCMVPR(String newvalue)
  {
    fieldE01PCMVPR.setString(newvalue);
  }

  /**
  * Get value of field E01PCMVPR as a String.
  */
  public String getE01PCMVPR()
  {
    return fieldE01PCMVPR.getString();
  }

  /**
  * Set numeric field E01PCMVPR using a BigDecimal value.
  */
  public void setE01PCMVPR(BigDecimal newvalue)
  {
    fieldE01PCMVPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMVPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMVPR()
  {
    return fieldE01PCMVPR.getBigDecimal();
  }

  /**
  * Set field E01PCMVSL using a String value.
  */
  public void setE01PCMVSL(String newvalue)
  {
    fieldE01PCMVSL.setString(newvalue);
  }

  /**
  * Get value of field E01PCMVSL as a String.
  */
  public String getE01PCMVSL()
  {
    return fieldE01PCMVSL.getString();
  }

  /**
  * Set numeric field E01PCMVSL using a BigDecimal value.
  */
  public void setE01PCMVSL(BigDecimal newvalue)
  {
    fieldE01PCMVSL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMVSL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMVSL()
  {
    return fieldE01PCMVSL.getBigDecimal();
  }

  /**
  * Set field E01PCMPOL using a String value.
  */
  public void setE01PCMPOL(String newvalue)
  {
    fieldE01PCMPOL.setString(newvalue);
  }

  /**
  * Get value of field E01PCMPOL as a String.
  */
  public String getE01PCMPOL()
  {
    return fieldE01PCMPOL.getString();
  }

  /**
  * Set numeric field E01PCMPOL using a BigDecimal value.
  */
  public void setE01PCMPOL(BigDecimal newvalue)
  {
    fieldE01PCMPOL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMPOL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMPOL()
  {
    return fieldE01PCMPOL.getBigDecimal();
  }

  /**
  * Set field E01PCMUNI using a String value.
  */
  public void setE01PCMUNI(String newvalue)
  {
    fieldE01PCMUNI.setString(newvalue);
  }

  /**
  * Get value of field E01PCMUNI as a String.
  */
  public String getE01PCMUNI()
  {
    return fieldE01PCMUNI.getString();
  }

  /**
  * Set numeric field E01PCMUNI using a BigDecimal value.
  */
  public void setE01PCMUNI(BigDecimal newvalue)
  {
    fieldE01PCMUNI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMUNI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMUNI()
  {
    return fieldE01PCMUNI.getBigDecimal();
  }

  /**
  * Set field E01PCMTUN using a String value.
  */
  public void setE01PCMTUN(String newvalue)
  {
    fieldE01PCMTUN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMTUN as a String.
  */
  public String getE01PCMTUN()
  {
    return fieldE01PCMTUN.getString();
  }

  /**
  * Set field E01PCMRMK using a String value.
  */
  public void setE01PCMRMK(String newvalue)
  {
    fieldE01PCMRMK.setString(newvalue);
  }

  /**
  * Get value of field E01PCMRMK as a String.
  */
  public String getE01PCMRMK()
  {
    return fieldE01PCMRMK.getString();
  }

  /**
  * Set field D01PCMCUN using a String value.
  */
  public void setD01PCMCUN(String newvalue)
  {
    fieldD01PCMCUN.setString(newvalue);
  }

  /**
  * Get value of field D01PCMCUN as a String.
  */
  public String getD01PCMCUN()
  {
    return fieldD01PCMCUN.getString();
  }

  /**
  * Set field D01PCMPRO using a String value.
  */
  public void setD01PCMPRO(String newvalue)
  {
    fieldD01PCMPRO.setString(newvalue);
  }

  /**
  * Get value of field D01PCMPRO as a String.
  */
  public String getD01PCMPRO()
  {
    return fieldD01PCMPRO.getString();
  }

}
