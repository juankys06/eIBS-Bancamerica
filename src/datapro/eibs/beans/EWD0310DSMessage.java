package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0310DS physical file definition.
* 
* File level identifier is 1011206113348.
* Record format level identifier is 3E10DC112FE4A.
*/

public class EWD0310DSMessage extends MessageRecord
{
  final int FIELDCOUNT = 15;
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDISI = null;
  private CharacterField fieldSWDSER = null;
  private CharacterField fieldSWDTYP = null;
  private DecimalField fieldSWDAPG = null;
  private DecimalField fieldSWDMPG = null;
  private DecimalField fieldSWDDPG = null;
  private CharacterField fieldSWDSTS = null;
  private DecimalField fieldSWDAMT = null;
  private DecimalField fieldSWDCAN = null;
  private DecimalField fieldSWDRTE = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0310DSMessage.
  */
  public EWD0310DSMessage()
  {
	createFields();
	initialize();
  }  

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
	recordsize = 91;
	fileid = "1011206113348";
	recordid = "3E10DC112FE4A";
	message = new byte[getByteLength()];
	formatname = "EWD0310DS";
	fieldnames = new String[FIELDCOUNT];
	tagnames = new String[FIELDCOUNT];
	fields = new MessageField[FIELDCOUNT];

	fieldnames[0] = "RWDUSR";
	tagnames[0] = "RWDUSR";
	fields[0] = fieldRWDUSR =
	new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
	fieldnames[1] = "RWDTYP";
	tagnames[1] = "RWDTYP";
	fields[1] = fieldRWDTYP =
	new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
	fieldnames[2] = "RWDFRC";
	tagnames[2] = "RWDFRC";
	fields[2] = fieldRWDFRC =
	new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
	fieldnames[3] = "SWDISI";
	tagnames[3] = "SWDISI";
	fields[3] = fieldSWDISI =
	new CharacterField(message, HEADERSIZE + 19, 12, "SWDISI");
	fieldnames[4] = "SWDSER";
	tagnames[4] = "SWDSER";
	fields[4] = fieldSWDSER =
	new CharacterField(message, HEADERSIZE + 31, 4, "SWDSER");
	fieldnames[5] = "SWDTYP";
	tagnames[5] = "SWDTYP";
	fields[5] = fieldSWDTYP =
	new CharacterField(message, HEADERSIZE + 35, 1, "SWDTYP");
	fieldnames[6] = "SWDAPG";
	tagnames[6] = "SWDAPG";
	fields[6] = fieldSWDAPG =
	new DecimalField(message, HEADERSIZE + 36, 5, 0, "SWDAPG");
	fieldnames[7] = "SWDMPG";
	tagnames[7] = "SWDMPG";
	fields[7] = fieldSWDMPG =
	new DecimalField(message, HEADERSIZE + 41, 3, 0, "SWDMPG");
	fieldnames[8] = "SWDDPG";
	tagnames[8] = "SWDDPG";
	fields[8] = fieldSWDDPG =
	new DecimalField(message, HEADERSIZE + 44, 3, 0, "SWDDPG");
	fieldnames[9] = "SWDSTS";
	tagnames[9] = "SWDSTS";
	fields[9] = fieldSWDSTS =
	new CharacterField(message, HEADERSIZE + 47, 1, "SWDSTS");
	fieldnames[10] = "SWDAMT";
	tagnames[10] = "SWDAMT";
	fields[10] = fieldSWDAMT =
	new DecimalField(message, HEADERSIZE + 48, 17, 2, "SWDAMT");
	fieldnames[11] = "SWDCAN";
	tagnames[11] = "SWDCAN";
	fields[11] = fieldSWDCAN =
	new DecimalField(message, HEADERSIZE + 65, 6, 0, "SWDCAN");
	fieldnames[12] = "SWDRTE";
	tagnames[12] = "SWDRTE";
	fields[12] = fieldSWDRTE =
	new DecimalField(message, HEADERSIZE + 71, 11, 6, "SWDRTE");
	fieldnames[13] = "SWDREC";
	tagnames[13] = "SWDREC";
	fields[13] = fieldSWDREC =
	new DecimalField(message, HEADERSIZE + 82, 8, 0, "SWDREC");
	fieldnames[14] = "SWDOPE";
	tagnames[14] = "SWDOPE";
	fields[14] = fieldSWDOPE =
	new CharacterField(message, HEADERSIZE + 90, 1, "SWDOPE");
  }  

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
	fieldRWDUSR.setString(newvalue);
  }  

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
	return fieldRWDUSR.getString();
  }  

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
	fieldRWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
	return fieldRWDTYP.getString();
  }  

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
	fieldRWDFRC.setString(newvalue);
  }  

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
	return fieldRWDFRC.getString();
  }  

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
	fieldRWDFRC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
	return fieldRWDFRC.getBigDecimal();
  }  

  /**
  * Set field SWDISI using a String value.
  */
  public void setSWDISI(String newvalue)
  {
	fieldSWDISI.setString(newvalue);
  }  

  /**
  * Get value of field SWDISI as a String.
  */
  public String getSWDISI()
  {
	return fieldSWDISI.getString();
  }  

  /**
  * Set field SWDSER using a String value.
  */
  public void setSWDSER(String newvalue)
  {
	fieldSWDSER.setString(newvalue);
  }  

  /**
  * Get value of field SWDSER as a String.
  */
  public String getSWDSER()
  {
	return fieldSWDSER.getString();
  }  

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
	fieldSWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
	return fieldSWDTYP.getString();
  }  

  /**
  * Set field SWDAPG using a String value.
  */
  public void setSWDAPG(String newvalue)
  {
	fieldSWDAPG.setString(newvalue);
  }  

  /**
  * Get value of field SWDAPG as a String.
  */
  public String getSWDAPG()
  {
	return fieldSWDAPG.getString();
  }  

  /**
  * Set numeric field SWDAPG using a BigDecimal value.
  */
  public void setSWDAPG(BigDecimal newvalue)
  {
	fieldSWDAPG.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDAPG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDAPG()
  {
	return fieldSWDAPG.getBigDecimal();
  }  

  /**
  * Set field SWDMPG using a String value.
  */
  public void setSWDMPG(String newvalue)
  {
	fieldSWDMPG.setString(newvalue);
  }  

  /**
  * Get value of field SWDMPG as a String.
  */
  public String getSWDMPG()
  {
	return fieldSWDMPG.getString();
  }  

  /**
  * Set numeric field SWDMPG using a BigDecimal value.
  */
  public void setSWDMPG(BigDecimal newvalue)
  {
	fieldSWDMPG.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDMPG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDMPG()
  {
	return fieldSWDMPG.getBigDecimal();
  }  

  /**
  * Set field SWDDPG using a String value.
  */
  public void setSWDDPG(String newvalue)
  {
	fieldSWDDPG.setString(newvalue);
  }  

  /**
  * Get value of field SWDDPG as a String.
  */
  public String getSWDDPG()
  {
	return fieldSWDDPG.getString();
  }  

  /**
  * Set numeric field SWDDPG using a BigDecimal value.
  */
  public void setSWDDPG(BigDecimal newvalue)
  {
	fieldSWDDPG.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDDPG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDPG()
  {
	return fieldSWDDPG.getBigDecimal();
  }  

  /**
  * Set field SWDSTS using a String value.
  */
  public void setSWDSTS(String newvalue)
  {
	fieldSWDSTS.setString(newvalue);
  }  

  /**
  * Get value of field SWDSTS as a String.
  */
  public String getSWDSTS()
  {
	return fieldSWDSTS.getString();
  }  

  /**
  * Set field SWDAMT using a String value.
  */
  public void setSWDAMT(String newvalue)
  {
	fieldSWDAMT.setString(newvalue);
  }  

  /**
  * Get value of field SWDAMT as a String.
  */
  public String getSWDAMT()
  {
	return fieldSWDAMT.getString();
  }  

  /**
  * Set numeric field SWDAMT using a BigDecimal value.
  */
  public void setSWDAMT(BigDecimal newvalue)
  {
	fieldSWDAMT.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDAMT()
  {
	return fieldSWDAMT.getBigDecimal();
  }  

  /**
  * Set field SWDCAN using a String value.
  */
  public void setSWDCAN(String newvalue)
  {
	fieldSWDCAN.setString(newvalue);
  }  

  /**
  * Get value of field SWDCAN as a String.
  */
  public String getSWDCAN()
  {
	return fieldSWDCAN.getString();
  }  

  /**
  * Set numeric field SWDCAN using a BigDecimal value.
  */
  public void setSWDCAN(BigDecimal newvalue)
  {
	fieldSWDCAN.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDCAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCAN()
  {
	return fieldSWDCAN.getBigDecimal();
  }  

  /**
  * Set field SWDRTE using a String value.
  */
  public void setSWDRTE(String newvalue)
  {
	fieldSWDRTE.setString(newvalue);
  }  

  /**
  * Get value of field SWDRTE as a String.
  */
  public String getSWDRTE()
  {
	return fieldSWDRTE.getString();
  }  

  /**
  * Set numeric field SWDRTE using a BigDecimal value.
  */
  public void setSWDRTE(BigDecimal newvalue)
  {
	fieldSWDRTE.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDRTE()
  {
	return fieldSWDRTE.getBigDecimal();
  }  

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
	fieldSWDREC.setString(newvalue);
  }  

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
	return fieldSWDREC.getString();
  }  

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
	fieldSWDREC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
	return fieldSWDREC.getBigDecimal();
  }  

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
	fieldSWDOPE.setString(newvalue);
  }  

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
	return fieldSWDOPE.getString();
  }  

}