package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP000101 physical file definition.
* 
* File level identifier is 1030121191916.
* Record format level identifier is 3F26CC4C040C4.
*/

public class EDP000101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DPGTIT",
                                     "E01DPGCTA",
                                     "E01DPGCOD",
                                     "E01DPGDSC",
                                     "E01DPGOPE",
                                     "E01DPGCF1",
                                     "E01DPGCF2",
                                     "E01DPGCF3",
                                     "E01DPGCF4",
                                     "E01DPGCF5"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DPGTIT",
                                   "E01DPGCTA",
                                   "E01DPGCOD",
                                   "E01DPGDSC",
                                   "E01DPGOPE",
                                   "E01DPGCF1",
                                   "E01DPGCF2",
                                   "E01DPGCF3",
                                   "E01DPGCF4",
                                   "E01DPGCF5"
                                 };
  final static String fid = "1030121191916";
  final static String rid = "3F26CC4C040C4";
  final static String fmtname = "EDP000101";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01DPGTIT = null;
  private DecimalField fieldE01DPGCTA = null;
  private CharacterField fieldE01DPGCOD = null;
  private CharacterField fieldE01DPGDSC = null;
  private CharacterField fieldE01DPGOPE = null;
  private CharacterField fieldE01DPGCF1 = null;
  private CharacterField fieldE01DPGCF2 = null;
  private CharacterField fieldE01DPGCF3 = null;
  private CharacterField fieldE01DPGCF4 = null;
  private CharacterField fieldE01DPGCF5 = null;

  /**
  * Constructor for EDP000101Message.
  */
  public EDP000101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 106;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DPGTIT =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01DPGTIT");
    fields[10] = fieldE01DPGCTA =
    new DecimalField(message, HEADERSIZE + 43, 17, 0, "E01DPGCTA");
    fields[11] = fieldE01DPGCOD =
    new CharacterField(message, HEADERSIZE + 60, 4, "E01DPGCOD");
    fields[12] = fieldE01DPGDSC =
    new CharacterField(message, HEADERSIZE + 64, 30, "E01DPGDSC");
    fields[13] = fieldE01DPGOPE =
    new CharacterField(message, HEADERSIZE + 94, 2, "E01DPGOPE");
    fields[14] = fieldE01DPGCF1 =
    new CharacterField(message, HEADERSIZE + 96, 2, "E01DPGCF1");
    fields[15] = fieldE01DPGCF2 =
    new CharacterField(message, HEADERSIZE + 98, 2, "E01DPGCF2");
    fields[16] = fieldE01DPGCF3 =
    new CharacterField(message, HEADERSIZE + 100, 2, "E01DPGCF3");
    fields[17] = fieldE01DPGCF4 =
    new CharacterField(message, HEADERSIZE + 102, 2, "E01DPGCF4");
    fields[18] = fieldE01DPGCF5 =
    new CharacterField(message, HEADERSIZE + 104, 2, "E01DPGCF5");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DPGTIT using a String value.
  */
  public void setE01DPGTIT(String newvalue)
  {
    fieldE01DPGTIT.setString(newvalue);
  }

  /**
  * Get value of field E01DPGTIT as a String.
  */
  public String getE01DPGTIT()
  {
    return fieldE01DPGTIT.getString();
  }

  /**
  * Set field E01DPGCTA using a String value.
  */
  public void setE01DPGCTA(String newvalue)
  {
    fieldE01DPGCTA.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCTA as a String.
  */
  public String getE01DPGCTA()
  {
    return fieldE01DPGCTA.getString();
  }

  /**
  * Set numeric field E01DPGCTA using a BigDecimal value.
  */
  public void setE01DPGCTA(BigDecimal newvalue)
  {
    fieldE01DPGCTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPGCTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPGCTA()
  {
    return fieldE01DPGCTA.getBigDecimal();
  }

  /**
  * Set field E01DPGCOD using a String value.
  */
  public void setE01DPGCOD(String newvalue)
  {
    fieldE01DPGCOD.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCOD as a String.
  */
  public String getE01DPGCOD()
  {
    return fieldE01DPGCOD.getString();
  }

  /**
  * Set field E01DPGDSC using a String value.
  */
  public void setE01DPGDSC(String newvalue)
  {
    fieldE01DPGDSC.setString(newvalue);
  }

  /**
  * Get value of field E01DPGDSC as a String.
  */
  public String getE01DPGDSC()
  {
    return fieldE01DPGDSC.getString();
  }

  /**
  * Set field E01DPGOPE using a String value.
  */
  public void setE01DPGOPE(String newvalue)
  {
    fieldE01DPGOPE.setString(newvalue);
  }

  /**
  * Get value of field E01DPGOPE as a String.
  */
  public String getE01DPGOPE()
  {
    return fieldE01DPGOPE.getString();
  }

  /**
  * Set field E01DPGCF1 using a String value.
  */
  public void setE01DPGCF1(String newvalue)
  {
    fieldE01DPGCF1.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCF1 as a String.
  */
  public String getE01DPGCF1()
  {
    return fieldE01DPGCF1.getString();
  }

  /**
  * Set field E01DPGCF2 using a String value.
  */
  public void setE01DPGCF2(String newvalue)
  {
    fieldE01DPGCF2.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCF2 as a String.
  */
  public String getE01DPGCF2()
  {
    return fieldE01DPGCF2.getString();
  }

  /**
  * Set field E01DPGCF3 using a String value.
  */
  public void setE01DPGCF3(String newvalue)
  {
    fieldE01DPGCF3.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCF3 as a String.
  */
  public String getE01DPGCF3()
  {
    return fieldE01DPGCF3.getString();
  }

  /**
  * Set field E01DPGCF4 using a String value.
  */
  public void setE01DPGCF4(String newvalue)
  {
    fieldE01DPGCF4.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCF4 as a String.
  */
  public String getE01DPGCF4()
  {
    return fieldE01DPGCF4.getString();
  }

  /**
  * Set field E01DPGCF5 using a String value.
  */
  public void setE01DPGCF5(String newvalue)
  {
    fieldE01DPGCF5.setString(newvalue);
  }

  /**
  * Get value of field E01DPGCF5 as a String.
  */
  public String getE01DPGCF5()
  {
    return fieldE01DPGCF5.getString();
  }

}
