package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EACH14001 physical file definition.
* 
* File level identifier is 1090331154908.
* Record format level identifier is 39772B8D000E1.
*/

public class EACH14001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ACHBNK",
                                     "E01ACHOCD",
                                     "E01ACHNSF",
                                     "E01ACHBAA",
                                     "E01ACHREP",
                                     "E01ACHBAI",
                                     "E01ACHBAT",
                                     "E01ACHIGL",
                                     "E01ACHOGL",
                                     "E01ACHGLN",
                                     "E01ACHNUM",
                                     "E01ACHODF",
                                     "E01ACHGLP",
                                     "E01ACHGLL",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ACHBNK",
                                   "E01ACHOCD",
                                   "E01ACHNSF",
                                   "E01ACHBAA",
                                   "E01ACHREP",
                                   "E01ACHBAI",
                                   "E01ACHBAT",
                                   "E01ACHIGL",
                                   "E01ACHOGL",
                                   "E01ACHGLN",
                                   "E01ACHNUM",
                                   "E01ACHODF",
                                   "E01ACHGLP",
                                   "E01ACHGLL",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1090331154908";
  final static String rid = "39772B8D000E1";
  final static String fmtname = "EACH14001";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01ACHBNK = null;
  private CharacterField fieldE01ACHOCD = null;
  private CharacterField fieldE01ACHNSF = null;
  private CharacterField fieldE01ACHBAA = null;
  private CharacterField fieldE01ACHREP = null;
  private DecimalField fieldE01ACHBAI = null;
  private DecimalField fieldE01ACHBAT = null;
  private DecimalField fieldE01ACHIGL = null;
  private DecimalField fieldE01ACHOGL = null;
  private DecimalField fieldE01ACHGLN = null;
  private DecimalField fieldE01ACHNUM = null;
  private CharacterField fieldE01ACHODF = null;
  private DecimalField fieldE01ACHGLP = null;
  private DecimalField fieldE01ACHGLL = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EACH14001Message.
  */
  public EACH14001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 185;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ACHBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01ACHBNK");
    fields[10] = fieldE01ACHOCD =
    new CharacterField(message, HEADERSIZE + 44, 10, "E01ACHOCD");
    fields[11] = fieldE01ACHNSF =
    new CharacterField(message, HEADERSIZE + 54, 1, "E01ACHNSF");
    fields[12] = fieldE01ACHBAA =
    new CharacterField(message, HEADERSIZE + 55, 1, "E01ACHBAA");
    fields[13] = fieldE01ACHREP =
    new CharacterField(message, HEADERSIZE + 56, 1, "E01ACHREP");
    fields[14] = fieldE01ACHBAI =
    new DecimalField(message, HEADERSIZE + 57, 5, 0, "E01ACHBAI");
    fields[15] = fieldE01ACHBAT =
    new DecimalField(message, HEADERSIZE + 62, 5, 0, "E01ACHBAT");
    fields[16] = fieldE01ACHIGL =
    new DecimalField(message, HEADERSIZE + 67, 17, 0, "E01ACHIGL");
    fields[17] = fieldE01ACHOGL =
    new DecimalField(message, HEADERSIZE + 84, 17, 0, "E01ACHOGL");
    fields[18] = fieldE01ACHGLN =
    new DecimalField(message, HEADERSIZE + 101, 17, 0, "E01ACHGLN");
    fields[19] = fieldE01ACHNUM =
    new DecimalField(message, HEADERSIZE + 118, 13, 0, "E01ACHNUM");
    fields[20] = fieldE01ACHODF =
    new CharacterField(message, HEADERSIZE + 131, 10, "E01ACHODF");
    fields[21] = fieldE01ACHGLP =
    new DecimalField(message, HEADERSIZE + 141, 17, 0, "E01ACHGLP");
    fields[22] = fieldE01ACHGLL =
    new DecimalField(message, HEADERSIZE + 158, 17, 0, "E01ACHGLL");
    fields[23] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 175, 1, "E01ACT");
    fields[24] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 176, 8, 0, "E01NUMREC");
    fields[25] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 184, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ACHBNK using a String value.
  */
  public void setE01ACHBNK(String newvalue)
  {
    fieldE01ACHBNK.setString(newvalue);
  }

  /**
  * Get value of field E01ACHBNK as a String.
  */
  public String getE01ACHBNK()
  {
    return fieldE01ACHBNK.getString();
  }

  /**
  * Set field E01ACHOCD using a String value.
  */
  public void setE01ACHOCD(String newvalue)
  {
    fieldE01ACHOCD.setString(newvalue);
  }

  /**
  * Get value of field E01ACHOCD as a String.
  */
  public String getE01ACHOCD()
  {
    return fieldE01ACHOCD.getString();
  }

  /**
  * Set field E01ACHNSF using a String value.
  */
  public void setE01ACHNSF(String newvalue)
  {
    fieldE01ACHNSF.setString(newvalue);
  }

  /**
  * Get value of field E01ACHNSF as a String.
  */
  public String getE01ACHNSF()
  {
    return fieldE01ACHNSF.getString();
  }

  /**
  * Set field E01ACHBAA using a String value.
  */
  public void setE01ACHBAA(String newvalue)
  {
    fieldE01ACHBAA.setString(newvalue);
  }

  /**
  * Get value of field E01ACHBAA as a String.
  */
  public String getE01ACHBAA()
  {
    return fieldE01ACHBAA.getString();
  }

  /**
  * Set field E01ACHREP using a String value.
  */
  public void setE01ACHREP(String newvalue)
  {
    fieldE01ACHREP.setString(newvalue);
  }

  /**
  * Get value of field E01ACHREP as a String.
  */
  public String getE01ACHREP()
  {
    return fieldE01ACHREP.getString();
  }

  /**
  * Set field E01ACHBAI using a String value.
  */
  public void setE01ACHBAI(String newvalue)
  {
    fieldE01ACHBAI.setString(newvalue);
  }

  /**
  * Get value of field E01ACHBAI as a String.
  */
  public String getE01ACHBAI()
  {
    return fieldE01ACHBAI.getString();
  }

  /**
  * Set numeric field E01ACHBAI using a BigDecimal value.
  */
  public void setE01ACHBAI(BigDecimal newvalue)
  {
    fieldE01ACHBAI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHBAI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHBAI()
  {
    return fieldE01ACHBAI.getBigDecimal();
  }

  /**
  * Set field E01ACHBAT using a String value.
  */
  public void setE01ACHBAT(String newvalue)
  {
    fieldE01ACHBAT.setString(newvalue);
  }

  /**
  * Get value of field E01ACHBAT as a String.
  */
  public String getE01ACHBAT()
  {
    return fieldE01ACHBAT.getString();
  }

  /**
  * Set numeric field E01ACHBAT using a BigDecimal value.
  */
  public void setE01ACHBAT(BigDecimal newvalue)
  {
    fieldE01ACHBAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHBAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHBAT()
  {
    return fieldE01ACHBAT.getBigDecimal();
  }

  /**
  * Set field E01ACHIGL using a String value.
  */
  public void setE01ACHIGL(String newvalue)
  {
    fieldE01ACHIGL.setString(newvalue);
  }

  /**
  * Get value of field E01ACHIGL as a String.
  */
  public String getE01ACHIGL()
  {
    return fieldE01ACHIGL.getString();
  }

  /**
  * Set numeric field E01ACHIGL using a BigDecimal value.
  */
  public void setE01ACHIGL(BigDecimal newvalue)
  {
    fieldE01ACHIGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHIGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHIGL()
  {
    return fieldE01ACHIGL.getBigDecimal();
  }

  /**
  * Set field E01ACHOGL using a String value.
  */
  public void setE01ACHOGL(String newvalue)
  {
    fieldE01ACHOGL.setString(newvalue);
  }

  /**
  * Get value of field E01ACHOGL as a String.
  */
  public String getE01ACHOGL()
  {
    return fieldE01ACHOGL.getString();
  }

  /**
  * Set numeric field E01ACHOGL using a BigDecimal value.
  */
  public void setE01ACHOGL(BigDecimal newvalue)
  {
    fieldE01ACHOGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHOGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHOGL()
  {
    return fieldE01ACHOGL.getBigDecimal();
  }

  /**
  * Set field E01ACHGLN using a String value.
  */
  public void setE01ACHGLN(String newvalue)
  {
    fieldE01ACHGLN.setString(newvalue);
  }

  /**
  * Get value of field E01ACHGLN as a String.
  */
  public String getE01ACHGLN()
  {
    return fieldE01ACHGLN.getString();
  }

  /**
  * Set numeric field E01ACHGLN using a BigDecimal value.
  */
  public void setE01ACHGLN(BigDecimal newvalue)
  {
    fieldE01ACHGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHGLN()
  {
    return fieldE01ACHGLN.getBigDecimal();
  }

  /**
  * Set field E01ACHNUM using a String value.
  */
  public void setE01ACHNUM(String newvalue)
  {
    fieldE01ACHNUM.setString(newvalue);
  }

  /**
  * Get value of field E01ACHNUM as a String.
  */
  public String getE01ACHNUM()
  {
    return fieldE01ACHNUM.getString();
  }

  /**
  * Set numeric field E01ACHNUM using a BigDecimal value.
  */
  public void setE01ACHNUM(BigDecimal newvalue)
  {
    fieldE01ACHNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHNUM()
  {
    return fieldE01ACHNUM.getBigDecimal();
  }

  /**
  * Set field E01ACHODF using a String value.
  */
  public void setE01ACHODF(String newvalue)
  {
    fieldE01ACHODF.setString(newvalue);
  }

  /**
  * Get value of field E01ACHODF as a String.
  */
  public String getE01ACHODF()
  {
    return fieldE01ACHODF.getString();
  }

  /**
  * Set field E01ACHGLP using a String value.
  */
  public void setE01ACHGLP(String newvalue)
  {
    fieldE01ACHGLP.setString(newvalue);
  }

  /**
  * Get value of field E01ACHGLP as a String.
  */
  public String getE01ACHGLP()
  {
    return fieldE01ACHGLP.getString();
  }

  /**
  * Set numeric field E01ACHGLP using a BigDecimal value.
  */
  public void setE01ACHGLP(BigDecimal newvalue)
  {
    fieldE01ACHGLP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHGLP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHGLP()
  {
    return fieldE01ACHGLP.getBigDecimal();
  }

  /**
  * Set field E01ACHGLL using a String value.
  */
  public void setE01ACHGLL(String newvalue)
  {
    fieldE01ACHGLL.setString(newvalue);
  }

  /**
  * Get value of field E01ACHGLL as a String.
  */
  public String getE01ACHGLL()
  {
    return fieldE01ACHGLL.getString();
  }

  /**
  * Set numeric field E01ACHGLL using a BigDecimal value.
  */
  public void setE01ACHGLL(BigDecimal newvalue)
  {
    fieldE01ACHGLL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHGLL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHGLL()
  {
    return fieldE01ACHGLL.getBigDecimal();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
