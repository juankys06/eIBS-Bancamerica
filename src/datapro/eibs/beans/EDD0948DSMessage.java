package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD0948DS physical file definition.
* 
* File level identifier is 1041215163041.
* Record format level identifier is 4C6A03B744DCB.
*/

public class EDD0948DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E01DEVOFC",
                                     "E01DEVNME",
                                     "E01DEVBRN",
                                     "E01DEVTOI",
                                     "E01DEVTOR",
                                     "E01DEVPAI",
                                     "E01DEVRET",
                                     "E01DEVUNC",
                                     "E01DEVOVD",
                                     "E01DEVSTS",
                                     "E01MSGTXT"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E01DEVOFC",
                                   "E01DEVNME",
                                   "E01DEVBRN",
                                   "E01DEVTOI",
                                   "E01DEVTOR",
                                   "E01DEVPAI",
                                   "E01DEVRET",
                                   "E01DEVUNC",
                                   "E01DEVOVD",
                                   "E01DEVSTS",
                                   "E01MSGTXT"
                                 };
  final static String fid = "1041215163041";
  final static String rid = "4C6A03B744DCB";
  final static String fmtname = "EDD0948DS";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE01DEVOFC = null;
  private CharacterField fieldE01DEVNME = null;
  private CharacterField fieldE01DEVBRN = null;
  private DecimalField fieldE01DEVTOI = null;
  private DecimalField fieldE01DEVTOR = null;
  private DecimalField fieldE01DEVPAI = null;
  private DecimalField fieldE01DEVRET = null;
  private DecimalField fieldE01DEVUNC = null;
  private DecimalField fieldE01DEVOVD = null;
  private CharacterField fieldE01DEVSTS = null;
  private CharacterField fieldE01MSGTXT = null;

  /**
  * Constructor for EDD0948DSMessage.
  */
  public EDD0948DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1176;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE01DEVOFC =
    new CharacterField(message, HEADERSIZE + 42, 3, "E01DEVOFC");
    fields[10] = fieldE01DEVNME =
    new CharacterField(message, HEADERSIZE + 45, 30, "E01DEVNME");
    fields[11] = fieldE01DEVBRN =
    new CharacterField(message, HEADERSIZE + 75, 20, "E01DEVBRN");
    fields[12] = fieldE01DEVTOI =
    new DecimalField(message, HEADERSIZE + 95, 6, 0, "E01DEVTOI");
    fields[13] = fieldE01DEVTOR =
    new DecimalField(message, HEADERSIZE + 101, 6, 0, "E01DEVTOR");
    fields[14] = fieldE01DEVPAI =
    new DecimalField(message, HEADERSIZE + 107, 17, 2, "E01DEVPAI");
    fields[15] = fieldE01DEVRET =
    new DecimalField(message, HEADERSIZE + 124, 17, 2, "E01DEVRET");
    fields[16] = fieldE01DEVUNC =
    new DecimalField(message, HEADERSIZE + 141, 17, 2, "E01DEVUNC");
    fields[17] = fieldE01DEVOVD =
    new DecimalField(message, HEADERSIZE + 158, 17, 2, "E01DEVOVD");
    fields[18] = fieldE01DEVSTS =
    new CharacterField(message, HEADERSIZE + 175, 1, "E01DEVSTS");
    fields[19] = fieldE01MSGTXT =
    new CharacterField(message, HEADERSIZE + 176, 1000, "E01MSGTXT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E01DEVOFC using a String value.
  */
  public void setE01DEVOFC(String newvalue)
  {
    fieldE01DEVOFC.setString(newvalue);
  }

  /**
  * Get value of field E01DEVOFC as a String.
  */
  public String getE01DEVOFC()
  {
    return fieldE01DEVOFC.getString();
  }

  /**
  * Set field E01DEVNME using a String value.
  */
  public void setE01DEVNME(String newvalue)
  {
    fieldE01DEVNME.setString(newvalue);
  }

  /**
  * Get value of field E01DEVNME as a String.
  */
  public String getE01DEVNME()
  {
    return fieldE01DEVNME.getString();
  }

  /**
  * Set field E01DEVBRN using a String value.
  */
  public void setE01DEVBRN(String newvalue)
  {
    fieldE01DEVBRN.setString(newvalue);
  }

  /**
  * Get value of field E01DEVBRN as a String.
  */
  public String getE01DEVBRN()
  {
    return fieldE01DEVBRN.getString();
  }

  /**
  * Set field E01DEVTOI using a String value.
  */
  public void setE01DEVTOI(String newvalue)
  {
    fieldE01DEVTOI.setString(newvalue);
  }

  /**
  * Get value of field E01DEVTOI as a String.
  */
  public String getE01DEVTOI()
  {
    return fieldE01DEVTOI.getString();
  }

  /**
  * Set numeric field E01DEVTOI using a BigDecimal value.
  */
  public void setE01DEVTOI(BigDecimal newvalue)
  {
    fieldE01DEVTOI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEVTOI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEVTOI()
  {
    return fieldE01DEVTOI.getBigDecimal();
  }

  /**
  * Set field E01DEVTOR using a String value.
  */
  public void setE01DEVTOR(String newvalue)
  {
    fieldE01DEVTOR.setString(newvalue);
  }

  /**
  * Get value of field E01DEVTOR as a String.
  */
  public String getE01DEVTOR()
  {
    return fieldE01DEVTOR.getString();
  }

  /**
  * Set numeric field E01DEVTOR using a BigDecimal value.
  */
  public void setE01DEVTOR(BigDecimal newvalue)
  {
    fieldE01DEVTOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEVTOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEVTOR()
  {
    return fieldE01DEVTOR.getBigDecimal();
  }

  /**
  * Set field E01DEVPAI using a String value.
  */
  public void setE01DEVPAI(String newvalue)
  {
    fieldE01DEVPAI.setString(newvalue);
  }

  /**
  * Get value of field E01DEVPAI as a String.
  */
  public String getE01DEVPAI()
  {
    return fieldE01DEVPAI.getString();
  }

  /**
  * Set numeric field E01DEVPAI using a BigDecimal value.
  */
  public void setE01DEVPAI(BigDecimal newvalue)
  {
    fieldE01DEVPAI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEVPAI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEVPAI()
  {
    return fieldE01DEVPAI.getBigDecimal();
  }

  /**
  * Set field E01DEVRET using a String value.
  */
  public void setE01DEVRET(String newvalue)
  {
    fieldE01DEVRET.setString(newvalue);
  }

  /**
  * Get value of field E01DEVRET as a String.
  */
  public String getE01DEVRET()
  {
    return fieldE01DEVRET.getString();
  }

  /**
  * Set numeric field E01DEVRET using a BigDecimal value.
  */
  public void setE01DEVRET(BigDecimal newvalue)
  {
    fieldE01DEVRET.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEVRET as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEVRET()
  {
    return fieldE01DEVRET.getBigDecimal();
  }

  /**
  * Set field E01DEVUNC using a String value.
  */
  public void setE01DEVUNC(String newvalue)
  {
    fieldE01DEVUNC.setString(newvalue);
  }

  /**
  * Get value of field E01DEVUNC as a String.
  */
  public String getE01DEVUNC()
  {
    return fieldE01DEVUNC.getString();
  }

  /**
  * Set numeric field E01DEVUNC using a BigDecimal value.
  */
  public void setE01DEVUNC(BigDecimal newvalue)
  {
    fieldE01DEVUNC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEVUNC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEVUNC()
  {
    return fieldE01DEVUNC.getBigDecimal();
  }

  /**
  * Set field E01DEVOVD using a String value.
  */
  public void setE01DEVOVD(String newvalue)
  {
    fieldE01DEVOVD.setString(newvalue);
  }

  /**
  * Get value of field E01DEVOVD as a String.
  */
  public String getE01DEVOVD()
  {
    return fieldE01DEVOVD.getString();
  }

  /**
  * Set numeric field E01DEVOVD using a BigDecimal value.
  */
  public void setE01DEVOVD(BigDecimal newvalue)
  {
    fieldE01DEVOVD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEVOVD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEVOVD()
  {
    return fieldE01DEVOVD.getBigDecimal();
  }

  /**
  * Set field E01DEVSTS using a String value.
  */
  public void setE01DEVSTS(String newvalue)
  {
    fieldE01DEVSTS.setString(newvalue);
  }

  /**
  * Get value of field E01DEVSTS as a String.
  */
  public String getE01DEVSTS()
  {
    return fieldE01DEVSTS.getString();
  }

  /**
  * Set field E01MSGTXT using a String value.
  */
  public void setE01MSGTXT(String newvalue)
  {
    fieldE01MSGTXT.setString(newvalue);
  }

  /**
  * Get value of field E01MSGTXT as a String.
  */
  public String getE01MSGTXT()
  {
    return fieldE01MSGTXT.getString();
  }

}
