package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP088402 physical file definition.
* 
* File level identifier is 1090121153740.
* Record format level identifier is 3BEB8D312287A.
*/

public class EDP088402Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CNTLAN",
                                     "E02CPTCUN",
                                     "E02CPTTBL",
                                     "E02PTSLGT",
                                     "E02PTSMOD",
                                     "E02PTSSEQ",
                                     "E02PTSDSC",
                                     "E02PTSPTS",
                                     "E02PTSFLG",
                                     "E02PTSPTT",
                                     "E02RECPOS",
                                     "E02OPECDE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CNTLAN",
                                   "E02CPTCUN",
                                   "E02CPTTBL",
                                   "E02PTSLGT",
                                   "E02PTSMOD",
                                   "E02PTSSEQ",
                                   "E02PTSDSC",
                                   "E02PTSPTS",
                                   "E02PTSFLG",
                                   "E02PTSPTT",
                                   "E02RECPOS",
                                   "E02OPECDE"
                                 };
  final static String fid = "1090121153740";
  final static String rid = "3BEB8D312287A";
  final static String fmtname = "EDP088402";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02CNTLAN = null;
  private DecimalField fieldE02CPTCUN = null;
  private CharacterField fieldE02CPTTBL = null;
  private CharacterField fieldE02PTSLGT = null;
  private CharacterField fieldE02PTSMOD = null;
  private DecimalField fieldE02PTSSEQ = null;
  private CharacterField fieldE02PTSDSC = null;
  private DecimalField fieldE02PTSPTS = null;
  private CharacterField fieldE02PTSFLG = null;
  private DecimalField fieldE02PTSPTT = null;
  private DecimalField fieldE02RECPOS = null;
  private CharacterField fieldE02OPECDE = null;

  /**
  * Constructor for EDP088402Message.
  */
  public EDP088402Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 145;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E02CNTLAN");
    fields[10] = fieldE02CPTCUN =
    new DecimalField(message, HEADERSIZE + 43, 10, 0, "E02CPTCUN");
    fields[11] = fieldE02CPTTBL =
    new CharacterField(message, HEADERSIZE + 53, 4, "E02CPTTBL");
    fields[12] = fieldE02PTSLGT =
    new CharacterField(message, HEADERSIZE + 57, 1, "E02PTSLGT");
    fields[13] = fieldE02PTSMOD =
    new CharacterField(message, HEADERSIZE + 58, 4, "E02PTSMOD");
    fields[14] = fieldE02PTSSEQ =
    new DecimalField(message, HEADERSIZE + 62, 6, 0, "E02PTSSEQ");
    fields[15] = fieldE02PTSDSC =
    new CharacterField(message, HEADERSIZE + 68, 50, "E02PTSDSC");
    fields[16] = fieldE02PTSPTS =
    new DecimalField(message, HEADERSIZE + 118, 8, 3, "E02PTSPTS");
    fields[17] = fieldE02PTSFLG =
    new CharacterField(message, HEADERSIZE + 126, 1, "E02PTSFLG");
    fields[18] = fieldE02PTSPTT =
    new DecimalField(message, HEADERSIZE + 127, 9, 2, "E02PTSPTT");
    fields[19] = fieldE02RECPOS =
    new DecimalField(message, HEADERSIZE + 136, 8, 0, "E02RECPOS");
    fields[20] = fieldE02OPECDE =
    new CharacterField(message, HEADERSIZE + 144, 1, "E02OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CNTLAN using a String value.
  */
  public void setE02CNTLAN(String newvalue)
  {
    fieldE02CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E02CNTLAN as a String.
  */
  public String getE02CNTLAN()
  {
    return fieldE02CNTLAN.getString();
  }

  /**
  * Set field E02CPTCUN using a String value.
  */
  public void setE02CPTCUN(String newvalue)
  {
    fieldE02CPTCUN.setString(newvalue);
  }

  /**
  * Get value of field E02CPTCUN as a String.
  */
  public String getE02CPTCUN()
  {
    return fieldE02CPTCUN.getString();
  }

  /**
  * Set numeric field E02CPTCUN using a BigDecimal value.
  */
  public void setE02CPTCUN(BigDecimal newvalue)
  {
    fieldE02CPTCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPTCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPTCUN()
  {
    return fieldE02CPTCUN.getBigDecimal();
  }

  /**
  * Set field E02CPTTBL using a String value.
  */
  public void setE02CPTTBL(String newvalue)
  {
    fieldE02CPTTBL.setString(newvalue);
  }

  /**
  * Get value of field E02CPTTBL as a String.
  */
  public String getE02CPTTBL()
  {
    return fieldE02CPTTBL.getString();
  }

  /**
  * Set field E02PTSLGT using a String value.
  */
  public void setE02PTSLGT(String newvalue)
  {
    fieldE02PTSLGT.setString(newvalue);
  }

  /**
  * Get value of field E02PTSLGT as a String.
  */
  public String getE02PTSLGT()
  {
    return fieldE02PTSLGT.getString();
  }

  /**
  * Set field E02PTSMOD using a String value.
  */
  public void setE02PTSMOD(String newvalue)
  {
    fieldE02PTSMOD.setString(newvalue);
  }

  /**
  * Get value of field E02PTSMOD as a String.
  */
  public String getE02PTSMOD()
  {
    return fieldE02PTSMOD.getString();
  }

  /**
  * Set field E02PTSSEQ using a String value.
  */
  public void setE02PTSSEQ(String newvalue)
  {
    fieldE02PTSSEQ.setString(newvalue);
  }

  /**
  * Get value of field E02PTSSEQ as a String.
  */
  public String getE02PTSSEQ()
  {
    return fieldE02PTSSEQ.getString();
  }

  /**
  * Set numeric field E02PTSSEQ using a BigDecimal value.
  */
  public void setE02PTSSEQ(BigDecimal newvalue)
  {
    fieldE02PTSSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PTSSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PTSSEQ()
  {
    return fieldE02PTSSEQ.getBigDecimal();
  }

  /**
  * Set field E02PTSDSC using a String value.
  */
  public void setE02PTSDSC(String newvalue)
  {
    fieldE02PTSDSC.setString(newvalue);
  }

  /**
  * Get value of field E02PTSDSC as a String.
  */
  public String getE02PTSDSC()
  {
    return fieldE02PTSDSC.getString();
  }

  /**
  * Set field E02PTSPTS using a String value.
  */
  public void setE02PTSPTS(String newvalue)
  {
    fieldE02PTSPTS.setString(newvalue);
  }

  /**
  * Get value of field E02PTSPTS as a String.
  */
  public String getE02PTSPTS()
  {
    return fieldE02PTSPTS.getString();
  }

  /**
  * Set numeric field E02PTSPTS using a BigDecimal value.
  */
  public void setE02PTSPTS(BigDecimal newvalue)
  {
    fieldE02PTSPTS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PTSPTS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PTSPTS()
  {
    return fieldE02PTSPTS.getBigDecimal();
  }

  /**
  * Set field E02PTSFLG using a String value.
  */
  public void setE02PTSFLG(String newvalue)
  {
    fieldE02PTSFLG.setString(newvalue);
  }

  /**
  * Get value of field E02PTSFLG as a String.
  */
  public String getE02PTSFLG()
  {
    return fieldE02PTSFLG.getString();
  }

  /**
  * Set field E02PTSPTT using a String value.
  */
  public void setE02PTSPTT(String newvalue)
  {
    fieldE02PTSPTT.setString(newvalue);
  }

  /**
  * Get value of field E02PTSPTT as a String.
  */
  public String getE02PTSPTT()
  {
    return fieldE02PTSPTT.getString();
  }

  /**
  * Set numeric field E02PTSPTT using a BigDecimal value.
  */
  public void setE02PTSPTT(BigDecimal newvalue)
  {
    fieldE02PTSPTT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PTSPTT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PTSPTT()
  {
    return fieldE02PTSPTT.getBigDecimal();
  }

  /**
  * Set field E02RECPOS using a String value.
  */
  public void setE02RECPOS(String newvalue)
  {
    fieldE02RECPOS.setString(newvalue);
  }

  /**
  * Get value of field E02RECPOS as a String.
  */
  public String getE02RECPOS()
  {
    return fieldE02RECPOS.getString();
  }

  /**
  * Set numeric field E02RECPOS using a BigDecimal value.
  */
  public void setE02RECPOS(BigDecimal newvalue)
  {
    fieldE02RECPOS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RECPOS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RECPOS()
  {
    return fieldE02RECPOS.getBigDecimal();
  }

  /**
  * Set field E02OPECDE using a String value.
  */
  public void setE02OPECDE(String newvalue)
  {
    fieldE02OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E02OPECDE as a String.
  */
  public String getE02OPECDE()
  {
    return fieldE02OPECDE.getString();
  }

}
