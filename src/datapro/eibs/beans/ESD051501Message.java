package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD051501 physical file definition.
* 
* File level identifier is 1100812120735.
* Record format level identifier is 4F84ED5850002.
*/

public class ESD051501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01NCRBNK",
                                     "E01NCRBRN",
                                     "E01NCRACD",
                                     "E01NCRTYP",
                                     "E01NCRPRO",
                                     "E01NCRSER",
                                     "E01NCRDIV",
                                     "E01NCRSUC",
                                     "E01NCRAIC",
                                     "E01NCRTCF"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01NCRBNK",
                                   "E01NCRBRN",
                                   "E01NCRACD",
                                   "E01NCRTYP",
                                   "E01NCRPRO",
                                   "E01NCRSER",
                                   "E01NCRDIV",
                                   "E01NCRSUC",
                                   "E01NCRAIC",
                                   "E01NCRTCF"
                                 };
  final static String fid = "1100812120735";
  final static String rid = "4F84ED5850002";
  final static String fmtname = "ESD051501";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01NCRBNK = null;
  private DecimalField fieldE01NCRBRN = null;
  private CharacterField fieldE01NCRACD = null;
  private CharacterField fieldE01NCRTYP = null;
  private CharacterField fieldE01NCRPRO = null;
  private CharacterField fieldE01NCRSER = null;
  private DecimalField fieldE01NCRDIV = null;
  private DecimalField fieldE01NCRSUC = null;
  private DecimalField fieldE01NCRAIC = null;
  private DecimalField fieldE01NCRTCF = null;

  /**
  * Constructor for ESD051501Message.
  */
  public ESD051501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 73;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01NCRBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01NCRBNK");
    fields[10] = fieldE01NCRBRN =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "E01NCRBRN");
    fields[11] = fieldE01NCRACD =
    new CharacterField(message, HEADERSIZE + 48, 2, "E01NCRACD");
    fields[12] = fieldE01NCRTYP =
    new CharacterField(message, HEADERSIZE + 50, 4, "E01NCRTYP");
    fields[13] = fieldE01NCRPRO =
    new CharacterField(message, HEADERSIZE + 54, 4, "E01NCRPRO");
    fields[14] = fieldE01NCRSER =
    new CharacterField(message, HEADERSIZE + 58, 1, "E01NCRSER");
    fields[15] = fieldE01NCRDIV =
    new DecimalField(message, HEADERSIZE + 59, 3, 0, "E01NCRDIV");
    fields[16] = fieldE01NCRSUC =
    new DecimalField(message, HEADERSIZE + 62, 4, 0, "E01NCRSUC");
    fields[17] = fieldE01NCRAIC =
    new DecimalField(message, HEADERSIZE + 66, 4, 0, "E01NCRAIC");
    fields[18] = fieldE01NCRTCF =
    new DecimalField(message, HEADERSIZE + 70, 3, 0, "E01NCRTCF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01NCRBNK using a String value.
  */
  public void setE01NCRBNK(String newvalue)
  {
    fieldE01NCRBNK.setString(newvalue);
  }

  /**
  * Get value of field E01NCRBNK as a String.
  */
  public String getE01NCRBNK()
  {
    return fieldE01NCRBNK.getString();
  }

  /**
  * Set field E01NCRBRN using a String value.
  */
  public void setE01NCRBRN(String newvalue)
  {
    fieldE01NCRBRN.setString(newvalue);
  }

  /**
  * Get value of field E01NCRBRN as a String.
  */
  public String getE01NCRBRN()
  {
    return fieldE01NCRBRN.getString();
  }

  /**
  * Set numeric field E01NCRBRN using a BigDecimal value.
  */
  public void setE01NCRBRN(BigDecimal newvalue)
  {
    fieldE01NCRBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NCRBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NCRBRN()
  {
    return fieldE01NCRBRN.getBigDecimal();
  }

  /**
  * Set field E01NCRACD using a String value.
  */
  public void setE01NCRACD(String newvalue)
  {
    fieldE01NCRACD.setString(newvalue);
  }

  /**
  * Get value of field E01NCRACD as a String.
  */
  public String getE01NCRACD()
  {
    return fieldE01NCRACD.getString();
  }

  /**
  * Set field E01NCRTYP using a String value.
  */
  public void setE01NCRTYP(String newvalue)
  {
    fieldE01NCRTYP.setString(newvalue);
  }

  /**
  * Get value of field E01NCRTYP as a String.
  */
  public String getE01NCRTYP()
  {
    return fieldE01NCRTYP.getString();
  }

  /**
  * Set field E01NCRPRO using a String value.
  */
  public void setE01NCRPRO(String newvalue)
  {
    fieldE01NCRPRO.setString(newvalue);
  }

  /**
  * Get value of field E01NCRPRO as a String.
  */
  public String getE01NCRPRO()
  {
    return fieldE01NCRPRO.getString();
  }

  /**
  * Set field E01NCRSER using a String value.
  */
  public void setE01NCRSER(String newvalue)
  {
    fieldE01NCRSER.setString(newvalue);
  }

  /**
  * Get value of field E01NCRSER as a String.
  */
  public String getE01NCRSER()
  {
    return fieldE01NCRSER.getString();
  }

  /**
  * Set field E01NCRDIV using a String value.
  */
  public void setE01NCRDIV(String newvalue)
  {
    fieldE01NCRDIV.setString(newvalue);
  }

  /**
  * Get value of field E01NCRDIV as a String.
  */
  public String getE01NCRDIV()
  {
    return fieldE01NCRDIV.getString();
  }

  /**
  * Set numeric field E01NCRDIV using a BigDecimal value.
  */
  public void setE01NCRDIV(BigDecimal newvalue)
  {
    fieldE01NCRDIV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NCRDIV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NCRDIV()
  {
    return fieldE01NCRDIV.getBigDecimal();
  }

  /**
  * Set field E01NCRSUC using a String value.
  */
  public void setE01NCRSUC(String newvalue)
  {
    fieldE01NCRSUC.setString(newvalue);
  }

  /**
  * Get value of field E01NCRSUC as a String.
  */
  public String getE01NCRSUC()
  {
    return fieldE01NCRSUC.getString();
  }

  /**
  * Set numeric field E01NCRSUC using a BigDecimal value.
  */
  public void setE01NCRSUC(BigDecimal newvalue)
  {
    fieldE01NCRSUC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NCRSUC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NCRSUC()
  {
    return fieldE01NCRSUC.getBigDecimal();
  }

  /**
  * Set field E01NCRAIC using a String value.
  */
  public void setE01NCRAIC(String newvalue)
  {
    fieldE01NCRAIC.setString(newvalue);
  }

  /**
  * Get value of field E01NCRAIC as a String.
  */
  public String getE01NCRAIC()
  {
    return fieldE01NCRAIC.getString();
  }

  /**
  * Set numeric field E01NCRAIC using a BigDecimal value.
  */
  public void setE01NCRAIC(BigDecimal newvalue)
  {
    fieldE01NCRAIC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NCRAIC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NCRAIC()
  {
    return fieldE01NCRAIC.getBigDecimal();
  }

  /**
  * Set field E01NCRTCF using a String value.
  */
  public void setE01NCRTCF(String newvalue)
  {
    fieldE01NCRTCF.setString(newvalue);
  }

  /**
  * Get value of field E01NCRTCF as a String.
  */
  public String getE01NCRTCF()
  {
    return fieldE01NCRTCF.getString();
  }

  /**
  * Set numeric field E01NCRTCF using a BigDecimal value.
  */
  public void setE01NCRTCF(BigDecimal newvalue)
  {
    fieldE01NCRTCF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NCRTCF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NCRTCF()
  {
    return fieldE01NCRTCF.getBigDecimal();
  }

}
