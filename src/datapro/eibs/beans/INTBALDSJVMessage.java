package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from INTBALDSJV physical file definition.
* 
* File level identifier is 1050406095224.
* Record format level identifier is 4391264A0BC8F.
*/

public class INTBALDSJVMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "INTUSR",
                                     "INTACC",
                                     "INTSTS",
                                     "INTAMT01",
                                     "INTAMT02",
                                     "INTAMT03",
                                     "INTAMT04",
                                     "INTAMT05",
                                     "INTAMT06",
                                     "INTAMT07",
                                     "INTAMT08",
                                     "INTAMT09",
                                     "INTAMT10"
                                   };
  final static String tnames[] = {
                                   "INTUSR",
                                   "INTACC",
                                   "INTSTS",
                                   "INTAMT01",
                                   "INTAMT02",
                                   "INTAMT03",
                                   "INTAMT04",
                                   "INTAMT05",
                                   "INTAMT06",
                                   "INTAMT07",
                                   "INTAMT08",
                                   "INTAMT09",
                                   "INTAMT10"
                                 };
  final static String fid = "1050406095224";
  final static String rid = "4391264A0BC8F";
  final static String fmtname = "INTBALDSJV";
  final int FIELDCOUNT = 13;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldINTUSR = null;
  private DecimalField fieldINTACC = null;
  private CharacterField fieldINTSTS = null;
  private DecimalField fieldINTAMT01 = null;
  private DecimalField fieldINTAMT02 = null;
  private DecimalField fieldINTAMT03 = null;
  private DecimalField fieldINTAMT04 = null;
  private DecimalField fieldINTAMT05 = null;
  private DecimalField fieldINTAMT06 = null;
  private DecimalField fieldINTAMT07 = null;
  private DecimalField fieldINTAMT08 = null;
  private DecimalField fieldINTAMT09 = null;
  private DecimalField fieldINTAMT10 = null;

  /**
  * Constructor for INTBALDSJVMessage.
  */
  public INTBALDSJVMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 174;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldINTUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "INTUSR");
    fields[1] = fieldINTACC =
    new DecimalField(message, HEADERSIZE + 10, 13, 0, "INTACC");
    fields[2] = fieldINTSTS =
    new CharacterField(message, HEADERSIZE + 23, 1, "INTSTS");
    fields[3] = fieldINTAMT01 =
    new DecimalField(message, HEADERSIZE + 24, 15, 2, "INTAMT01");
    fields[4] = fieldINTAMT02 =
    new DecimalField(message, HEADERSIZE + 39, 15, 2, "INTAMT02");
    fields[5] = fieldINTAMT03 =
    new DecimalField(message, HEADERSIZE + 54, 15, 2, "INTAMT03");
    fields[6] = fieldINTAMT04 =
    new DecimalField(message, HEADERSIZE + 69, 15, 2, "INTAMT04");
    fields[7] = fieldINTAMT05 =
    new DecimalField(message, HEADERSIZE + 84, 15, 2, "INTAMT05");
    fields[8] = fieldINTAMT06 =
    new DecimalField(message, HEADERSIZE + 99, 15, 2, "INTAMT06");
    fields[9] = fieldINTAMT07 =
    new DecimalField(message, HEADERSIZE + 114, 15, 2, "INTAMT07");
    fields[10] = fieldINTAMT08 =
    new DecimalField(message, HEADERSIZE + 129, 15, 2, "INTAMT08");
    fields[11] = fieldINTAMT09 =
    new DecimalField(message, HEADERSIZE + 144, 15, 2, "INTAMT09");
    fields[12] = fieldINTAMT10 =
    new DecimalField(message, HEADERSIZE + 159, 15, 2, "INTAMT10");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field INTUSR using a String value.
  */
  public void setINTUSR(String newvalue)
  {
    fieldINTUSR.setString(newvalue);
  }

  /**
  * Get value of field INTUSR as a String.
  */
  public String getINTUSR()
  {
    return fieldINTUSR.getString();
  }

  /**
  * Set field INTACC using a String value.
  */
  public void setINTACC(String newvalue)
  {
    fieldINTACC.setString(newvalue);
  }

  /**
  * Get value of field INTACC as a String.
  */
  public String getINTACC()
  {
    return fieldINTACC.getString();
  }

  /**
  * Set numeric field INTACC using a BigDecimal value.
  */
  public void setINTACC(BigDecimal newvalue)
  {
    fieldINTACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTACC()
  {
    return fieldINTACC.getBigDecimal();
  }

  /**
  * Set field INTSTS using a String value.
  */
  public void setINTSTS(String newvalue)
  {
    fieldINTSTS.setString(newvalue);
  }

  /**
  * Get value of field INTSTS as a String.
  */
  public String getINTSTS()
  {
    return fieldINTSTS.getString();
  }

  /**
  * Set field INTAMT01 using a String value.
  */
  public void setINTAMT01(String newvalue)
  {
    fieldINTAMT01.setString(newvalue);
  }

  /**
  * Get value of field INTAMT01 as a String.
  */
  public String getINTAMT01()
  {
    return fieldINTAMT01.getString();
  }

  /**
  * Set numeric field INTAMT01 using a BigDecimal value.
  */
  public void setINTAMT01(BigDecimal newvalue)
  {
    fieldINTAMT01.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT01 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT01()
  {
    return fieldINTAMT01.getBigDecimal();
  }

  /**
  * Set field INTAMT02 using a String value.
  */
  public void setINTAMT02(String newvalue)
  {
    fieldINTAMT02.setString(newvalue);
  }

  /**
  * Get value of field INTAMT02 as a String.
  */
  public String getINTAMT02()
  {
    return fieldINTAMT02.getString();
  }

  /**
  * Set numeric field INTAMT02 using a BigDecimal value.
  */
  public void setINTAMT02(BigDecimal newvalue)
  {
    fieldINTAMT02.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT02 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT02()
  {
    return fieldINTAMT02.getBigDecimal();
  }

  /**
  * Set field INTAMT03 using a String value.
  */
  public void setINTAMT03(String newvalue)
  {
    fieldINTAMT03.setString(newvalue);
  }

  /**
  * Get value of field INTAMT03 as a String.
  */
  public String getINTAMT03()
  {
    return fieldINTAMT03.getString();
  }

  /**
  * Set numeric field INTAMT03 using a BigDecimal value.
  */
  public void setINTAMT03(BigDecimal newvalue)
  {
    fieldINTAMT03.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT03 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT03()
  {
    return fieldINTAMT03.getBigDecimal();
  }

  /**
  * Set field INTAMT04 using a String value.
  */
  public void setINTAMT04(String newvalue)
  {
    fieldINTAMT04.setString(newvalue);
  }

  /**
  * Get value of field INTAMT04 as a String.
  */
  public String getINTAMT04()
  {
    return fieldINTAMT04.getString();
  }

  /**
  * Set numeric field INTAMT04 using a BigDecimal value.
  */
  public void setINTAMT04(BigDecimal newvalue)
  {
    fieldINTAMT04.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT04 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT04()
  {
    return fieldINTAMT04.getBigDecimal();
  }

  /**
  * Set field INTAMT05 using a String value.
  */
  public void setINTAMT05(String newvalue)
  {
    fieldINTAMT05.setString(newvalue);
  }

  /**
  * Get value of field INTAMT05 as a String.
  */
  public String getINTAMT05()
  {
    return fieldINTAMT05.getString();
  }

  /**
  * Set numeric field INTAMT05 using a BigDecimal value.
  */
  public void setINTAMT05(BigDecimal newvalue)
  {
    fieldINTAMT05.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT05 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT05()
  {
    return fieldINTAMT05.getBigDecimal();
  }

  /**
  * Set field INTAMT06 using a String value.
  */
  public void setINTAMT06(String newvalue)
  {
    fieldINTAMT06.setString(newvalue);
  }

  /**
  * Get value of field INTAMT06 as a String.
  */
  public String getINTAMT06()
  {
    return fieldINTAMT06.getString();
  }

  /**
  * Set numeric field INTAMT06 using a BigDecimal value.
  */
  public void setINTAMT06(BigDecimal newvalue)
  {
    fieldINTAMT06.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT06 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT06()
  {
    return fieldINTAMT06.getBigDecimal();
  }

  /**
  * Set field INTAMT07 using a String value.
  */
  public void setINTAMT07(String newvalue)
  {
    fieldINTAMT07.setString(newvalue);
  }

  /**
  * Get value of field INTAMT07 as a String.
  */
  public String getINTAMT07()
  {
    return fieldINTAMT07.getString();
  }

  /**
  * Set numeric field INTAMT07 using a BigDecimal value.
  */
  public void setINTAMT07(BigDecimal newvalue)
  {
    fieldINTAMT07.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT07 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT07()
  {
    return fieldINTAMT07.getBigDecimal();
  }

  /**
  * Set field INTAMT08 using a String value.
  */
  public void setINTAMT08(String newvalue)
  {
    fieldINTAMT08.setString(newvalue);
  }

  /**
  * Get value of field INTAMT08 as a String.
  */
  public String getINTAMT08()
  {
    return fieldINTAMT08.getString();
  }

  /**
  * Set numeric field INTAMT08 using a BigDecimal value.
  */
  public void setINTAMT08(BigDecimal newvalue)
  {
    fieldINTAMT08.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT08 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT08()
  {
    return fieldINTAMT08.getBigDecimal();
  }

  /**
  * Set field INTAMT09 using a String value.
  */
  public void setINTAMT09(String newvalue)
  {
    fieldINTAMT09.setString(newvalue);
  }

  /**
  * Get value of field INTAMT09 as a String.
  */
  public String getINTAMT09()
  {
    return fieldINTAMT09.getString();
  }

  /**
  * Set numeric field INTAMT09 using a BigDecimal value.
  */
  public void setINTAMT09(BigDecimal newvalue)
  {
    fieldINTAMT09.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT09 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT09()
  {
    return fieldINTAMT09.getBigDecimal();
  }

  /**
  * Set field INTAMT10 using a String value.
  */
  public void setINTAMT10(String newvalue)
  {
    fieldINTAMT10.setString(newvalue);
  }

  /**
  * Get value of field INTAMT10 as a String.
  */
  public String getINTAMT10()
  {
    return fieldINTAMT10.getString();
  }

  /**
  * Set numeric field INTAMT10 using a BigDecimal value.
  */
  public void setINTAMT10(BigDecimal newvalue)
  {
    fieldINTAMT10.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTAMT10 as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTAMT10()
  {
    return fieldINTAMT10.getBigDecimal();
  }

}
