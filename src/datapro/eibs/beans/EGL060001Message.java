package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGL060001 physical file definition.
* 
* File level identifier is 1070601175745.
* Record format level identifier is 4AFFBD9C73B4F.
*/

public class EGL060001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01INPKBT",
                                     "E01INPBNK",
                                     "E01INPBRN",
                                     "E01INPCCY",
                                     "E01INPGLN",
                                     "E01INPACC",
                                     "E01INPLMI",
                                     "E01INPLMX",
                                     "E01INPDSC",
                                     "E01INPTCD",
                                     "E01INPVDM",
                                     "E01INPVDD",
                                     "E01INPVDY",
                                     "E01INPTDS",
                                     "E01INPINB",
                                     "E01INPAMN",
                                     "E01INPDC",
                                     "E01INPREM",
                                     "E01INPBAL",
                                     "E01RECPOS",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01INPKBT",
                                   "E01INPBNK",
                                   "E01INPBRN",
                                   "E01INPCCY",
                                   "E01INPGLN",
                                   "E01INPACC",
                                   "E01INPLMI",
                                   "E01INPLMX",
                                   "E01INPDSC",
                                   "E01INPTCD",
                                   "E01INPVDM",
                                   "E01INPVDD",
                                   "E01INPVDY",
                                   "E01INPTDS",
                                   "E01INPINB",
                                   "E01INPAMN",
                                   "E01INPDC",
                                   "E01INPREM",
                                   "E01INPBAL",
                                   "E01RECPOS",
                                   "E01OPECDE"
                                 };
  final static String fid = "1070601175745";
  final static String rid = "4AFFBD9C73B4F";
  final static String fmtname = "EGL060001";
  final int FIELDCOUNT = 30;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01INPKBT = null;
  private CharacterField fieldE01INPBNK = null;
  private DecimalField fieldE01INPBRN = null;
  private CharacterField fieldE01INPCCY = null;
  private DecimalField fieldE01INPGLN = null;
  private DecimalField fieldE01INPACC = null;
  private DecimalField fieldE01INPLMI = null;
  private DecimalField fieldE01INPLMX = null;
  private CharacterField fieldE01INPDSC = null;
  private CharacterField fieldE01INPTCD = null;
  private DecimalField fieldE01INPVDM = null;
  private DecimalField fieldE01INPVDD = null;
  private DecimalField fieldE01INPVDY = null;
  private CharacterField fieldE01INPTDS = null;
  private DecimalField fieldE01INPINB = null;
  private DecimalField fieldE01INPAMN = null;
  private CharacterField fieldE01INPDC = null;
  private CharacterField fieldE01INPREM = null;
  private DecimalField fieldE01INPBAL = null;
  private DecimalField fieldE01RECPOS = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EGL060001Message.
  */
  public EGL060001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 274;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01INPKBT =
    new DecimalField(message, HEADERSIZE + 42, 5, 0, "E01INPKBT");
    fields[10] = fieldE01INPBNK =
    new CharacterField(message, HEADERSIZE + 47, 2, "E01INPBNK");
    fields[11] = fieldE01INPBRN =
    new DecimalField(message, HEADERSIZE + 49, 4, 0, "E01INPBRN");
    fields[12] = fieldE01INPCCY =
    new CharacterField(message, HEADERSIZE + 53, 3, "E01INPCCY");
    fields[13] = fieldE01INPGLN =
    new DecimalField(message, HEADERSIZE + 56, 17, 0, "E01INPGLN");
    fields[14] = fieldE01INPACC =
    new DecimalField(message, HEADERSIZE + 73, 13, 0, "E01INPACC");
    fields[15] = fieldE01INPLMI =
    new DecimalField(message, HEADERSIZE + 86, 17, 2, "E01INPLMI");
    fields[16] = fieldE01INPLMX =
    new DecimalField(message, HEADERSIZE + 103, 17, 2, "E01INPLMX");
    fields[17] = fieldE01INPDSC =
    new CharacterField(message, HEADERSIZE + 120, 35, "E01INPDSC");
    fields[18] = fieldE01INPTCD =
    new CharacterField(message, HEADERSIZE + 155, 2, "E01INPTCD");
    fields[19] = fieldE01INPVDM =
    new DecimalField(message, HEADERSIZE + 157, 3, 0, "E01INPVDM");
    fields[20] = fieldE01INPVDD =
    new DecimalField(message, HEADERSIZE + 160, 3, 0, "E01INPVDD");
    fields[21] = fieldE01INPVDY =
    new DecimalField(message, HEADERSIZE + 163, 3, 0, "E01INPVDY");
    fields[22] = fieldE01INPTDS =
    new CharacterField(message, HEADERSIZE + 166, 30, "E01INPTDS");
    fields[23] = fieldE01INPINB =
    new DecimalField(message, HEADERSIZE + 196, 17, 2, "E01INPINB");
    fields[24] = fieldE01INPAMN =
    new DecimalField(message, HEADERSIZE + 213, 17, 2, "E01INPAMN");
    fields[25] = fieldE01INPDC =
    new CharacterField(message, HEADERSIZE + 230, 2, "E01INPDC");
    fields[26] = fieldE01INPREM =
    new CharacterField(message, HEADERSIZE + 232, 16, "E01INPREM");
    fields[27] = fieldE01INPBAL =
    new DecimalField(message, HEADERSIZE + 248, 17, 2, "E01INPBAL");
    fields[28] = fieldE01RECPOS =
    new DecimalField(message, HEADERSIZE + 265, 8, 0, "E01RECPOS");
    fields[29] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 273, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01INPKBT using a String value.
  */
  public void setE01INPKBT(String newvalue)
  {
    fieldE01INPKBT.setString(newvalue);
  }

  /**
  * Get value of field E01INPKBT as a String.
  */
  public String getE01INPKBT()
  {
    return fieldE01INPKBT.getString();
  }

  /**
  * Set numeric field E01INPKBT using a BigDecimal value.
  */
  public void setE01INPKBT(BigDecimal newvalue)
  {
    fieldE01INPKBT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPKBT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPKBT()
  {
    return fieldE01INPKBT.getBigDecimal();
  }

  /**
  * Set field E01INPBNK using a String value.
  */
  public void setE01INPBNK(String newvalue)
  {
    fieldE01INPBNK.setString(newvalue);
  }

  /**
  * Get value of field E01INPBNK as a String.
  */
  public String getE01INPBNK()
  {
    return fieldE01INPBNK.getString();
  }

  /**
  * Set field E01INPBRN using a String value.
  */
  public void setE01INPBRN(String newvalue)
  {
    fieldE01INPBRN.setString(newvalue);
  }

  /**
  * Get value of field E01INPBRN as a String.
  */
  public String getE01INPBRN()
  {
    return fieldE01INPBRN.getString();
  }

  /**
  * Set numeric field E01INPBRN using a BigDecimal value.
  */
  public void setE01INPBRN(BigDecimal newvalue)
  {
    fieldE01INPBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPBRN()
  {
    return fieldE01INPBRN.getBigDecimal();
  }

  /**
  * Set field E01INPCCY using a String value.
  */
  public void setE01INPCCY(String newvalue)
  {
    fieldE01INPCCY.setString(newvalue);
  }

  /**
  * Get value of field E01INPCCY as a String.
  */
  public String getE01INPCCY()
  {
    return fieldE01INPCCY.getString();
  }

  /**
  * Set field E01INPGLN using a String value.
  */
  public void setE01INPGLN(String newvalue)
  {
    fieldE01INPGLN.setString(newvalue);
  }

  /**
  * Get value of field E01INPGLN as a String.
  */
  public String getE01INPGLN()
  {
    return fieldE01INPGLN.getString();
  }

  /**
  * Set numeric field E01INPGLN using a BigDecimal value.
  */
  public void setE01INPGLN(BigDecimal newvalue)
  {
    fieldE01INPGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPGLN()
  {
    return fieldE01INPGLN.getBigDecimal();
  }

  /**
  * Set field E01INPACC using a String value.
  */
  public void setE01INPACC(String newvalue)
  {
    fieldE01INPACC.setString(newvalue);
  }

  /**
  * Get value of field E01INPACC as a String.
  */
  public String getE01INPACC()
  {
    return fieldE01INPACC.getString();
  }

  /**
  * Set numeric field E01INPACC using a BigDecimal value.
  */
  public void setE01INPACC(BigDecimal newvalue)
  {
    fieldE01INPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPACC()
  {
    return fieldE01INPACC.getBigDecimal();
  }

  /**
  * Set field E01INPLMI using a String value.
  */
  public void setE01INPLMI(String newvalue)
  {
    fieldE01INPLMI.setString(newvalue);
  }

  /**
  * Get value of field E01INPLMI as a String.
  */
  public String getE01INPLMI()
  {
    return fieldE01INPLMI.getString();
  }

  /**
  * Set numeric field E01INPLMI using a BigDecimal value.
  */
  public void setE01INPLMI(BigDecimal newvalue)
  {
    fieldE01INPLMI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPLMI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPLMI()
  {
    return fieldE01INPLMI.getBigDecimal();
  }

  /**
  * Set field E01INPLMX using a String value.
  */
  public void setE01INPLMX(String newvalue)
  {
    fieldE01INPLMX.setString(newvalue);
  }

  /**
  * Get value of field E01INPLMX as a String.
  */
  public String getE01INPLMX()
  {
    return fieldE01INPLMX.getString();
  }

  /**
  * Set numeric field E01INPLMX using a BigDecimal value.
  */
  public void setE01INPLMX(BigDecimal newvalue)
  {
    fieldE01INPLMX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPLMX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPLMX()
  {
    return fieldE01INPLMX.getBigDecimal();
  }

  /**
  * Set field E01INPDSC using a String value.
  */
  public void setE01INPDSC(String newvalue)
  {
    fieldE01INPDSC.setString(newvalue);
  }

  /**
  * Get value of field E01INPDSC as a String.
  */
  public String getE01INPDSC()
  {
    return fieldE01INPDSC.getString();
  }

  /**
  * Set field E01INPTCD using a String value.
  */
  public void setE01INPTCD(String newvalue)
  {
    fieldE01INPTCD.setString(newvalue);
  }

  /**
  * Get value of field E01INPTCD as a String.
  */
  public String getE01INPTCD()
  {
    return fieldE01INPTCD.getString();
  }

  /**
  * Set field E01INPVDM using a String value.
  */
  public void setE01INPVDM(String newvalue)
  {
    fieldE01INPVDM.setString(newvalue);
  }

  /**
  * Get value of field E01INPVDM as a String.
  */
  public String getE01INPVDM()
  {
    return fieldE01INPVDM.getString();
  }

  /**
  * Set numeric field E01INPVDM using a BigDecimal value.
  */
  public void setE01INPVDM(BigDecimal newvalue)
  {
    fieldE01INPVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPVDM()
  {
    return fieldE01INPVDM.getBigDecimal();
  }

  /**
  * Set field E01INPVDD using a String value.
  */
  public void setE01INPVDD(String newvalue)
  {
    fieldE01INPVDD.setString(newvalue);
  }

  /**
  * Get value of field E01INPVDD as a String.
  */
  public String getE01INPVDD()
  {
    return fieldE01INPVDD.getString();
  }

  /**
  * Set numeric field E01INPVDD using a BigDecimal value.
  */
  public void setE01INPVDD(BigDecimal newvalue)
  {
    fieldE01INPVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPVDD()
  {
    return fieldE01INPVDD.getBigDecimal();
  }

  /**
  * Set field E01INPVDY using a String value.
  */
  public void setE01INPVDY(String newvalue)
  {
    fieldE01INPVDY.setString(newvalue);
  }

  /**
  * Get value of field E01INPVDY as a String.
  */
  public String getE01INPVDY()
  {
    return fieldE01INPVDY.getString();
  }

  /**
  * Set numeric field E01INPVDY using a BigDecimal value.
  */
  public void setE01INPVDY(BigDecimal newvalue)
  {
    fieldE01INPVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPVDY()
  {
    return fieldE01INPVDY.getBigDecimal();
  }

  /**
  * Set field E01INPTDS using a String value.
  */
  public void setE01INPTDS(String newvalue)
  {
    fieldE01INPTDS.setString(newvalue);
  }

  /**
  * Get value of field E01INPTDS as a String.
  */
  public String getE01INPTDS()
  {
    return fieldE01INPTDS.getString();
  }

  /**
  * Set field E01INPINB using a String value.
  */
  public void setE01INPINB(String newvalue)
  {
    fieldE01INPINB.setString(newvalue);
  }

  /**
  * Get value of field E01INPINB as a String.
  */
  public String getE01INPINB()
  {
    return fieldE01INPINB.getString();
  }

  /**
  * Set numeric field E01INPINB using a BigDecimal value.
  */
  public void setE01INPINB(BigDecimal newvalue)
  {
    fieldE01INPINB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPINB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPINB()
  {
    return fieldE01INPINB.getBigDecimal();
  }

  /**
  * Set field E01INPAMN using a String value.
  */
  public void setE01INPAMN(String newvalue)
  {
    fieldE01INPAMN.setString(newvalue);
  }

  /**
  * Get value of field E01INPAMN as a String.
  */
  public String getE01INPAMN()
  {
    return fieldE01INPAMN.getString();
  }

  /**
  * Set numeric field E01INPAMN using a BigDecimal value.
  */
  public void setE01INPAMN(BigDecimal newvalue)
  {
    fieldE01INPAMN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPAMN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPAMN()
  {
    return fieldE01INPAMN.getBigDecimal();
  }

  /**
  * Set field E01INPDC using a String value.
  */
  public void setE01INPDC(String newvalue)
  {
    fieldE01INPDC.setString(newvalue);
  }

  /**
  * Get value of field E01INPDC as a String.
  */
  public String getE01INPDC()
  {
    return fieldE01INPDC.getString();
  }

  /**
  * Set field E01INPREM using a String value.
  */
  public void setE01INPREM(String newvalue)
  {
    fieldE01INPREM.setString(newvalue);
  }

  /**
  * Get value of field E01INPREM as a String.
  */
  public String getE01INPREM()
  {
    return fieldE01INPREM.getString();
  }

  /**
  * Set field E01INPBAL using a String value.
  */
  public void setE01INPBAL(String newvalue)
  {
    fieldE01INPBAL.setString(newvalue);
  }

  /**
  * Get value of field E01INPBAL as a String.
  */
  public String getE01INPBAL()
  {
    return fieldE01INPBAL.getString();
  }

  /**
  * Set numeric field E01INPBAL using a BigDecimal value.
  */
  public void setE01INPBAL(BigDecimal newvalue)
  {
    fieldE01INPBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPBAL()
  {
    return fieldE01INPBAL.getBigDecimal();
  }

  /**
  * Set field E01RECPOS using a String value.
  */
  public void setE01RECPOS(String newvalue)
  {
    fieldE01RECPOS.setString(newvalue);
  }

  /**
  * Get value of field E01RECPOS as a String.
  */
  public String getE01RECPOS()
  {
    return fieldE01RECPOS.getString();
  }

  /**
  * Set numeric field E01RECPOS using a BigDecimal value.
  */
  public void setE01RECPOS(BigDecimal newvalue)
  {
    fieldE01RECPOS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RECPOS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RECPOS()
  {
    return fieldE01RECPOS.getBigDecimal();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
