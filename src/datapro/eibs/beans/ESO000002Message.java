package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESO000002 physical file definition.
* 
* File level identifier is 1070829193719.
* Record format level identifier is 4A31FE9BBB427.
*/

public class ESO000002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                      "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02USERID",
                                     "E02SOLCUN",
                                     "E02CUSNA1",
                                     "E02SOLPRO",
                                     "E02SOLPRI",
                                     "E02SOLTRM",
                                     "E02SOLTRC",
                                     "E02SOLPVI",
                                     "E02SOLOPE",
                                     "E02SOLRTE",
                                     "E02SOLART",
                                     "E02ACTION",
                                     "E02FINDAT"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02USERID",
                                   "E02SOLCUN",
                                   "E02CUSNA1",
                                   "E02SOLPRO",
                                   "E02SOLPRI",
                                   "E02SOLTRM",
                                   "E02SOLTRC",
                                   "E02SOLPVI",
                                   "E02SOLOPE",
                                   "E02SOLRTE",
                                   "E02SOLART",
                                   "E02ACTION",
                                   "E02FINDAT"
                                 };
  final static String fid = "1070829193719";
  final static String rid = "4A31FE9BBB427";
  final static String fmtname = "ESO000002";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02USERID = null;
  private DecimalField fieldE02SOLCUN = null;
  private CharacterField fieldE02CUSNA1 = null;
  private CharacterField fieldE02SOLPRO = null;
  private DecimalField fieldE02SOLPRI = null;
  private DecimalField fieldE02SOLTRM = null;
  private CharacterField fieldE02SOLTRC = null;
  private CharacterField fieldE02SOLPVI = null;
  private CharacterField fieldE02SOLOPE = null;
  private DecimalField fieldE02SOLRTE = null;
  private DecimalField fieldE02SOLART = null;
  private CharacterField fieldE02ACTION = null;
  private CharacterField fieldE02FINDAT = null;

  /**
  * Constructor for ESO000002Message.
  */
  public ESO000002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 161;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02USERID =
    new CharacterField(message, HEADERSIZE + 42, 10, "E02USERID");
    fields[10] = fieldE02SOLCUN =
    new DecimalField(message, HEADERSIZE + 52, 10, 0, "E02SOLCUN");
    fields[11] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 62, 45, "E02CUSNA1");
    fields[12] = fieldE02SOLPRO =
    new CharacterField(message, HEADERSIZE + 107, 4, "E02SOLPRO");
    fields[13] = fieldE02SOLPRI =
    new DecimalField(message, HEADERSIZE + 111, 17, 2, "E02SOLPRI");
    fields[14] = fieldE02SOLTRM =
    new DecimalField(message, HEADERSIZE + 128, 5, 0, "E02SOLTRM");
    fields[15] = fieldE02SOLTRC =
    new CharacterField(message, HEADERSIZE + 133, 1, "E02SOLTRC");
    fields[16] = fieldE02SOLPVI =
    new CharacterField(message, HEADERSIZE + 134, 1, "E02SOLPVI");
    fields[17] = fieldE02SOLOPE =
    new CharacterField(message, HEADERSIZE + 135, 2, "E02SOLOPE");
    fields[18] = fieldE02SOLRTE =
    new DecimalField(message, HEADERSIZE + 137, 11, 6, "E02SOLRTE");
    fields[19] = fieldE02SOLART =
    new DecimalField(message, HEADERSIZE + 148, 11, 6, "E02SOLART");
    fields[20] = fieldE02ACTION =
    new CharacterField(message, HEADERSIZE + 159, 1, "E02ACTION");
    fields[21] = fieldE02FINDAT =
    new CharacterField(message, HEADERSIZE + 160, 1, "E02FINDAT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02USERID using a String value.
  */
  public void setE02USERID(String newvalue)
  {
    fieldE02USERID.setString(newvalue);
  }

  /**
  * Get value of field E02USERID as a String.
  */
  public String getE02USERID()
  {
    return fieldE02USERID.getString();
  }

  /**
  * Set field E02SOLCUN using a String value.
  */
  public void setE02SOLCUN(String newvalue)
  {
    fieldE02SOLCUN.setString(newvalue);
  }

  /**
  * Get value of field E02SOLCUN as a String.
  */
  public String getE02SOLCUN()
  {
    return fieldE02SOLCUN.getString();
  }

  /**
  * Set numeric field E02SOLCUN using a BigDecimal value.
  */
  public void setE02SOLCUN(BigDecimal newvalue)
  {
    fieldE02SOLCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SOLCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SOLCUN()
  {
    return fieldE02SOLCUN.getBigDecimal();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02SOLPRO using a String value.
  */
  public void setE02SOLPRO(String newvalue)
  {
    fieldE02SOLPRO.setString(newvalue);
  }

  /**
  * Get value of field E02SOLPRO as a String.
  */
  public String getE02SOLPRO()
  {
    return fieldE02SOLPRO.getString();
  }

  /**
  * Set field E02SOLPRI using a String value.
  */
  public void setE02SOLPRI(String newvalue)
  {
    fieldE02SOLPRI.setString(newvalue);
  }

  /**
  * Get value of field E02SOLPRI as a String.
  */
  public String getE02SOLPRI()
  {
    return fieldE02SOLPRI.getString();
  }

  /**
  * Set numeric field E02SOLPRI using a BigDecimal value.
  */
  public void setE02SOLPRI(BigDecimal newvalue)
  {
    fieldE02SOLPRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SOLPRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SOLPRI()
  {
    return fieldE02SOLPRI.getBigDecimal();
  }

  /**
  * Set field E02SOLTRM using a String value.
  */
  public void setE02SOLTRM(String newvalue)
  {
    fieldE02SOLTRM.setString(newvalue);
  }

  /**
  * Get value of field E02SOLTRM as a String.
  */
  public String getE02SOLTRM()
  {
    return fieldE02SOLTRM.getString();
  }

  /**
  * Set numeric field E02SOLTRM using a BigDecimal value.
  */
  public void setE02SOLTRM(BigDecimal newvalue)
  {
    fieldE02SOLTRM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SOLTRM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SOLTRM()
  {
    return fieldE02SOLTRM.getBigDecimal();
  }

  /**
  * Set field E02SOLTRC using a String value.
  */
  public void setE02SOLTRC(String newvalue)
  {
    fieldE02SOLTRC.setString(newvalue);
  }

  /**
  * Get value of field E02SOLTRC as a String.
  */
  public String getE02SOLTRC()
  {
    return fieldE02SOLTRC.getString();
  }

  /**
  * Set field E02SOLPVI using a String value.
  */
  public void setE02SOLPVI(String newvalue)
  {
    fieldE02SOLPVI.setString(newvalue);
  }

  /**
  * Get value of field E02SOLPVI as a String.
  */
  public String getE02SOLPVI()
  {
    return fieldE02SOLPVI.getString();
  }

  /**
  * Set field E02SOLOPE using a String value.
  */
  public void setE02SOLOPE(String newvalue)
  {
    fieldE02SOLOPE.setString(newvalue);
  }

  /**
  * Get value of field E02SOLOPE as a String.
  */
  public String getE02SOLOPE()
  {
    return fieldE02SOLOPE.getString();
  }

  /**
  * Set field E02SOLRTE using a String value.
  */
  public void setE02SOLRTE(String newvalue)
  {
    fieldE02SOLRTE.setString(newvalue);
  }

  /**
  * Get value of field E02SOLRTE as a String.
  */
  public String getE02SOLRTE()
  {
    return fieldE02SOLRTE.getString();
  }

  /**
  * Set numeric field E02SOLRTE using a BigDecimal value.
  */
  public void setE02SOLRTE(BigDecimal newvalue)
  {
    fieldE02SOLRTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SOLRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SOLRTE()
  {
    return fieldE02SOLRTE.getBigDecimal();
  }

  /**
  * Set field E02SOLART using a String value.
  */
  public void setE02SOLART(String newvalue)
  {
    fieldE02SOLART.setString(newvalue);
  }

  /**
  * Get value of field E02SOLART as a String.
  */
  public String getE02SOLART()
  {
    return fieldE02SOLART.getString();
  }

  /**
  * Set numeric field E02SOLART using a BigDecimal value.
  */
  public void setE02SOLART(BigDecimal newvalue)
  {
    fieldE02SOLART.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SOLART as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SOLART()
  {
    return fieldE02SOLART.getBigDecimal();
  }

  /**
  * Set field E02ACTION using a String value.
  */
  public void setE02ACTION(String newvalue)
  {
    fieldE02ACTION.setString(newvalue);
  }

  /**
  * Get value of field E02ACTION as a String.
  */
  public String getE02ACTION()
  {
    return fieldE02ACTION.getString();
  }

  /**
  * Set field E02FINDAT using a String value.
  */
  public void setE02FINDAT(String newvalue)
  {
    fieldE02FINDAT.setString(newvalue);
  }

  /**
  * Get value of field E02FINDAT as a String.
  */
  public String getE02FINDAT()
  {
    return fieldE02FINDAT.getString();
  }

}
