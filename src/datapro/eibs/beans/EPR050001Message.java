package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPR050001 physical file definition.
* 
* File level identifier is 1090501180925.
* Record format level identifier is 54DED0A569640.
*/

public class EPR050001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PRPBAN",
                                     "E01PRPBRN",
                                     "E01PRPAMT",
                                     "E01PRPAM1",
                                     "E01PRPDYS",
                                     "E01PRPDY1"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PRPBAN",
                                   "E01PRPBRN",
                                   "E01PRPAMT",
                                   "E01PRPAM1",
                                   "E01PRPDYS",
                                   "E01PRPDY1"
                                 };
  final static String fid = "1090501180925";
  final static String rid = "54DED0A569640";
  final static String fmtname = "EPR050001";
  final int FIELDCOUNT = 15;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01PRPBAN = null;
  private DecimalField fieldE01PRPBRN = null;
  private DecimalField fieldE01PRPAMT = null;
  private DecimalField fieldE01PRPAM1 = null;
  private DecimalField fieldE01PRPDYS = null;
  private DecimalField fieldE01PRPDY1 = null;

  /**
  * Constructor for EPR050001Message.
  */
  public EPR050001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 90;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PRPBAN =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01PRPBAN");
    fields[10] = fieldE01PRPBRN =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "E01PRPBRN");
    fields[11] = fieldE01PRPAMT =
    new DecimalField(message, HEADERSIZE + 48, 17, 2, "E01PRPAMT");
    fields[12] = fieldE01PRPAM1 =
    new DecimalField(message, HEADERSIZE + 65, 17, 2, "E01PRPAM1");
    fields[13] = fieldE01PRPDYS =
    new DecimalField(message, HEADERSIZE + 82, 4, 0, "E01PRPDYS");
    fields[14] = fieldE01PRPDY1 =
    new DecimalField(message, HEADERSIZE + 86, 4, 0, "E01PRPDY1");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PRPBAN using a String value.
  */
  public void setE01PRPBAN(String newvalue)
  {
    fieldE01PRPBAN.setString(newvalue);
  }

  /**
  * Get value of field E01PRPBAN as a String.
  */
  public String getE01PRPBAN()
  {
    return fieldE01PRPBAN.getString();
  }

  /**
  * Set field E01PRPBRN using a String value.
  */
  public void setE01PRPBRN(String newvalue)
  {
    fieldE01PRPBRN.setString(newvalue);
  }

  /**
  * Get value of field E01PRPBRN as a String.
  */
  public String getE01PRPBRN()
  {
    return fieldE01PRPBRN.getString();
  }

  /**
  * Set numeric field E01PRPBRN using a BigDecimal value.
  */
  public void setE01PRPBRN(BigDecimal newvalue)
  {
    fieldE01PRPBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPBRN()
  {
    return fieldE01PRPBRN.getBigDecimal();
  }

  /**
  * Set field E01PRPAMT using a String value.
  */
  public void setE01PRPAMT(String newvalue)
  {
    fieldE01PRPAMT.setString(newvalue);
  }

  /**
  * Get value of field E01PRPAMT as a String.
  */
  public String getE01PRPAMT()
  {
    return fieldE01PRPAMT.getString();
  }

  /**
  * Set numeric field E01PRPAMT using a BigDecimal value.
  */
  public void setE01PRPAMT(BigDecimal newvalue)
  {
    fieldE01PRPAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPAMT()
  {
    return fieldE01PRPAMT.getBigDecimal();
  }

  /**
  * Set field E01PRPAM1 using a String value.
  */
  public void setE01PRPAM1(String newvalue)
  {
    fieldE01PRPAM1.setString(newvalue);
  }

  /**
  * Get value of field E01PRPAM1 as a String.
  */
  public String getE01PRPAM1()
  {
    return fieldE01PRPAM1.getString();
  }

  /**
  * Set numeric field E01PRPAM1 using a BigDecimal value.
  */
  public void setE01PRPAM1(BigDecimal newvalue)
  {
    fieldE01PRPAM1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPAM1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPAM1()
  {
    return fieldE01PRPAM1.getBigDecimal();
  }

  /**
  * Set field E01PRPDYS using a String value.
  */
  public void setE01PRPDYS(String newvalue)
  {
    fieldE01PRPDYS.setString(newvalue);
  }

  /**
  * Get value of field E01PRPDYS as a String.
  */
  public String getE01PRPDYS()
  {
    return fieldE01PRPDYS.getString();
  }

  /**
  * Set numeric field E01PRPDYS using a BigDecimal value.
  */
  public void setE01PRPDYS(BigDecimal newvalue)
  {
    fieldE01PRPDYS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPDYS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPDYS()
  {
    return fieldE01PRPDYS.getBigDecimal();
  }

  /**
  * Set field E01PRPDY1 using a String value.
  */
  public void setE01PRPDY1(String newvalue)
  {
    fieldE01PRPDY1.setString(newvalue);
  }

  /**
  * Get value of field E01PRPDY1 as a String.
  */
  public String getE01PRPDY1()
  {
    return fieldE01PRPDY1.getString();
  }

  /**
  * Set numeric field E01PRPDY1 using a BigDecimal value.
  */
  public void setE01PRPDY1(BigDecimal newvalue)
  {
    fieldE01PRPDY1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPDY1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPDY1()
  {
    return fieldE01PRPDY1.getBigDecimal();
  }

}
