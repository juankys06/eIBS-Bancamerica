package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0044DS physical file definition.
* 
* File level identifier is 1030404170338.
* Record format level identifier is 4C43905A2DBE2.
*/

public class EWD0044DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSBK",
                                     "EWDSCY",
                                     "EWDSCD",
                                     "EWDSTY",
                                     "EWDKBK",
                                     "EWDCCY",
                                     "EWDACD",
                                     "EWDGLN",
                                     "EWDDSC",
                                     "EWDATY",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSBK",
                                   "EWDSCY",
                                   "EWDSCD",
                                   "EWDSTY",
                                   "EWDKBK",
                                   "EWDCCY",
                                   "EWDACD",
                                   "EWDGLN",
                                   "EWDDSC",
                                   "EWDATY",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1030404170338";
  final static String rid = "4C43905A2DBE2";
  final static String fmtname = "EWD0044DS";
  final int FIELDCOUNT = 12;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSBK = null;
  private CharacterField fieldEWDSCY = null;
  private CharacterField fieldEWDSCD = null;
  private CharacterField fieldEWDSTY = null;
  private CharacterField fieldEWDKBK = null;
  private CharacterField fieldEWDCCY = null;
  private CharacterField fieldEWDACD = null;
  private DecimalField fieldEWDGLN = null;
  private CharacterField fieldEWDDSC = null;
  private CharacterField fieldEWDATY = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0044DSMessage.
  */
  public EWD0044DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 85;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSBK =
    new CharacterField(message, HEADERSIZE + 0, 4, "EWDSBK");
    fields[1] = fieldEWDSCY =
    new CharacterField(message, HEADERSIZE + 4, 3, "EWDSCY");
    fields[2] = fieldEWDSCD =
    new CharacterField(message, HEADERSIZE + 7, 2, "EWDSCD");
    fields[3] = fieldEWDSTY =
    new CharacterField(message, HEADERSIZE + 9, 4, "EWDSTY");
    fields[4] = fieldEWDKBK =
    new CharacterField(message, HEADERSIZE + 13, 2, "EWDKBK");
    fields[5] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 15, 3, "EWDCCY");
    fields[6] = fieldEWDACD =
    new CharacterField(message, HEADERSIZE + 18, 2, "EWDACD");
    fields[7] = fieldEWDGLN =
    new DecimalField(message, HEADERSIZE + 20, 17, 0, "EWDGLN");
    fields[8] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 37, 35, "EWDDSC");
    fields[9] = fieldEWDATY =
    new CharacterField(message, HEADERSIZE + 72, 4, "EWDATY");
    fields[10] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 76, 8, 0, "EWDREC");
    fields[11] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 84, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSBK using a String value.
  */
  public void setEWDSBK(String newvalue)
  {
    fieldEWDSBK.setString(newvalue);
  }

  /**
  * Get value of field EWDSBK as a String.
  */
  public String getEWDSBK()
  {
    return fieldEWDSBK.getString();
  }

  /**
  * Set field EWDSCY using a String value.
  */
  public void setEWDSCY(String newvalue)
  {
    fieldEWDSCY.setString(newvalue);
  }

  /**
  * Get value of field EWDSCY as a String.
  */
  public String getEWDSCY()
  {
    return fieldEWDSCY.getString();
  }

  /**
  * Set field EWDSCD using a String value.
  */
  public void setEWDSCD(String newvalue)
  {
    fieldEWDSCD.setString(newvalue);
  }

  /**
  * Get value of field EWDSCD as a String.
  */
  public String getEWDSCD()
  {
    return fieldEWDSCD.getString();
  }

  /**
  * Set field EWDSTY using a String value.
  */
  public void setEWDSTY(String newvalue)
  {
    fieldEWDSTY.setString(newvalue);
  }

  /**
  * Get value of field EWDSTY as a String.
  */
  public String getEWDSTY()
  {
    return fieldEWDSTY.getString();
  }

  /**
  * Set field EWDKBK using a String value.
  */
  public void setEWDKBK(String newvalue)
  {
    fieldEWDKBK.setString(newvalue);
  }

  /**
  * Get value of field EWDKBK as a String.
  */
  public String getEWDKBK()
  {
    return fieldEWDKBK.getString();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDACD using a String value.
  */
  public void setEWDACD(String newvalue)
  {
    fieldEWDACD.setString(newvalue);
  }

  /**
  * Get value of field EWDACD as a String.
  */
  public String getEWDACD()
  {
    return fieldEWDACD.getString();
  }

  /**
  * Set field EWDGLN using a String value.
  */
  public void setEWDGLN(String newvalue)
  {
    fieldEWDGLN.setString(newvalue);
  }

  /**
  * Get value of field EWDGLN as a String.
  */
  public String getEWDGLN()
  {
    return fieldEWDGLN.getString();
  }

  /**
  * Set numeric field EWDGLN using a BigDecimal value.
  */
  public void setEWDGLN(BigDecimal newvalue)
  {
    fieldEWDGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDGLN()
  {
    return fieldEWDGLN.getBigDecimal();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDATY using a String value.
  */
  public void setEWDATY(String newvalue)
  {
    fieldEWDATY.setString(newvalue);
  }

  /**
  * Get value of field EWDATY as a String.
  */
  public String getEWDATY()
  {
    return fieldEWDATY.getString();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
