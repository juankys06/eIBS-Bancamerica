package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL051001 physical file definition.
* 
* File level identifier is 1031020132120.
* Record format level identifier is 4D175EEC2D345.
*/

public class EDL051001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DLSBNK",
                                     "E01DLSTYP",
                                     "E01DLSTLN",
                                     "E01DLSCUN",
                                     "E01DLSDSC",
                                     "E01DLSDE1",
                                     "E01DLSDAB",
                                     "E01DLSUS1",
                                     "E01DLSUS2",
                                     "E01CDROPE",
                                     "E01DLSMAM",
                                     "E01DLSMAD",
                                     "E01DLSMAY"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DLSBNK",
                                   "E01DLSTYP",
                                   "E01DLSTLN",
                                   "E01DLSCUN",
                                   "E01DLSDSC",
                                   "E01DLSDE1",
                                   "E01DLSDAB",
                                   "E01DLSUS1",
                                   "E01DLSUS2",
                                   "E01CDROPE",
                                   "E01DLSMAM",
                                   "E01DLSMAD",
                                   "E01DLSMAY"
                                 };
  final static String fid = "1031020132120";
  final static String rid = "4D175EEC2D345";
  final static String fmtname = "EDL051001";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01DLSBNK = null;
  private CharacterField fieldE01DLSTYP = null;
  private CharacterField fieldE01DLSTLN = null;
  private DecimalField fieldE01DLSCUN = null;
  private CharacterField fieldE01DLSDSC = null;
  private CharacterField fieldE01DLSDE1 = null;
  private DecimalField fieldE01DLSDAB = null;
  private CharacterField fieldE01DLSUS1 = null;
  private CharacterField fieldE01DLSUS2 = null;
  private CharacterField fieldE01CDROPE = null;
  private DecimalField fieldE01DLSMAM = null;
  private DecimalField fieldE01DLSMAD = null;
  private DecimalField fieldE01DLSMAY = null;

  /**
  * Constructor for EDL051001Message.
  */
  public EDL051001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 137;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DLSBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01DLSBNK");
    fields[10] = fieldE01DLSTYP =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01DLSTYP");
    fields[11] = fieldE01DLSTLN =
    new CharacterField(message, HEADERSIZE + 48, 2, "E01DLSTLN");
    fields[12] = fieldE01DLSCUN =
    new DecimalField(message, HEADERSIZE + 50, 10, 0, "E01DLSCUN");
    fields[13] = fieldE01DLSDSC =
    new CharacterField(message, HEADERSIZE + 60, 35, "E01DLSDSC");
    fields[14] = fieldE01DLSDE1 =
    new CharacterField(message, HEADERSIZE + 95, 20, "E01DLSDE1");
    fields[15] = fieldE01DLSDAB =
    new DecimalField(message, HEADERSIZE + 115, 4, 0, "E01DLSDAB");
    fields[16] = fieldE01DLSUS1 =
    new CharacterField(message, HEADERSIZE + 119, 4, "E01DLSUS1");
    fields[17] = fieldE01DLSUS2 =
    new CharacterField(message, HEADERSIZE + 123, 4, "E01DLSUS2");
    fields[18] = fieldE01CDROPE =
    new CharacterField(message, HEADERSIZE + 127, 1, "E01CDROPE");
    fields[19] = fieldE01DLSMAM =
    new DecimalField(message, HEADERSIZE + 128, 3, 0, "E01DLSMAM");
    fields[20] = fieldE01DLSMAD =
    new DecimalField(message, HEADERSIZE + 131, 3, 0, "E01DLSMAD");
    fields[21] = fieldE01DLSMAY =
    new DecimalField(message, HEADERSIZE + 134, 3, 0, "E01DLSMAY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DLSBNK using a String value.
  */
  public void setE01DLSBNK(String newvalue)
  {
    fieldE01DLSBNK.setString(newvalue);
  }

  /**
  * Get value of field E01DLSBNK as a String.
  */
  public String getE01DLSBNK()
  {
    return fieldE01DLSBNK.getString();
  }

  /**
  * Set field E01DLSTYP using a String value.
  */
  public void setE01DLSTYP(String newvalue)
  {
    fieldE01DLSTYP.setString(newvalue);
  }

  /**
  * Get value of field E01DLSTYP as a String.
  */
  public String getE01DLSTYP()
  {
    return fieldE01DLSTYP.getString();
  }

  /**
  * Set field E01DLSTLN using a String value.
  */
  public void setE01DLSTLN(String newvalue)
  {
    fieldE01DLSTLN.setString(newvalue);
  }

  /**
  * Get value of field E01DLSTLN as a String.
  */
  public String getE01DLSTLN()
  {
    return fieldE01DLSTLN.getString();
  }

  /**
  * Set field E01DLSCUN using a String value.
  */
  public void setE01DLSCUN(String newvalue)
  {
    fieldE01DLSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01DLSCUN as a String.
  */
  public String getE01DLSCUN()
  {
    return fieldE01DLSCUN.getString();
  }

  /**
  * Set numeric field E01DLSCUN using a BigDecimal value.
  */
  public void setE01DLSCUN(BigDecimal newvalue)
  {
    fieldE01DLSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSCUN()
  {
    return fieldE01DLSCUN.getBigDecimal();
  }

  /**
  * Set field E01DLSDSC using a String value.
  */
  public void setE01DLSDSC(String newvalue)
  {
    fieldE01DLSDSC.setString(newvalue);
  }

  /**
  * Get value of field E01DLSDSC as a String.
  */
  public String getE01DLSDSC()
  {
    return fieldE01DLSDSC.getString();
  }

  /**
  * Set field E01DLSDE1 using a String value.
  */
  public void setE01DLSDE1(String newvalue)
  {
    fieldE01DLSDE1.setString(newvalue);
  }

  /**
  * Get value of field E01DLSDE1 as a String.
  */
  public String getE01DLSDE1()
  {
    return fieldE01DLSDE1.getString();
  }

  /**
  * Set field E01DLSDAB using a String value.
  */
  public void setE01DLSDAB(String newvalue)
  {
    fieldE01DLSDAB.setString(newvalue);
  }

  /**
  * Get value of field E01DLSDAB as a String.
  */
  public String getE01DLSDAB()
  {
    return fieldE01DLSDAB.getString();
  }

  /**
  * Set numeric field E01DLSDAB using a BigDecimal value.
  */
  public void setE01DLSDAB(BigDecimal newvalue)
  {
    fieldE01DLSDAB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSDAB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSDAB()
  {
    return fieldE01DLSDAB.getBigDecimal();
  }

  /**
  * Set field E01DLSUS1 using a String value.
  */
  public void setE01DLSUS1(String newvalue)
  {
    fieldE01DLSUS1.setString(newvalue);
  }

  /**
  * Get value of field E01DLSUS1 as a String.
  */
  public String getE01DLSUS1()
  {
    return fieldE01DLSUS1.getString();
  }

  /**
  * Set field E01DLSUS2 using a String value.
  */
  public void setE01DLSUS2(String newvalue)
  {
    fieldE01DLSUS2.setString(newvalue);
  }

  /**
  * Get value of field E01DLSUS2 as a String.
  */
  public String getE01DLSUS2()
  {
    return fieldE01DLSUS2.getString();
  }

  /**
  * Set field E01CDROPE using a String value.
  */
  public void setE01CDROPE(String newvalue)
  {
    fieldE01CDROPE.setString(newvalue);
  }

  /**
  * Get value of field E01CDROPE as a String.
  */
  public String getE01CDROPE()
  {
    return fieldE01CDROPE.getString();
  }

  /**
  * Set field E01DLSMAM using a String value.
  */
  public void setE01DLSMAM(String newvalue)
  {
    fieldE01DLSMAM.setString(newvalue);
  }

  /**
  * Get value of field E01DLSMAM as a String.
  */
  public String getE01DLSMAM()
  {
    return fieldE01DLSMAM.getString();
  }

  /**
  * Set numeric field E01DLSMAM using a BigDecimal value.
  */
  public void setE01DLSMAM(BigDecimal newvalue)
  {
    fieldE01DLSMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSMAM()
  {
    return fieldE01DLSMAM.getBigDecimal();
  }

  /**
  * Set field E01DLSMAD using a String value.
  */
  public void setE01DLSMAD(String newvalue)
  {
    fieldE01DLSMAD.setString(newvalue);
  }

  /**
  * Get value of field E01DLSMAD as a String.
  */
  public String getE01DLSMAD()
  {
    return fieldE01DLSMAD.getString();
  }

  /**
  * Set numeric field E01DLSMAD using a BigDecimal value.
  */
  public void setE01DLSMAD(BigDecimal newvalue)
  {
    fieldE01DLSMAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSMAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSMAD()
  {
    return fieldE01DLSMAD.getBigDecimal();
  }

  /**
  * Set field E01DLSMAY using a String value.
  */
  public void setE01DLSMAY(String newvalue)
  {
    fieldE01DLSMAY.setString(newvalue);
  }

  /**
  * Get value of field E01DLSMAY as a String.
  */
  public String getE01DLSMAY()
  {
    return fieldE01DLSMAY.getString();
  }

  /**
  * Set numeric field E01DLSMAY using a BigDecimal value.
  */
  public void setE01DLSMAY(BigDecimal newvalue)
  {
    fieldE01DLSMAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSMAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSMAY()
  {
    return fieldE01DLSMAY.getBigDecimal();
  }

}
