package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0720DS physical file definition.
* 
* File level identifier is 1131119162044.
* Record format level identifier is 522B81E8CB273.
*/

public class EWD0720DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSHR",
                                     "EWDSH1",
                                     "EWDCCY",
                                     "EWDDSC",
                                     "EWDCODTRN",
                                     "EWDTYPTRN",
                                     "EWDOP1",
                                     "EWDRED",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSHR",
                                   "EWDSH1",
                                   "EWDCCY",
                                   "EWDDSC",
                                   "EWDCODTRN",
                                   "EWDTYPTRN",
                                   "EWDOP1",
                                   "EWDRED",
                                   "EWDOPE"
                                 };
  final static String fid = "1131119162044";
  final static String rid = "522B81E8CB273";
  final static String fmtname = "EWD0720DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSHR = null;
  private CharacterField fieldEWDSH1 = null;
  private CharacterField fieldEWDCCY = null;
  private CharacterField fieldEWDDSC = null;
  private CharacterField fieldEWDCODTRN = null;
  private CharacterField fieldEWDTYPTRN = null;
  private CharacterField fieldEWDOP1 = null;
  private CharacterField fieldEWDRED = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0720DSMessage.
  */
  public EWD0720DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 79;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSHR =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDSHR");
    fields[1] = fieldEWDSH1 =
    new CharacterField(message, HEADERSIZE + 2, 10, "EWDSH1");
    fields[2] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 12, 3, "EWDCCY");
    fields[3] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 15, 35, "EWDDSC");
    fields[4] = fieldEWDCODTRN =
    new CharacterField(message, HEADERSIZE + 50, 10, "EWDCODTRN");
    fields[5] = fieldEWDTYPTRN =
    new CharacterField(message, HEADERSIZE + 60, 10, "EWDTYPTRN");
    fields[6] = fieldEWDOP1 =
    new CharacterField(message, HEADERSIZE + 70, 2, "EWDOP1");
    fields[7] = fieldEWDRED =
    new CharacterField(message, HEADERSIZE + 72, 6, "EWDRED");
    fields[8] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 78, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSHR using a String value.
  */
  public void setEWDSHR(String newvalue)
  {
    fieldEWDSHR.setString(newvalue);
  }

  /**
  * Get value of field EWDSHR as a String.
  */
  public String getEWDSHR()
  {
    return fieldEWDSHR.getString();
  }

  /**
  * Set field EWDSH1 using a String value.
  */
  public void setEWDSH1(String newvalue)
  {
    fieldEWDSH1.setString(newvalue);
  }

  /**
  * Get value of field EWDSH1 as a String.
  */
  public String getEWDSH1()
  {
    return fieldEWDSH1.getString();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDCODTRN using a String value.
  */
  public void setEWDCODTRN(String newvalue)
  {
    fieldEWDCODTRN.setString(newvalue);
  }

  /**
  * Get value of field EWDCODTRN as a String.
  */
  public String getEWDCODTRN()
  {
    return fieldEWDCODTRN.getString();
  }

  /**
  * Set field EWDTYPTRN using a String value.
  */
  public void setEWDTYPTRN(String newvalue)
  {
    fieldEWDTYPTRN.setString(newvalue);
  }

  /**
  * Get value of field EWDTYPTRN as a String.
  */
  public String getEWDTYPTRN()
  {
    return fieldEWDTYPTRN.getString();
  }

  /**
  * Set field EWDOP1 using a String value.
  */
  public void setEWDOP1(String newvalue)
  {
    fieldEWDOP1.setString(newvalue);
  }

  /**
  * Get value of field EWDOP1 as a String.
  */
  public String getEWDOP1()
  {
    return fieldEWDOP1.getString();
  }

  /**
  * Set field EWDRED using a String value.
  */
  public void setEWDRED(String newvalue)
  {
    fieldEWDRED.setString(newvalue);
  }

  /**
  * Get value of field EWDRED as a String.
  */
  public String getEWDRED()
  {
    return fieldEWDRED.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
