package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECIF04002 physical file definition.
* 
* File level identifier is 1031217192442.
* Record format level identifier is 42F6E89EA85FC.
*/

public class ECIF04002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02ACCNUM",
                                     "E02PROCDE",
                                     "E02CUSNUM",
                                     "E02CUSNA1",
                                     "E02BNKNUM",
                                     "E02BRANCH",
                                     "E02CCYCDE",
                                     "E02GLNNUM",
                                     "E02CCNNUM",
                                     "E02ACCTYP",
                                     "E02ACCOFC",
                                     "E02DSCATY",
                                     "E02DSCPRO",
                                     "E02DSCOFC"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02ACCNUM",
                                   "E02PROCDE",
                                   "E02CUSNUM",
                                   "E02CUSNA1",
                                   "E02BNKNUM",
                                   "E02BRANCH",
                                   "E02CCYCDE",
                                   "E02GLNNUM",
                                   "E02CCNNUM",
                                   "E02ACCTYP",
                                   "E02ACCOFC",
                                   "E02DSCATY",
                                   "E02DSCPRO",
                                   "E02DSCOFC"
                                 };
  final static String fid = "1031217192442";
  final static String rid = "42F6E89EA85FC";
  final static String fmtname = "ECIF04002";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02ACCNUM = null;
  private CharacterField fieldE02PROCDE = null;
  private DecimalField fieldE02CUSNUM = null;
  private CharacterField fieldE02CUSNA1 = null;
  private CharacterField fieldE02BNKNUM = null;
  private DecimalField fieldE02BRANCH = null;
  private CharacterField fieldE02CCYCDE = null;
  private DecimalField fieldE02GLNNUM = null;
  private DecimalField fieldE02CCNNUM = null;
  private CharacterField fieldE02ACCTYP = null;
  private CharacterField fieldE02ACCOFC = null;
  private CharacterField fieldE02DSCATY = null;
  private CharacterField fieldE02DSCPRO = null;
  private CharacterField fieldE02DSCOFC = null;

  /**
  * Constructor for ECIF04002Message.
  */
  public ECIF04002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 262;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02ACCNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02ACCNUM");
    fields[10] = fieldE02PROCDE =
    new CharacterField(message, HEADERSIZE + 55, 4, "E02PROCDE");
    fields[11] = fieldE02CUSNUM =
    new DecimalField(message, HEADERSIZE + 59, 10, 0, "E02CUSNUM");
    fields[12] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 69, 45, "E02CUSNA1");
    fields[13] = fieldE02BNKNUM =
    new CharacterField(message, HEADERSIZE + 114, 2, "E02BNKNUM");
    fields[14] = fieldE02BRANCH =
    new DecimalField(message, HEADERSIZE + 116, 4, 0, "E02BRANCH");
    fields[15] = fieldE02CCYCDE =
    new CharacterField(message, HEADERSIZE + 120, 3, "E02CCYCDE");
    fields[16] = fieldE02GLNNUM =
    new DecimalField(message, HEADERSIZE + 123, 17, 0, "E02GLNNUM");
    fields[17] = fieldE02CCNNUM =
    new DecimalField(message, HEADERSIZE + 140, 9, 0, "E02CCNNUM");
    fields[18] = fieldE02ACCTYP =
    new CharacterField(message, HEADERSIZE + 149, 4, "E02ACCTYP");
    fields[19] = fieldE02ACCOFC =
    new CharacterField(message, HEADERSIZE + 153, 4, "E02ACCOFC");
    fields[20] = fieldE02DSCATY =
    new CharacterField(message, HEADERSIZE + 157, 35, "E02DSCATY");
    fields[21] = fieldE02DSCPRO =
    new CharacterField(message, HEADERSIZE + 192, 35, "E02DSCPRO");
    fields[22] = fieldE02DSCOFC =
    new CharacterField(message, HEADERSIZE + 227, 35, "E02DSCOFC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02ACCNUM using a String value.
  */
  public void setE02ACCNUM(String newvalue)
  {
    fieldE02ACCNUM.setString(newvalue);
  }

  /**
  * Get value of field E02ACCNUM as a String.
  */
  public String getE02ACCNUM()
  {
    return fieldE02ACCNUM.getString();
  }

  /**
  * Set numeric field E02ACCNUM using a BigDecimal value.
  */
  public void setE02ACCNUM(BigDecimal newvalue)
  {
    fieldE02ACCNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ACCNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ACCNUM()
  {
    return fieldE02ACCNUM.getBigDecimal();
  }

  /**
  * Set field E02PROCDE using a String value.
  */
  public void setE02PROCDE(String newvalue)
  {
    fieldE02PROCDE.setString(newvalue);
  }

  /**
  * Get value of field E02PROCDE as a String.
  */
  public String getE02PROCDE()
  {
    return fieldE02PROCDE.getString();
  }

  /**
  * Set field E02CUSNUM using a String value.
  */
  public void setE02CUSNUM(String newvalue)
  {
    fieldE02CUSNUM.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNUM as a String.
  */
  public String getE02CUSNUM()
  {
    return fieldE02CUSNUM.getString();
  }

  /**
  * Set numeric field E02CUSNUM using a BigDecimal value.
  */
  public void setE02CUSNUM(BigDecimal newvalue)
  {
    fieldE02CUSNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUSNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUSNUM()
  {
    return fieldE02CUSNUM.getBigDecimal();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02BNKNUM using a String value.
  */
  public void setE02BNKNUM(String newvalue)
  {
    fieldE02BNKNUM.setString(newvalue);
  }

  /**
  * Get value of field E02BNKNUM as a String.
  */
  public String getE02BNKNUM()
  {
    return fieldE02BNKNUM.getString();
  }

  /**
  * Set field E02BRANCH using a String value.
  */
  public void setE02BRANCH(String newvalue)
  {
    fieldE02BRANCH.setString(newvalue);
  }

  /**
  * Get value of field E02BRANCH as a String.
  */
  public String getE02BRANCH()
  {
    return fieldE02BRANCH.getString();
  }

  /**
  * Set numeric field E02BRANCH using a BigDecimal value.
  */
  public void setE02BRANCH(BigDecimal newvalue)
  {
    fieldE02BRANCH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BRANCH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BRANCH()
  {
    return fieldE02BRANCH.getBigDecimal();
  }

  /**
  * Set field E02CCYCDE using a String value.
  */
  public void setE02CCYCDE(String newvalue)
  {
    fieldE02CCYCDE.setString(newvalue);
  }

  /**
  * Get value of field E02CCYCDE as a String.
  */
  public String getE02CCYCDE()
  {
    return fieldE02CCYCDE.getString();
  }

  /**
  * Set field E02GLNNUM using a String value.
  */
  public void setE02GLNNUM(String newvalue)
  {
    fieldE02GLNNUM.setString(newvalue);
  }

  /**
  * Get value of field E02GLNNUM as a String.
  */
  public String getE02GLNNUM()
  {
    return fieldE02GLNNUM.getString();
  }

  /**
  * Set numeric field E02GLNNUM using a BigDecimal value.
  */
  public void setE02GLNNUM(BigDecimal newvalue)
  {
    fieldE02GLNNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GLNNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GLNNUM()
  {
    return fieldE02GLNNUM.getBigDecimal();
  }

  /**
  * Set field E02CCNNUM using a String value.
  */
  public void setE02CCNNUM(String newvalue)
  {
    fieldE02CCNNUM.setString(newvalue);
  }

  /**
  * Get value of field E02CCNNUM as a String.
  */
  public String getE02CCNNUM()
  {
    return fieldE02CCNNUM.getString();
  }

  /**
  * Set numeric field E02CCNNUM using a BigDecimal value.
  */
  public void setE02CCNNUM(BigDecimal newvalue)
  {
    fieldE02CCNNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCNNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCNNUM()
  {
    return fieldE02CCNNUM.getBigDecimal();
  }

  /**
  * Set field E02ACCTYP using a String value.
  */
  public void setE02ACCTYP(String newvalue)
  {
    fieldE02ACCTYP.setString(newvalue);
  }

  /**
  * Get value of field E02ACCTYP as a String.
  */
  public String getE02ACCTYP()
  {
    return fieldE02ACCTYP.getString();
  }

  /**
  * Set field E02ACCOFC using a String value.
  */
  public void setE02ACCOFC(String newvalue)
  {
    fieldE02ACCOFC.setString(newvalue);
  }

  /**
  * Get value of field E02ACCOFC as a String.
  */
  public String getE02ACCOFC()
  {
    return fieldE02ACCOFC.getString();
  }

  /**
  * Set field E02DSCATY using a String value.
  */
  public void setE02DSCATY(String newvalue)
  {
    fieldE02DSCATY.setString(newvalue);
  }

  /**
  * Get value of field E02DSCATY as a String.
  */
  public String getE02DSCATY()
  {
    return fieldE02DSCATY.getString();
  }

  /**
  * Set field E02DSCPRO using a String value.
  */
  public void setE02DSCPRO(String newvalue)
  {
    fieldE02DSCPRO.setString(newvalue);
  }

  /**
  * Get value of field E02DSCPRO as a String.
  */
  public String getE02DSCPRO()
  {
    return fieldE02DSCPRO.getString();
  }

  /**
  * Set field E02DSCOFC using a String value.
  */
  public void setE02DSCOFC(String newvalue)
  {
    fieldE02DSCOFC.setString(newvalue);
  }

  /**
  * Get value of field E02DSCOFC as a String.
  */
  public String getE02DSCOFC()
  {
    return fieldE02DSCOFC.getString();
  }

}
