package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS0041DS physical file definition.
* 
* File level identifier is 1030121192012.
* Record format level identifier is 56E29CD29DBFE.
*/

public class ESS0041DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "ESSUSR",
                                     "ESSTYP",
                                     "ESSSID",
                                     "ESSIDE",
                                     "ESSDSC",
                                     "ESSIMG",
                                     "ESSTAD",
                                     "ESSTPO"
                                   };
  final static String tnames[] = {
                                   "ESSUSR",
                                   "ESSTYP",
                                   "ESSSID",
                                   "ESSIDE",
                                   "ESSDSC",
                                   "ESSIMG",
                                   "ESSTAD",
                                   "ESSTPO"
                                 };
  final static String fid = "1030121192012";
  final static String rid = "56E29CD29DBFE";
  final static String fmtname = "ESS0041DS";
  final int FIELDCOUNT = 8;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldESSUSR = null;
  private CharacterField fieldESSTYP = null;
  private CharacterField fieldESSSID = null;
  private CharacterField fieldESSIDE = null;
  private CharacterField fieldESSDSC = null;
  private CharacterField fieldESSIMG = null;
  private CharacterField fieldESSTAD = null;
  private CharacterField fieldESSTPO = null;

  /**
  * Constructor for ESS0041DSMessage.
  */
  public ESS0041DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 410;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldESSUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "ESSUSR");
    fields[1] = fieldESSTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "ESSTYP");
    fields[2] = fieldESSSID =
    new CharacterField(message, HEADERSIZE + 11, 6, "ESSSID");
    fields[3] = fieldESSIDE =
    new CharacterField(message, HEADERSIZE + 17, 3, "ESSIDE");
    fields[4] = fieldESSDSC =
    new CharacterField(message, HEADERSIZE + 20, 35, "ESSDSC");
    fields[5] = fieldESSIMG =
    new CharacterField(message, HEADERSIZE + 55, 50, "ESSIMG");
    fields[6] = fieldESSTAD =
    new CharacterField(message, HEADERSIZE + 105, 255, "ESSTAD");
    fields[7] = fieldESSTPO =
    new CharacterField(message, HEADERSIZE + 360, 50, "ESSTPO");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field ESSUSR using a String value.
  */
  public void setESSUSR(String newvalue)
  {
    fieldESSUSR.setString(newvalue);
  }

  /**
  * Get value of field ESSUSR as a String.
  */
  public String getESSUSR()
  {
    return fieldESSUSR.getString();
  }

  /**
  * Set field ESSTYP using a String value.
  */
  public void setESSTYP(String newvalue)
  {
    fieldESSTYP.setString(newvalue);
  }

  /**
  * Get value of field ESSTYP as a String.
  */
  public String getESSTYP()
  {
    return fieldESSTYP.getString();
  }

  /**
  * Set field ESSSID using a String value.
  */
  public void setESSSID(String newvalue)
  {
    fieldESSSID.setString(newvalue);
  }

  /**
  * Get value of field ESSSID as a String.
  */
  public String getESSSID()
  {
    return fieldESSSID.getString();
  }

  /**
  * Set field ESSIDE using a String value.
  */
  public void setESSIDE(String newvalue)
  {
    fieldESSIDE.setString(newvalue);
  }

  /**
  * Get value of field ESSIDE as a String.
  */
  public String getESSIDE()
  {
    return fieldESSIDE.getString();
  }

  /**
  * Set field ESSDSC using a String value.
  */
  public void setESSDSC(String newvalue)
  {
    fieldESSDSC.setString(newvalue);
  }

  /**
  * Get value of field ESSDSC as a String.
  */
  public String getESSDSC()
  {
    return fieldESSDSC.getString();
  }

  /**
  * Set field ESSIMG using a String value.
  */
  public void setESSIMG(String newvalue)
  {
    fieldESSIMG.setString(newvalue);
  }

  /**
  * Get value of field ESSIMG as a String.
  */
  public String getESSIMG()
  {
    return fieldESSIMG.getString();
  }

  /**
  * Set field ESSTAD using a String value.
  */
  public void setESSTAD(String newvalue)
  {
    fieldESSTAD.setString(newvalue);
  }

  /**
  * Get value of field ESSTAD as a String.
  */
  public String getESSTAD()
  {
    return fieldESSTAD.getString();
  }

  /**
  * Set field ESSTPO using a String value.
  */
  public void setESSTPO(String newvalue)
  {
    fieldESSTPO.setString(newvalue);
  }

  /**
  * Get value of field ESSTPO as a String.
  */
  public String getESSTPO()
  {
    return fieldESSTPO.getString();
  }

}
