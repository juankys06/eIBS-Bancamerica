package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECH076501 physical file definition.
* 
* File level identifier is 1021219104446.
* Record format level identifier is 3F717A22B6EC8.
*/

public class ECH076501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CHMBRN",
                                     "E01ESTADO",
                                     "E01CHMFEY",
                                     "E01CHMFEM",
                                     "E01CHMFED",
                                     "E01CHMACC",
                                     "E01CHMTCB",
                                     "E01BRNNME",
                                     "E01TCBNOM",
                                     "E01CHMRQY",
                                     "E01CHMRQM",
                                     "E01CHMRQD",
                                     "E01CHMRCY",
                                     "E01CHMRCM",
                                     "E01CHMRCD",
                                     "E01CHMACY",
                                     "E01CHMACM",
                                     "E01CHMACD",
                                     "E01CHMICK",
                                     "E01CHMFCK",
                                     "E01CHMNCB",
                                     "E01CUSNA1",
                                     "E01CUSIDN",
                                     "E01CHENA1",
                                     "E01CHEIDN"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CHMBRN",
                                   "E01ESTADO",
                                   "E01CHMFEY",
                                   "E01CHMFEM",
                                   "E01CHMFED",
                                   "E01CHMACC",
                                   "E01CHMTCB",
                                   "E01BRNNME",
                                   "E01TCBNOM",
                                   "E01CHMRQY",
                                   "E01CHMRQM",
                                   "E01CHMRQD",
                                   "E01CHMRCY",
                                   "E01CHMRCM",
                                   "E01CHMRCD",
                                   "E01CHMACY",
                                   "E01CHMACM",
                                   "E01CHMACD",
                                   "E01CHMICK",
                                   "E01CHMFCK",
                                   "E01CHMNCB",
                                   "E01CUSNA1",
                                   "E01CUSIDN",
                                   "E01CHENA1",
                                   "E01CHEIDN"
                                 };
  final static String fid = "1021219104446";
  final static String rid = "3F717A22B6EC8";
  final static String fmtname = "ECH076501";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CHMBRN = null;
  private CharacterField fieldE01ESTADO = null;
  private DecimalField fieldE01CHMFEY = null;
  private DecimalField fieldE01CHMFEM = null;
  private DecimalField fieldE01CHMFED = null;
  private DecimalField fieldE01CHMACC = null;
  private DecimalField fieldE01CHMTCB = null;
  private CharacterField fieldE01BRNNME = null;
  private CharacterField fieldE01TCBNOM = null;
  private DecimalField fieldE01CHMRQY = null;
  private DecimalField fieldE01CHMRQM = null;
  private DecimalField fieldE01CHMRQD = null;
  private DecimalField fieldE01CHMRCY = null;
  private DecimalField fieldE01CHMRCM = null;
  private DecimalField fieldE01CHMRCD = null;
  private DecimalField fieldE01CHMACY = null;
  private DecimalField fieldE01CHMACM = null;
  private DecimalField fieldE01CHMACD = null;
  private DecimalField fieldE01CHMICK = null;
  private DecimalField fieldE01CHMFCK = null;
  private DecimalField fieldE01CHMNCB = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01CUSIDN = null;
  private CharacterField fieldE01CHENA1 = null;
  private CharacterField fieldE01CHEIDN = null;

  /**
  * Constructor for ECH076501Message.
  */
  public ECH076501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 314;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CHMBRN =
    new DecimalField(message, HEADERSIZE + 42, 4, 0, "E01CHMBRN");
    fields[10] = fieldE01ESTADO =
    new CharacterField(message, HEADERSIZE + 46, 1, "E01ESTADO");
    fields[11] = fieldE01CHMFEY =
    new DecimalField(message, HEADERSIZE + 47, 3, 0, "E01CHMFEY");
    fields[12] = fieldE01CHMFEM =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "E01CHMFEM");
    fields[13] = fieldE01CHMFED =
    new DecimalField(message, HEADERSIZE + 53, 3, 0, "E01CHMFED");
    fields[14] = fieldE01CHMACC =
    new DecimalField(message, HEADERSIZE + 56, 13, 0, "E01CHMACC");
    fields[15] = fieldE01CHMTCB =
    new DecimalField(message, HEADERSIZE + 69, 3, 0, "E01CHMTCB");
    fields[16] = fieldE01BRNNME =
    new CharacterField(message, HEADERSIZE + 72, 35, "E01BRNNME");
    fields[17] = fieldE01TCBNOM =
    new CharacterField(message, HEADERSIZE + 107, 35, "E01TCBNOM");
    fields[18] = fieldE01CHMRQY =
    new DecimalField(message, HEADERSIZE + 142, 3, 0, "E01CHMRQY");
    fields[19] = fieldE01CHMRQM =
    new DecimalField(message, HEADERSIZE + 145, 3, 0, "E01CHMRQM");
    fields[20] = fieldE01CHMRQD =
    new DecimalField(message, HEADERSIZE + 148, 3, 0, "E01CHMRQD");
    fields[21] = fieldE01CHMRCY =
    new DecimalField(message, HEADERSIZE + 151, 3, 0, "E01CHMRCY");
    fields[22] = fieldE01CHMRCM =
    new DecimalField(message, HEADERSIZE + 154, 3, 0, "E01CHMRCM");
    fields[23] = fieldE01CHMRCD =
    new DecimalField(message, HEADERSIZE + 157, 3, 0, "E01CHMRCD");
    fields[24] = fieldE01CHMACY =
    new DecimalField(message, HEADERSIZE + 160, 3, 0, "E01CHMACY");
    fields[25] = fieldE01CHMACM =
    new DecimalField(message, HEADERSIZE + 163, 3, 0, "E01CHMACM");
    fields[26] = fieldE01CHMACD =
    new DecimalField(message, HEADERSIZE + 166, 3, 0, "E01CHMACD");
    fields[27] = fieldE01CHMICK =
    new DecimalField(message, HEADERSIZE + 169, 10, 0, "E01CHMICK");
    fields[28] = fieldE01CHMFCK =
    new DecimalField(message, HEADERSIZE + 179, 10, 0, "E01CHMFCK");
    fields[29] = fieldE01CHMNCB =
    new DecimalField(message, HEADERSIZE + 189, 5, 0, "E01CHMNCB");
    fields[30] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 194, 45, "E01CUSNA1");
    fields[31] = fieldE01CUSIDN =
    new CharacterField(message, HEADERSIZE + 239, 15, "E01CUSIDN");
    fields[32] = fieldE01CHENA1 =
    new CharacterField(message, HEADERSIZE + 254, 45, "E01CHENA1");
    fields[33] = fieldE01CHEIDN =
    new CharacterField(message, HEADERSIZE + 299, 15, "E01CHEIDN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CHMBRN using a String value.
  */
  public void setE01CHMBRN(String newvalue)
  {
    fieldE01CHMBRN.setString(newvalue);
  }

  /**
  * Get value of field E01CHMBRN as a String.
  */
  public String getE01CHMBRN()
  {
    return fieldE01CHMBRN.getString();
  }

  /**
  * Set numeric field E01CHMBRN using a BigDecimal value.
  */
  public void setE01CHMBRN(BigDecimal newvalue)
  {
    fieldE01CHMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMBRN()
  {
    return fieldE01CHMBRN.getBigDecimal();
  }

  /**
  * Set field E01ESTADO using a String value.
  */
  public void setE01ESTADO(String newvalue)
  {
    fieldE01ESTADO.setString(newvalue);
  }

  /**
  * Get value of field E01ESTADO as a String.
  */
  public String getE01ESTADO()
  {
    return fieldE01ESTADO.getString();
  }

  /**
  * Set field E01CHMFEY using a String value.
  */
  public void setE01CHMFEY(String newvalue)
  {
    fieldE01CHMFEY.setString(newvalue);
  }

  /**
  * Get value of field E01CHMFEY as a String.
  */
  public String getE01CHMFEY()
  {
    return fieldE01CHMFEY.getString();
  }

  /**
  * Set numeric field E01CHMFEY using a BigDecimal value.
  */
  public void setE01CHMFEY(BigDecimal newvalue)
  {
    fieldE01CHMFEY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMFEY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMFEY()
  {
    return fieldE01CHMFEY.getBigDecimal();
  }

  /**
  * Set field E01CHMFEM using a String value.
  */
  public void setE01CHMFEM(String newvalue)
  {
    fieldE01CHMFEM.setString(newvalue);
  }

  /**
  * Get value of field E01CHMFEM as a String.
  */
  public String getE01CHMFEM()
  {
    return fieldE01CHMFEM.getString();
  }

  /**
  * Set numeric field E01CHMFEM using a BigDecimal value.
  */
  public void setE01CHMFEM(BigDecimal newvalue)
  {
    fieldE01CHMFEM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMFEM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMFEM()
  {
    return fieldE01CHMFEM.getBigDecimal();
  }

  /**
  * Set field E01CHMFED using a String value.
  */
  public void setE01CHMFED(String newvalue)
  {
    fieldE01CHMFED.setString(newvalue);
  }

  /**
  * Get value of field E01CHMFED as a String.
  */
  public String getE01CHMFED()
  {
    return fieldE01CHMFED.getString();
  }

  /**
  * Set numeric field E01CHMFED using a BigDecimal value.
  */
  public void setE01CHMFED(BigDecimal newvalue)
  {
    fieldE01CHMFED.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMFED as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMFED()
  {
    return fieldE01CHMFED.getBigDecimal();
  }

  /**
  * Set field E01CHMACC using a String value.
  */
  public void setE01CHMACC(String newvalue)
  {
    fieldE01CHMACC.setString(newvalue);
  }

  /**
  * Get value of field E01CHMACC as a String.
  */
  public String getE01CHMACC()
  {
    return fieldE01CHMACC.getString();
  }

  /**
  * Set numeric field E01CHMACC using a BigDecimal value.
  */
  public void setE01CHMACC(BigDecimal newvalue)
  {
    fieldE01CHMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMACC()
  {
    return fieldE01CHMACC.getBigDecimal();
  }

  /**
  * Set field E01CHMTCB using a String value.
  */
  public void setE01CHMTCB(String newvalue)
  {
    fieldE01CHMTCB.setString(newvalue);
  }

  /**
  * Get value of field E01CHMTCB as a String.
  */
  public String getE01CHMTCB()
  {
    return fieldE01CHMTCB.getString();
  }

  /**
  * Set numeric field E01CHMTCB using a BigDecimal value.
  */
  public void setE01CHMTCB(BigDecimal newvalue)
  {
    fieldE01CHMTCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMTCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMTCB()
  {
    return fieldE01CHMTCB.getBigDecimal();
  }

  /**
  * Set field E01BRNNME using a String value.
  */
  public void setE01BRNNME(String newvalue)
  {
    fieldE01BRNNME.setString(newvalue);
  }

  /**
  * Get value of field E01BRNNME as a String.
  */
  public String getE01BRNNME()
  {
    return fieldE01BRNNME.getString();
  }

  /**
  * Set field E01TCBNOM using a String value.
  */
  public void setE01TCBNOM(String newvalue)
  {
    fieldE01TCBNOM.setString(newvalue);
  }

  /**
  * Get value of field E01TCBNOM as a String.
  */
  public String getE01TCBNOM()
  {
    return fieldE01TCBNOM.getString();
  }

  /**
  * Set field E01CHMRQY using a String value.
  */
  public void setE01CHMRQY(String newvalue)
  {
    fieldE01CHMRQY.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRQY as a String.
  */
  public String getE01CHMRQY()
  {
    return fieldE01CHMRQY.getString();
  }

  /**
  * Set numeric field E01CHMRQY using a BigDecimal value.
  */
  public void setE01CHMRQY(BigDecimal newvalue)
  {
    fieldE01CHMRQY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRQY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRQY()
  {
    return fieldE01CHMRQY.getBigDecimal();
  }

  /**
  * Set field E01CHMRQM using a String value.
  */
  public void setE01CHMRQM(String newvalue)
  {
    fieldE01CHMRQM.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRQM as a String.
  */
  public String getE01CHMRQM()
  {
    return fieldE01CHMRQM.getString();
  }

  /**
  * Set numeric field E01CHMRQM using a BigDecimal value.
  */
  public void setE01CHMRQM(BigDecimal newvalue)
  {
    fieldE01CHMRQM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRQM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRQM()
  {
    return fieldE01CHMRQM.getBigDecimal();
  }

  /**
  * Set field E01CHMRQD using a String value.
  */
  public void setE01CHMRQD(String newvalue)
  {
    fieldE01CHMRQD.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRQD as a String.
  */
  public String getE01CHMRQD()
  {
    return fieldE01CHMRQD.getString();
  }

  /**
  * Set numeric field E01CHMRQD using a BigDecimal value.
  */
  public void setE01CHMRQD(BigDecimal newvalue)
  {
    fieldE01CHMRQD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRQD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRQD()
  {
    return fieldE01CHMRQD.getBigDecimal();
  }

  /**
  * Set field E01CHMRCY using a String value.
  */
  public void setE01CHMRCY(String newvalue)
  {
    fieldE01CHMRCY.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRCY as a String.
  */
  public String getE01CHMRCY()
  {
    return fieldE01CHMRCY.getString();
  }

  /**
  * Set numeric field E01CHMRCY using a BigDecimal value.
  */
  public void setE01CHMRCY(BigDecimal newvalue)
  {
    fieldE01CHMRCY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRCY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRCY()
  {
    return fieldE01CHMRCY.getBigDecimal();
  }

  /**
  * Set field E01CHMRCM using a String value.
  */
  public void setE01CHMRCM(String newvalue)
  {
    fieldE01CHMRCM.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRCM as a String.
  */
  public String getE01CHMRCM()
  {
    return fieldE01CHMRCM.getString();
  }

  /**
  * Set numeric field E01CHMRCM using a BigDecimal value.
  */
  public void setE01CHMRCM(BigDecimal newvalue)
  {
    fieldE01CHMRCM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRCM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRCM()
  {
    return fieldE01CHMRCM.getBigDecimal();
  }

  /**
  * Set field E01CHMRCD using a String value.
  */
  public void setE01CHMRCD(String newvalue)
  {
    fieldE01CHMRCD.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRCD as a String.
  */
  public String getE01CHMRCD()
  {
    return fieldE01CHMRCD.getString();
  }

  /**
  * Set numeric field E01CHMRCD using a BigDecimal value.
  */
  public void setE01CHMRCD(BigDecimal newvalue)
  {
    fieldE01CHMRCD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRCD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRCD()
  {
    return fieldE01CHMRCD.getBigDecimal();
  }

  /**
  * Set field E01CHMACY using a String value.
  */
  public void setE01CHMACY(String newvalue)
  {
    fieldE01CHMACY.setString(newvalue);
  }

  /**
  * Get value of field E01CHMACY as a String.
  */
  public String getE01CHMACY()
  {
    return fieldE01CHMACY.getString();
  }

  /**
  * Set numeric field E01CHMACY using a BigDecimal value.
  */
  public void setE01CHMACY(BigDecimal newvalue)
  {
    fieldE01CHMACY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMACY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMACY()
  {
    return fieldE01CHMACY.getBigDecimal();
  }

  /**
  * Set field E01CHMACM using a String value.
  */
  public void setE01CHMACM(String newvalue)
  {
    fieldE01CHMACM.setString(newvalue);
  }

  /**
  * Get value of field E01CHMACM as a String.
  */
  public String getE01CHMACM()
  {
    return fieldE01CHMACM.getString();
  }

  /**
  * Set numeric field E01CHMACM using a BigDecimal value.
  */
  public void setE01CHMACM(BigDecimal newvalue)
  {
    fieldE01CHMACM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMACM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMACM()
  {
    return fieldE01CHMACM.getBigDecimal();
  }

  /**
  * Set field E01CHMACD using a String value.
  */
  public void setE01CHMACD(String newvalue)
  {
    fieldE01CHMACD.setString(newvalue);
  }

  /**
  * Get value of field E01CHMACD as a String.
  */
  public String getE01CHMACD()
  {
    return fieldE01CHMACD.getString();
  }

  /**
  * Set numeric field E01CHMACD using a BigDecimal value.
  */
  public void setE01CHMACD(BigDecimal newvalue)
  {
    fieldE01CHMACD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMACD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMACD()
  {
    return fieldE01CHMACD.getBigDecimal();
  }

  /**
  * Set field E01CHMICK using a String value.
  */
  public void setE01CHMICK(String newvalue)
  {
    fieldE01CHMICK.setString(newvalue);
  }

  /**
  * Get value of field E01CHMICK as a String.
  */
  public String getE01CHMICK()
  {
    return fieldE01CHMICK.getString();
  }

  /**
  * Set numeric field E01CHMICK using a BigDecimal value.
  */
  public void setE01CHMICK(BigDecimal newvalue)
  {
    fieldE01CHMICK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMICK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMICK()
  {
    return fieldE01CHMICK.getBigDecimal();
  }

  /**
  * Set field E01CHMFCK using a String value.
  */
  public void setE01CHMFCK(String newvalue)
  {
    fieldE01CHMFCK.setString(newvalue);
  }

  /**
  * Get value of field E01CHMFCK as a String.
  */
  public String getE01CHMFCK()
  {
    return fieldE01CHMFCK.getString();
  }

  /**
  * Set numeric field E01CHMFCK using a BigDecimal value.
  */
  public void setE01CHMFCK(BigDecimal newvalue)
  {
    fieldE01CHMFCK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMFCK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMFCK()
  {
    return fieldE01CHMFCK.getBigDecimal();
  }

  /**
  * Set field E01CHMNCB using a String value.
  */
  public void setE01CHMNCB(String newvalue)
  {
    fieldE01CHMNCB.setString(newvalue);
  }

  /**
  * Get value of field E01CHMNCB as a String.
  */
  public String getE01CHMNCB()
  {
    return fieldE01CHMNCB.getString();
  }

  /**
  * Set numeric field E01CHMNCB using a BigDecimal value.
  */
  public void setE01CHMNCB(BigDecimal newvalue)
  {
    fieldE01CHMNCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMNCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMNCB()
  {
    return fieldE01CHMNCB.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CUSIDN using a String value.
  */
  public void setE01CUSIDN(String newvalue)
  {
    fieldE01CUSIDN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSIDN as a String.
  */
  public String getE01CUSIDN()
  {
    return fieldE01CUSIDN.getString();
  }

  /**
  * Set field E01CHENA1 using a String value.
  */
  public void setE01CHENA1(String newvalue)
  {
    fieldE01CHENA1.setString(newvalue);
  }

  /**
  * Get value of field E01CHENA1 as a String.
  */
  public String getE01CHENA1()
  {
    return fieldE01CHENA1.getString();
  }

  /**
  * Set field E01CHEIDN using a String value.
  */
  public void setE01CHEIDN(String newvalue)
  {
    fieldE01CHEIDN.setString(newvalue);
  }

  /**
  * Get value of field E01CHEIDN as a String.
  */
  public String getE01CHEIDN()
  {
    return fieldE01CHEIDN.getString();
  }

}
