package datapro.eibs.beans;


import java.io.*;
import java.math.*;

import datapro.eibs.sockets.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD000008 physical file definition.
* 
* File level identifier is 1000607112711.
* Record format level identifier is 507647517BCE5.
*/

public class EDD000008Message extends MessageRecord
{
  final int FIELDCOUNT = 18;
  private CharacterField fieldH08USERID = null;
  private CharacterField fieldH08PROGRM = null;
  private CharacterField fieldH08TIMSYS = null;
  private CharacterField fieldH08SCRCOD = null;
  private CharacterField fieldH08OPECOD = null;
  private CharacterField fieldH08FLGMAS = null;
  private CharacterField fieldH08FLGWK1 = null;
  private CharacterField fieldH08FLGWK2 = null;
  private CharacterField fieldH08FLGWK3 = null;
  private DecimalField fieldE08ACMACC = null;
  private CharacterField fieldE08ACMPRO = null;
  private DecimalField fieldE08ACMCUN = null;
  private CharacterField fieldE08CUSNA1 = null;
  private CharacterField fieldE08INVRBK = null;
  private DecimalField fieldE08INVRBR = null;
  private CharacterField fieldE08INVRCY = null;
  private DecimalField fieldE08INVRGL = null;
  private DecimalField fieldE08INVRAC = null;

  /**
  * Constructor for EDD000008Message.
  */
  public EDD000008Message()
  {
	createFields();
	initialize();
  }    
  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
	recordsize = 153;
	fileid = "1000607112711";
	recordid = "507647517BCE5";
	message = new byte[getByteLength()];
	formatname = "EDD000008";
	fieldnames = new String[FIELDCOUNT];
	tagnames = new String[FIELDCOUNT];
	fields = new MessageField[FIELDCOUNT];

	fieldnames[0] = "H08USERID";
	tagnames[0] = "H08USERID";
	fields[0] = fieldH08USERID =
	new CharacterField(message, HEADERSIZE + 0, 10, "H08USERID");
	fieldnames[1] = "H08PROGRM";
	tagnames[1] = "H08PROGRM";
	fields[1] = fieldH08PROGRM =
	new CharacterField(message, HEADERSIZE + 10, 10, "H08PROGRM");
	fieldnames[2] = "H08TIMSYS";
	tagnames[2] = "H08TIMSYS";
	fields[2] = fieldH08TIMSYS =
	new CharacterField(message, HEADERSIZE + 20, 12, "H08TIMSYS");
	fieldnames[3] = "H08SCRCOD";
	tagnames[3] = "H08SCRCOD";
	fields[3] = fieldH08SCRCOD =
	new CharacterField(message, HEADERSIZE + 32, 2, "H08SCRCOD");
	fieldnames[4] = "H08OPECOD";
	tagnames[4] = "H08OPECOD";
	fields[4] = fieldH08OPECOD =
	new CharacterField(message, HEADERSIZE + 34, 4, "H08OPECOD");
	fieldnames[5] = "H08FLGMAS";
	tagnames[5] = "H08FLGMAS";
	fields[5] = fieldH08FLGMAS =
	new CharacterField(message, HEADERSIZE + 38, 1, "H08FLGMAS");
	fieldnames[6] = "H08FLGWK1";
	tagnames[6] = "H08FLGWK1";
	fields[6] = fieldH08FLGWK1 =
	new CharacterField(message, HEADERSIZE + 39, 1, "H08FLGWK1");
	fieldnames[7] = "H08FLGWK2";
	tagnames[7] = "H08FLGWK2";
	fields[7] = fieldH08FLGWK2 =
	new CharacterField(message, HEADERSIZE + 40, 1, "H08FLGWK2");
	fieldnames[8] = "H08FLGWK3";
	tagnames[8] = "H08FLGWK3";
	fields[8] = fieldH08FLGWK3 =
	new CharacterField(message, HEADERSIZE + 41, 1, "H08FLGWK3");
	fieldnames[9] = "E08ACMACC";
	tagnames[9] = "E08ACMACC";
	fields[9] = fieldE08ACMACC =
	new DecimalField(message, HEADERSIZE + 42, 13, 0, "E08ACMACC");
	fieldnames[10] = "E08ACMPRO";
	tagnames[10] = "E08ACMPRO";
	fields[10] = fieldE08ACMPRO =
	new CharacterField(message, HEADERSIZE + 55, 4, "E08ACMPRO");
	fieldnames[11] = "E08ACMCUN";
	tagnames[11] = "E08ACMCUN";
	fields[11] = fieldE08ACMCUN =
	new DecimalField(message, HEADERSIZE + 59, 10, 0, "E08ACMCUN");
	fieldnames[12] = "E08CUSNA1";
	tagnames[12] = "E08CUSNA1";
	fields[12] = fieldE08CUSNA1 =
	new CharacterField(message, HEADERSIZE + 69, 45, "E08CUSNA1");
	fieldnames[13] = "E08INVRBK";
	tagnames[13] = "E08INVRBK";
	fields[13] = fieldE08INVRBK =
	new CharacterField(message, HEADERSIZE + 114, 2, "E08INVRBK");
	fieldnames[14] = "E08INVRBR";
	tagnames[14] = "E08INVRBR";
	fields[14] = fieldE08INVRBR =
	new DecimalField(message, HEADERSIZE + 116, 4, 0, "E08INVRBR");
	fieldnames[15] = "E08INVRCY";
	tagnames[15] = "E08INVRCY";
	fields[15] = fieldE08INVRCY =
	new CharacterField(message, HEADERSIZE + 120, 3, "E08INVRCY");
	fieldnames[16] = "E08INVRGL";
	tagnames[16] = "E08INVRGL";
	fields[16] = fieldE08INVRGL =
	new DecimalField(message, HEADERSIZE + 123, 17, 0, "E08INVRGL");
	fieldnames[17] = "E08INVRAC";
	tagnames[17] = "E08INVRAC";
	fields[17] = fieldE08INVRAC =
	new DecimalField(message, HEADERSIZE + 140, 13, 0, "E08INVRAC");
  }    
  /**
  * Return value of numeric field E08ACMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08ACMACC()
  {
	return fieldE08ACMACC.getBigDecimal();
  }    
  /**
  * Return value of numeric field E08ACMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08ACMCUN()
  {
	return fieldE08ACMCUN.getBigDecimal();
  }    
  /**
  * Return value of numeric field E08INVRAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08INVRAC()
  {
	return fieldE08INVRAC.getBigDecimal();
  }    
  /**
  * Return value of numeric field E08INVRBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08INVRBR()
  {
	return fieldE08INVRBR.getBigDecimal();
  }    
  /**
  * Return value of numeric field E08INVRGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08INVRGL()
  {
	return fieldE08INVRGL.getBigDecimal();
  }    
  /**
  * Get value of field E08ACMACC as a String.
  */
  public String getE08ACMACC()
  {
	return fieldE08ACMACC.getString();
  }    
  /**
  * Get value of field E08ACMCUN as a String.
  */
  public String getE08ACMCUN()
  {
	return fieldE08ACMCUN.getString();
  }    
  /**
  * Get value of field E08ACMPRO as a String.
  */
  public String getE08ACMPRO()
  {
	return fieldE08ACMPRO.getString();
  }    
  /**
  * Get value of field E08CUSNA1 as a String.
  */
  public String getE08CUSNA1()
  {
	return fieldE08CUSNA1.getString();
  }    
  /**
  * Get value of field E08INVRAC as a String.
  */
  public String getE08INVRAC()
  {
	return fieldE08INVRAC.getString();
  }    
  /**
  * Get value of field E08INVRBK as a String.
  */
  public String getE08INVRBK()
  {
	return fieldE08INVRBK.getString();
  }    
  /**
  * Get value of field E08INVRBR as a String.
  */
  public String getE08INVRBR()
  {
	return fieldE08INVRBR.getString();
  }    
  /**
  * Get value of field E08INVRCY as a String.
  */
  public String getE08INVRCY()
  {
	return fieldE08INVRCY.getString();
  }    
  /**
  * Get value of field E08INVRGL as a String.
  */
  public String getE08INVRGL()
  {
	return fieldE08INVRGL.getString();
  }    
  /**
  * Get value of field H08FLGMAS as a String.
  */
  public String getH08FLGMAS()
  {
	return fieldH08FLGMAS.getString();
  }    
  /**
  * Get value of field H08FLGWK1 as a String.
  */
  public String getH08FLGWK1()
  {
	return fieldH08FLGWK1.getString();
  }    
  /**
  * Get value of field H08FLGWK2 as a String.
  */
  public String getH08FLGWK2()
  {
	return fieldH08FLGWK2.getString();
  }    
  /**
  * Get value of field H08FLGWK3 as a String.
  */
  public String getH08FLGWK3()
  {
	return fieldH08FLGWK3.getString();
  }    
  /**
  * Get value of field H08OPECOD as a String.
  */
  public String getH08OPECOD()
  {
	return fieldH08OPECOD.getString();
  }    
  /**
  * Get value of field H08PROGRM as a String.
  */
  public String getH08PROGRM()
  {
	return fieldH08PROGRM.getString();
  }    
  /**
  * Get value of field H08SCRCOD as a String.
  */
  public String getH08SCRCOD()
  {
	return fieldH08SCRCOD.getString();
  }    
  /**
  * Get value of field H08TIMSYS as a String.
  */
  public String getH08TIMSYS()
  {
	return fieldH08TIMSYS.getString();
  }    
  /**
  * Get value of field H08USERID as a String.
  */
  public String getH08USERID()
  {
	return fieldH08USERID.getString();
  }    
  /**
  * Set field E08ACMACC using a String value.
  */
  public void setE08ACMACC(String newvalue)
  {
	fieldE08ACMACC.setString(newvalue);
  }    
  /**
  * Set numeric field E08ACMACC using a BigDecimal value.
  */
  public void setE08ACMACC(BigDecimal newvalue)
  {
	fieldE08ACMACC.setBigDecimal(newvalue);
  }    
  /**
  * Set field E08ACMCUN using a String value.
  */
  public void setE08ACMCUN(String newvalue)
  {
	fieldE08ACMCUN.setString(newvalue);
  }    
  /**
  * Set numeric field E08ACMCUN using a BigDecimal value.
  */
  public void setE08ACMCUN(BigDecimal newvalue)
  {
	fieldE08ACMCUN.setBigDecimal(newvalue);
  }    
  /**
  * Set field E08ACMPRO using a String value.
  */
  public void setE08ACMPRO(String newvalue)
  {
	fieldE08ACMPRO.setString(newvalue);
  }    
  /**
  * Set field E08CUSNA1 using a String value.
  */
  public void setE08CUSNA1(String newvalue)
  {
	fieldE08CUSNA1.setString(newvalue);
  }    
  /**
  * Set field E08INVRAC using a String value.
  */
  public void setE08INVRAC(String newvalue)
  {
	fieldE08INVRAC.setString(newvalue);
  }    
  /**
  * Set numeric field E08INVRAC using a BigDecimal value.
  */
  public void setE08INVRAC(BigDecimal newvalue)
  {
	fieldE08INVRAC.setBigDecimal(newvalue);
  }    
  /**
  * Set field E08INVRBK using a String value.
  */
  public void setE08INVRBK(String newvalue)
  {
	fieldE08INVRBK.setString(newvalue);
  }    
  /**
  * Set field E08INVRBR using a String value.
  */
  public void setE08INVRBR(String newvalue)
  {
	fieldE08INVRBR.setString(newvalue);
  }    
  /**
  * Set numeric field E08INVRBR using a BigDecimal value.
  */
  public void setE08INVRBR(BigDecimal newvalue)
  {
	fieldE08INVRBR.setBigDecimal(newvalue);
  }    
  /**
  * Set field E08INVRCY using a String value.
  */
  public void setE08INVRCY(String newvalue)
  {
	fieldE08INVRCY.setString(newvalue);
  }    
  /**
  * Set field E08INVRGL using a String value.
  */
  public void setE08INVRGL(String newvalue)
  {
	fieldE08INVRGL.setString(newvalue);
  }    
  /**
  * Set numeric field E08INVRGL using a BigDecimal value.
  */
  public void setE08INVRGL(BigDecimal newvalue)
  {
	fieldE08INVRGL.setBigDecimal(newvalue);
  }    
  /**
  * Set field H08FLGMAS using a String value.
  */
  public void setH08FLGMAS(String newvalue)
  {
	fieldH08FLGMAS.setString(newvalue);
  }    
  /**
  * Set field H08FLGWK1 using a String value.
  */
  public void setH08FLGWK1(String newvalue)
  {
	fieldH08FLGWK1.setString(newvalue);
  }    
  /**
  * Set field H08FLGWK2 using a String value.
  */
  public void setH08FLGWK2(String newvalue)
  {
	fieldH08FLGWK2.setString(newvalue);
  }    
  /**
  * Set field H08FLGWK3 using a String value.
  */
  public void setH08FLGWK3(String newvalue)
  {
	fieldH08FLGWK3.setString(newvalue);
  }    
  /**
  * Set field H08OPECOD using a String value.
  */
  public void setH08OPECOD(String newvalue)
  {
	fieldH08OPECOD.setString(newvalue);
  }    
  /**
  * Set field H08PROGRM using a String value.
  */
  public void setH08PROGRM(String newvalue)
  {
	fieldH08PROGRM.setString(newvalue);
  }    
  /**
  * Set field H08SCRCOD using a String value.
  */
  public void setH08SCRCOD(String newvalue)
  {
	fieldH08SCRCOD.setString(newvalue);
  }    
  /**
  * Set field H08TIMSYS using a String value.
  */
  public void setH08TIMSYS(String newvalue)
  {
	fieldH08TIMSYS.setString(newvalue);
  }    
  /**
  * Set field H08USERID using a String value.
  */
  public void setH08USERID(String newvalue)
  {
	fieldH08USERID.setString(newvalue);
  }    
}