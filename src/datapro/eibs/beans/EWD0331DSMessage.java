package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0331DS physical file definition.
* 
* File level identifier is 1060822183953.
* Record format level identifier is 4CDB37FF278AB.
*/

public class EWD0331DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDTYP",
                                     "RWDFRC",
                                     "SWDBNK",
                                     "SWDBRN",
                                     "SWDCCY",
                                     "SWDACC",
                                     "SWDTYP",
                                     "SWDITP",
                                     "SWDTRA",
                                     "SWDVAL",
                                     "SWDMAT",
                                     "SWDCUN",
                                     "SWDOAM",
                                     "SWDRTE",
                                     "SWDDSC",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDTYP",
                                   "RWDFRC",
                                   "SWDBNK",
                                   "SWDBRN",
                                   "SWDCCY",
                                   "SWDACC",
                                   "SWDTYP",
                                   "SWDITP",
                                   "SWDTRA",
                                   "SWDVAL",
                                   "SWDMAT",
                                   "SWDCUN",
                                   "SWDOAM",
                                   "SWDRTE",
                                   "SWDDSC",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1060822183953";
  final static String rid = "4CDB37FF278AB";
  final static String fmtname = "EWD0331DS";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDBNK = null;
  private DecimalField fieldSWDBRN = null;
  private CharacterField fieldSWDCCY = null;
  private DecimalField fieldSWDACC = null;
  private CharacterField fieldSWDTYP = null;
  private CharacterField fieldSWDITP = null;
  private DecimalField fieldSWDTRA = null;
  private DecimalField fieldSWDVAL = null;
  private DecimalField fieldSWDMAT = null;
  private DecimalField fieldSWDCUN = null;
  private DecimalField fieldSWDOAM = null;
  private DecimalField fieldSWDRTE = null;
  private CharacterField fieldSWDDSC = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0331DSMessage.
  */
  public EWD0331DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 150;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
    fields[3] = fieldSWDBNK =
    new CharacterField(message, HEADERSIZE + 19, 2, "SWDBNK");
    fields[4] = fieldSWDBRN =
    new DecimalField(message, HEADERSIZE + 21, 4, 0, "SWDBRN");
    fields[5] = fieldSWDCCY =
    new CharacterField(message, HEADERSIZE + 25, 3, "SWDCCY");
    fields[6] = fieldSWDACC =
    new DecimalField(message, HEADERSIZE + 28, 13, 0, "SWDACC");
    fields[7] = fieldSWDTYP =
    new CharacterField(message, HEADERSIZE + 41, 4, "SWDTYP");
    fields[8] = fieldSWDITP =
    new CharacterField(message, HEADERSIZE + 45, 5, "SWDITP");
    fields[9] = fieldSWDTRA =
    new DecimalField(message, HEADERSIZE + 50, 7, 0, "SWDTRA");
    fields[10] = fieldSWDVAL =
    new DecimalField(message, HEADERSIZE + 57, 7, 0, "SWDVAL");
    fields[11] = fieldSWDMAT =
    new DecimalField(message, HEADERSIZE + 64, 7, 0, "SWDMAT");
    fields[12] = fieldSWDCUN =
    new DecimalField(message, HEADERSIZE + 71, 10, 0, "SWDCUN");
    fields[13] = fieldSWDOAM =
    new DecimalField(message, HEADERSIZE + 81, 17, 2, "SWDOAM");
    fields[14] = fieldSWDRTE =
    new DecimalField(message, HEADERSIZE + 98, 13, 6, "SWDRTE");
    fields[15] = fieldSWDDSC =
    new CharacterField(message, HEADERSIZE + 111, 30, "SWDDSC");
    fields[16] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 141, 8, 0, "SWDREC");
    fields[17] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 149, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
    fieldRWDTYP.setString(newvalue);
  }

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
    return fieldRWDTYP.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDBNK using a String value.
  */
  public void setSWDBNK(String newvalue)
  {
    fieldSWDBNK.setString(newvalue);
  }

  /**
  * Get value of field SWDBNK as a String.
  */
  public String getSWDBNK()
  {
    return fieldSWDBNK.getString();
  }

  /**
  * Set field SWDBRN using a String value.
  */
  public void setSWDBRN(String newvalue)
  {
    fieldSWDBRN.setString(newvalue);
  }

  /**
  * Get value of field SWDBRN as a String.
  */
  public String getSWDBRN()
  {
    return fieldSWDBRN.getString();
  }

  /**
  * Set numeric field SWDBRN using a BigDecimal value.
  */
  public void setSWDBRN(BigDecimal newvalue)
  {
    fieldSWDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDBRN()
  {
    return fieldSWDBRN.getBigDecimal();
  }

  /**
  * Set field SWDCCY using a String value.
  */
  public void setSWDCCY(String newvalue)
  {
    fieldSWDCCY.setString(newvalue);
  }

  /**
  * Get value of field SWDCCY as a String.
  */
  public String getSWDCCY()
  {
    return fieldSWDCCY.getString();
  }

  /**
  * Set field SWDACC using a String value.
  */
  public void setSWDACC(String newvalue)
  {
    fieldSWDACC.setString(newvalue);
  }

  /**
  * Get value of field SWDACC as a String.
  */
  public String getSWDACC()
  {
    return fieldSWDACC.getString();
  }

  /**
  * Set numeric field SWDACC using a BigDecimal value.
  */
  public void setSWDACC(BigDecimal newvalue)
  {
    fieldSWDACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDACC()
  {
    return fieldSWDACC.getBigDecimal();
  }

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
    fieldSWDTYP.setString(newvalue);
  }

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
    return fieldSWDTYP.getString();
  }

  /**
  * Set field SWDITP using a String value.
  */
  public void setSWDITP(String newvalue)
  {
    fieldSWDITP.setString(newvalue);
  }

  /**
  * Get value of field SWDITP as a String.
  */
  public String getSWDITP()
  {
    return fieldSWDITP.getString();
  }

  /**
  * Set field SWDTRA using a String value.
  */
  public void setSWDTRA(String newvalue)
  {
    fieldSWDTRA.setString(newvalue);
  }

  /**
  * Get value of field SWDTRA as a String.
  */
  public String getSWDTRA()
  {
    return fieldSWDTRA.getString();
  }

  /**
  * Set numeric field SWDTRA using a BigDecimal value.
  */
  public void setSWDTRA(BigDecimal newvalue)
  {
    fieldSWDTRA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDTRA as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDTRA()
  {
    return fieldSWDTRA.getBigDecimal();
  }

  /**
  * Set field SWDVAL using a String value.
  */
  public void setSWDVAL(String newvalue)
  {
    fieldSWDVAL.setString(newvalue);
  }

  /**
  * Get value of field SWDVAL as a String.
  */
  public String getSWDVAL()
  {
    return fieldSWDVAL.getString();
  }

  /**
  * Set numeric field SWDVAL using a BigDecimal value.
  */
  public void setSWDVAL(BigDecimal newvalue)
  {
    fieldSWDVAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDVAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDVAL()
  {
    return fieldSWDVAL.getBigDecimal();
  }

  /**
  * Set field SWDMAT using a String value.
  */
  public void setSWDMAT(String newvalue)
  {
    fieldSWDMAT.setString(newvalue);
  }

  /**
  * Get value of field SWDMAT as a String.
  */
  public String getSWDMAT()
  {
    return fieldSWDMAT.getString();
  }

  /**
  * Set numeric field SWDMAT using a BigDecimal value.
  */
  public void setSWDMAT(BigDecimal newvalue)
  {
    fieldSWDMAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDMAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDMAT()
  {
    return fieldSWDMAT.getBigDecimal();
  }

  /**
  * Set field SWDCUN using a String value.
  */
  public void setSWDCUN(String newvalue)
  {
    fieldSWDCUN.setString(newvalue);
  }

  /**
  * Get value of field SWDCUN as a String.
  */
  public String getSWDCUN()
  {
    return fieldSWDCUN.getString();
  }

  /**
  * Set numeric field SWDCUN using a BigDecimal value.
  */
  public void setSWDCUN(BigDecimal newvalue)
  {
    fieldSWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCUN()
  {
    return fieldSWDCUN.getBigDecimal();
  }

  /**
  * Set field SWDOAM using a String value.
  */
  public void setSWDOAM(String newvalue)
  {
    fieldSWDOAM.setString(newvalue);
  }

  /**
  * Get value of field SWDOAM as a String.
  */
  public String getSWDOAM()
  {
    return fieldSWDOAM.getString();
  }

  /**
  * Set numeric field SWDOAM using a BigDecimal value.
  */
  public void setSWDOAM(BigDecimal newvalue)
  {
    fieldSWDOAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDOAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDOAM()
  {
    return fieldSWDOAM.getBigDecimal();
  }

  /**
  * Set field SWDRTE using a String value.
  */
  public void setSWDRTE(String newvalue)
  {
    fieldSWDRTE.setString(newvalue);
  }

  /**
  * Get value of field SWDRTE as a String.
  */
  public String getSWDRTE()
  {
    return fieldSWDRTE.getString();
  }

  /**
  * Set numeric field SWDRTE using a BigDecimal value.
  */
  public void setSWDRTE(BigDecimal newvalue)
  {
    fieldSWDRTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDRTE()
  {
    return fieldSWDRTE.getBigDecimal();
  }

  /**
  * Set field SWDDSC using a String value.
  */
  public void setSWDDSC(String newvalue)
  {
    fieldSWDDSC.setString(newvalue);
  }

  /**
  * Get value of field SWDDSC as a String.
  */
  public String getSWDDSC()
  {
    return fieldSWDDSC.getString();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
