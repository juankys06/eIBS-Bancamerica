package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERROR physical file definition.
* 
* File level identifier is 1030121191955.
* Record format level identifier is 481A04861C61D.
*/

public class ERRORMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "ERR001",
                                     "ERR002",
                                     "ERR003",
                                     "ERR004",
                                     "ERR005",
                                     "ERR006",
                                     "ERR007",
                                     "ERR008",
                                     "ERR009",
                                     "ERR010"
                                   };
  final static String tnames[] = {
                                   "ERR001",
                                   "ERR002",
                                   "ERR003",
                                   "ERR004",
                                   "ERR005",
                                   "ERR006",
                                   "ERR007",
                                   "ERR008",
                                   "ERR009",
                                   "ERR010"
                                 };
  final static String fid = "1030121191955";
  final static String rid = "481A04861C61D";
  final static String fmtname = "ERROR";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldERR001 = null;
  private CharacterField fieldERR002 = null;
  private CharacterField fieldERR003 = null;
  private CharacterField fieldERR004 = null;
  private CharacterField fieldERR005 = null;
  private CharacterField fieldERR006 = null;
  private CharacterField fieldERR007 = null;
  private CharacterField fieldERR008 = null;
  private CharacterField fieldERR009 = null;
  private CharacterField fieldERR010 = null;

  /**
  * Constructor for ERRORMessage.
  */
  public ERRORMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 40;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldERR001 =
    new CharacterField(message, HEADERSIZE + 0, 4, "ERR001");
    fields[1] = fieldERR002 =
    new CharacterField(message, HEADERSIZE + 4, 4, "ERR002");
    fields[2] = fieldERR003 =
    new CharacterField(message, HEADERSIZE + 8, 4, "ERR003");
    fields[3] = fieldERR004 =
    new CharacterField(message, HEADERSIZE + 12, 4, "ERR004");
    fields[4] = fieldERR005 =
    new CharacterField(message, HEADERSIZE + 16, 4, "ERR005");
    fields[5] = fieldERR006 =
    new CharacterField(message, HEADERSIZE + 20, 4, "ERR006");
    fields[6] = fieldERR007 =
    new CharacterField(message, HEADERSIZE + 24, 4, "ERR007");
    fields[7] = fieldERR008 =
    new CharacterField(message, HEADERSIZE + 28, 4, "ERR008");
    fields[8] = fieldERR009 =
    new CharacterField(message, HEADERSIZE + 32, 4, "ERR009");
    fields[9] = fieldERR010 =
    new CharacterField(message, HEADERSIZE + 36, 4, "ERR010");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field ERR001 using a String value.
  */
  public void setERR001(String newvalue)
  {
    fieldERR001.setString(newvalue);
  }

  /**
  * Get value of field ERR001 as a String.
  */
  public String getERR001()
  {
    return fieldERR001.getString();
  }

  /**
  * Set field ERR002 using a String value.
  */
  public void setERR002(String newvalue)
  {
    fieldERR002.setString(newvalue);
  }

  /**
  * Get value of field ERR002 as a String.
  */
  public String getERR002()
  {
    return fieldERR002.getString();
  }

  /**
  * Set field ERR003 using a String value.
  */
  public void setERR003(String newvalue)
  {
    fieldERR003.setString(newvalue);
  }

  /**
  * Get value of field ERR003 as a String.
  */
  public String getERR003()
  {
    return fieldERR003.getString();
  }

  /**
  * Set field ERR004 using a String value.
  */
  public void setERR004(String newvalue)
  {
    fieldERR004.setString(newvalue);
  }

  /**
  * Get value of field ERR004 as a String.
  */
  public String getERR004()
  {
    return fieldERR004.getString();
  }

  /**
  * Set field ERR005 using a String value.
  */
  public void setERR005(String newvalue)
  {
    fieldERR005.setString(newvalue);
  }

  /**
  * Get value of field ERR005 as a String.
  */
  public String getERR005()
  {
    return fieldERR005.getString();
  }

  /**
  * Set field ERR006 using a String value.
  */
  public void setERR006(String newvalue)
  {
    fieldERR006.setString(newvalue);
  }

  /**
  * Get value of field ERR006 as a String.
  */
  public String getERR006()
  {
    return fieldERR006.getString();
  }

  /**
  * Set field ERR007 using a String value.
  */
  public void setERR007(String newvalue)
  {
    fieldERR007.setString(newvalue);
  }

  /**
  * Get value of field ERR007 as a String.
  */
  public String getERR007()
  {
    return fieldERR007.getString();
  }

  /**
  * Set field ERR008 using a String value.
  */
  public void setERR008(String newvalue)
  {
    fieldERR008.setString(newvalue);
  }

  /**
  * Get value of field ERR008 as a String.
  */
  public String getERR008()
  {
    return fieldERR008.getString();
  }

  /**
  * Set field ERR009 using a String value.
  */
  public void setERR009(String newvalue)
  {
    fieldERR009.setString(newvalue);
  }

  /**
  * Get value of field ERR009 as a String.
  */
  public String getERR009()
  {
    return fieldERR009.getString();
  }

  /**
  * Set field ERR010 using a String value.
  */
  public void setERR010(String newvalue)
  {
    fieldERR010.setString(newvalue);
  }

  /**
  * Get value of field ERR010 as a String.
  */
  public String getERR010()
  {
    return fieldERR010.getString();
  }

}
