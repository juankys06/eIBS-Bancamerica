package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD000503 physical file definition.
* 
* File level identifier is 1040702171943.
* Record format level identifier is 5A66CC89A2B18.
*/

public class ESD000503Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USR",
                                     "H03PGM",
                                     "H03TIM",
                                     "H03SCR",
                                     "H03OPE",
                                     "H03MAS",
                                     "H03WK1",
                                     "H03WK2",
                                     "H03WK3",
                                     "E03MSGBNK",
                                     "E03MSGEXM",
                                     "E03MSGEXD",
                                     "E03MSGEXY",
                                     "E03MSGONE",
                                     "E03MSGTWO",
                                     "E03MSGTHR",
                                     "E03MSGFOU",
                                     "E03MSGFIV",
                                     "E03MSGSIX"
                                   };
  final static String tnames[] = {
                                   "H03USR",
                                   "H03PGM",
                                   "H03TIM",
                                   "H03SCR",
                                   "H03OPE",
                                   "H03MAS",
                                   "H03WK1",
                                   "H03WK2",
                                   "H03WK3",
                                   "E03MSGBNK",
                                   "E03MSGEXM",
                                   "E03MSGEXD",
                                   "E03MSGEXY",
                                   "E03MSGONE",
                                   "E03MSGTWO",
                                   "E03MSGTHR",
                                   "E03MSGFOU",
                                   "E03MSGFIV",
                                   "E03MSGSIX"
                                 };
  final static String fid = "1040702171943";
  final static String rid = "5A66CC89A2B18";
  final static String fmtname = "ESD000503";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USR = null;
  private CharacterField fieldH03PGM = null;
  private CharacterField fieldH03TIM = null;
  private CharacterField fieldH03SCR = null;
  private CharacterField fieldH03OPE = null;
  private CharacterField fieldH03MAS = null;
  private CharacterField fieldH03WK1 = null;
  private CharacterField fieldH03WK2 = null;
  private CharacterField fieldH03WK3 = null;
  private CharacterField fieldE03MSGBNK = null;
  private DecimalField fieldE03MSGEXM = null;
  private DecimalField fieldE03MSGEXD = null;
  private DecimalField fieldE03MSGEXY = null;
  private CharacterField fieldE03MSGONE = null;
  private CharacterField fieldE03MSGTWO = null;
  private CharacterField fieldE03MSGTHR = null;
  private CharacterField fieldE03MSGFOU = null;
  private CharacterField fieldE03MSGFIV = null;
  private CharacterField fieldE03MSGSIX = null;

  /**
  * Constructor for ESD000503Message.
  */
  public ESD000503Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 353;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USR");
    fields[1] = fieldH03PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PGM");
    fields[2] = fieldH03TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIM");
    fields[3] = fieldH03SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCR");
    fields[4] = fieldH03OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPE");
    fields[5] = fieldH03MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03MAS");
    fields[6] = fieldH03WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03WK1");
    fields[7] = fieldH03WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03WK2");
    fields[8] = fieldH03WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03WK3");
    fields[9] = fieldE03MSGBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E03MSGBNK");
    fields[10] = fieldE03MSGEXM =
    new DecimalField(message, HEADERSIZE + 44, 3, 0, "E03MSGEXM");
    fields[11] = fieldE03MSGEXD =
    new DecimalField(message, HEADERSIZE + 47, 3, 0, "E03MSGEXD");
    fields[12] = fieldE03MSGEXY =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "E03MSGEXY");
    fields[13] = fieldE03MSGONE =
    new CharacterField(message, HEADERSIZE + 53, 50, "E03MSGONE");
    fields[14] = fieldE03MSGTWO =
    new CharacterField(message, HEADERSIZE + 103, 50, "E03MSGTWO");
    fields[15] = fieldE03MSGTHR =
    new CharacterField(message, HEADERSIZE + 153, 50, "E03MSGTHR");
    fields[16] = fieldE03MSGFOU =
    new CharacterField(message, HEADERSIZE + 203, 50, "E03MSGFOU");
    fields[17] = fieldE03MSGFIV =
    new CharacterField(message, HEADERSIZE + 253, 50, "E03MSGFIV");
    fields[18] = fieldE03MSGSIX =
    new CharacterField(message, HEADERSIZE + 303, 50, "E03MSGSIX");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USR using a String value.
  */
  public void setH03USR(String newvalue)
  {
    fieldH03USR.setString(newvalue);
  }

  /**
  * Get value of field H03USR as a String.
  */
  public String getH03USR()
  {
    return fieldH03USR.getString();
  }

  /**
  * Set field H03PGM using a String value.
  */
  public void setH03PGM(String newvalue)
  {
    fieldH03PGM.setString(newvalue);
  }

  /**
  * Get value of field H03PGM as a String.
  */
  public String getH03PGM()
  {
    return fieldH03PGM.getString();
  }

  /**
  * Set field H03TIM using a String value.
  */
  public void setH03TIM(String newvalue)
  {
    fieldH03TIM.setString(newvalue);
  }

  /**
  * Get value of field H03TIM as a String.
  */
  public String getH03TIM()
  {
    return fieldH03TIM.getString();
  }

  /**
  * Set field H03SCR using a String value.
  */
  public void setH03SCR(String newvalue)
  {
    fieldH03SCR.setString(newvalue);
  }

  /**
  * Get value of field H03SCR as a String.
  */
  public String getH03SCR()
  {
    return fieldH03SCR.getString();
  }

  /**
  * Set field H03OPE using a String value.
  */
  public void setH03OPE(String newvalue)
  {
    fieldH03OPE.setString(newvalue);
  }

  /**
  * Get value of field H03OPE as a String.
  */
  public String getH03OPE()
  {
    return fieldH03OPE.getString();
  }

  /**
  * Set field H03MAS using a String value.
  */
  public void setH03MAS(String newvalue)
  {
    fieldH03MAS.setString(newvalue);
  }

  /**
  * Get value of field H03MAS as a String.
  */
  public String getH03MAS()
  {
    return fieldH03MAS.getString();
  }

  /**
  * Set field H03WK1 using a String value.
  */
  public void setH03WK1(String newvalue)
  {
    fieldH03WK1.setString(newvalue);
  }

  /**
  * Get value of field H03WK1 as a String.
  */
  public String getH03WK1()
  {
    return fieldH03WK1.getString();
  }

  /**
  * Set field H03WK2 using a String value.
  */
  public void setH03WK2(String newvalue)
  {
    fieldH03WK2.setString(newvalue);
  }

  /**
  * Get value of field H03WK2 as a String.
  */
  public String getH03WK2()
  {
    return fieldH03WK2.getString();
  }

  /**
  * Set field H03WK3 using a String value.
  */
  public void setH03WK3(String newvalue)
  {
    fieldH03WK3.setString(newvalue);
  }

  /**
  * Get value of field H03WK3 as a String.
  */
  public String getH03WK3()
  {
    return fieldH03WK3.getString();
  }

  /**
  * Set field E03MSGBNK using a String value.
  */
  public void setE03MSGBNK(String newvalue)
  {
    fieldE03MSGBNK.setString(newvalue);
  }

  /**
  * Get value of field E03MSGBNK as a String.
  */
  public String getE03MSGBNK()
  {
    return fieldE03MSGBNK.getString();
  }

  /**
  * Set field E03MSGEXM using a String value.
  */
  public void setE03MSGEXM(String newvalue)
  {
    fieldE03MSGEXM.setString(newvalue);
  }

  /**
  * Get value of field E03MSGEXM as a String.
  */
  public String getE03MSGEXM()
  {
    return fieldE03MSGEXM.getString();
  }

  /**
  * Set numeric field E03MSGEXM using a BigDecimal value.
  */
  public void setE03MSGEXM(BigDecimal newvalue)
  {
    fieldE03MSGEXM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MSGEXM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MSGEXM()
  {
    return fieldE03MSGEXM.getBigDecimal();
  }

  /**
  * Set field E03MSGEXD using a String value.
  */
  public void setE03MSGEXD(String newvalue)
  {
    fieldE03MSGEXD.setString(newvalue);
  }

  /**
  * Get value of field E03MSGEXD as a String.
  */
  public String getE03MSGEXD()
  {
    return fieldE03MSGEXD.getString();
  }

  /**
  * Set numeric field E03MSGEXD using a BigDecimal value.
  */
  public void setE03MSGEXD(BigDecimal newvalue)
  {
    fieldE03MSGEXD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MSGEXD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MSGEXD()
  {
    return fieldE03MSGEXD.getBigDecimal();
  }

  /**
  * Set field E03MSGEXY using a String value.
  */
  public void setE03MSGEXY(String newvalue)
  {
    fieldE03MSGEXY.setString(newvalue);
  }

  /**
  * Get value of field E03MSGEXY as a String.
  */
  public String getE03MSGEXY()
  {
    return fieldE03MSGEXY.getString();
  }

  /**
  * Set numeric field E03MSGEXY using a BigDecimal value.
  */
  public void setE03MSGEXY(BigDecimal newvalue)
  {
    fieldE03MSGEXY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MSGEXY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MSGEXY()
  {
    return fieldE03MSGEXY.getBigDecimal();
  }

  /**
  * Set field E03MSGONE using a String value.
  */
  public void setE03MSGONE(String newvalue)
  {
    fieldE03MSGONE.setString(newvalue);
  }

  /**
  * Get value of field E03MSGONE as a String.
  */
  public String getE03MSGONE()
  {
    return fieldE03MSGONE.getString();
  }

  /**
  * Set field E03MSGTWO using a String value.
  */
  public void setE03MSGTWO(String newvalue)
  {
    fieldE03MSGTWO.setString(newvalue);
  }

  /**
  * Get value of field E03MSGTWO as a String.
  */
  public String getE03MSGTWO()
  {
    return fieldE03MSGTWO.getString();
  }

  /**
  * Set field E03MSGTHR using a String value.
  */
  public void setE03MSGTHR(String newvalue)
  {
    fieldE03MSGTHR.setString(newvalue);
  }

  /**
  * Get value of field E03MSGTHR as a String.
  */
  public String getE03MSGTHR()
  {
    return fieldE03MSGTHR.getString();
  }

  /**
  * Set field E03MSGFOU using a String value.
  */
  public void setE03MSGFOU(String newvalue)
  {
    fieldE03MSGFOU.setString(newvalue);
  }

  /**
  * Get value of field E03MSGFOU as a String.
  */
  public String getE03MSGFOU()
  {
    return fieldE03MSGFOU.getString();
  }

  /**
  * Set field E03MSGFIV using a String value.
  */
  public void setE03MSGFIV(String newvalue)
  {
    fieldE03MSGFIV.setString(newvalue);
  }

  /**
  * Get value of field E03MSGFIV as a String.
  */
  public String getE03MSGFIV()
  {
    return fieldE03MSGFIV.getString();
  }

  /**
  * Set field E03MSGSIX using a String value.
  */
  public void setE03MSGSIX(String newvalue)
  {
    fieldE03MSGSIX.setString(newvalue);
  }

  /**
  * Get value of field E03MSGSIX as a String.
  */
  public String getE03MSGSIX()
  {
    return fieldE03MSGSIX.getString();
  }

}
