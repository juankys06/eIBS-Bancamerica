package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGL059001 physical file definition.
* 
* File level identifier is 1040702121805.
* Record format level identifier is 48F62CBFB4286.
*/

public class EGL059001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01GLMBNK",
                                     "E01GLMCCY",
                                     "E01GLMGLN",
                                     "E01GLMDSC",
                                     "E01GLMIBF",
                                     "E01GLMATY",
                                     "E01GLMBBL"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01GLMBNK",
                                   "E01GLMCCY",
                                   "E01GLMGLN",
                                   "E01GLMDSC",
                                   "E01GLMIBF",
                                   "E01GLMATY",
                                   "E01GLMBBL"
                                 };
  final static String fid = "1040702121805";
  final static String rid = "48F62CBFB4286";
  final static String fmtname = "EGL059001";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01GLMBNK = null;
  private CharacterField fieldE01GLMCCY = null;
  private DecimalField fieldE01GLMGLN = null;
  private CharacterField fieldE01GLMDSC = null;
  private CharacterField fieldE01GLMIBF = null;
  private CharacterField fieldE01GLMATY = null;
  private DecimalField fieldE01GLMBBL = null;

  /**
  * Constructor for EGL059001Message.
  */
  public EGL059001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 124;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01GLMBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01GLMBNK");
    fields[10] = fieldE01GLMCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E01GLMCCY");
    fields[11] = fieldE01GLMGLN =
    new DecimalField(message, HEADERSIZE + 47, 17, 0, "E01GLMGLN");
    fields[12] = fieldE01GLMDSC =
    new CharacterField(message, HEADERSIZE + 64, 35, "E01GLMDSC");
    fields[13] = fieldE01GLMIBF =
    new CharacterField(message, HEADERSIZE + 99, 2, "E01GLMIBF");
    fields[14] = fieldE01GLMATY =
    new CharacterField(message, HEADERSIZE + 101, 4, "E01GLMATY");
    fields[15] = fieldE01GLMBBL =
    new DecimalField(message, HEADERSIZE + 105, 19, 2, "E01GLMBBL");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01GLMBNK using a String value.
  */
  public void setE01GLMBNK(String newvalue)
  {
    fieldE01GLMBNK.setString(newvalue);
  }

  /**
  * Get value of field E01GLMBNK as a String.
  */
  public String getE01GLMBNK()
  {
    return fieldE01GLMBNK.getString();
  }

  /**
  * Set field E01GLMCCY using a String value.
  */
  public void setE01GLMCCY(String newvalue)
  {
    fieldE01GLMCCY.setString(newvalue);
  }

  /**
  * Get value of field E01GLMCCY as a String.
  */
  public String getE01GLMCCY()
  {
    return fieldE01GLMCCY.getString();
  }

  /**
  * Set field E01GLMGLN using a String value.
  */
  public void setE01GLMGLN(String newvalue)
  {
    fieldE01GLMGLN.setString(newvalue);
  }

  /**
  * Get value of field E01GLMGLN as a String.
  */
  public String getE01GLMGLN()
  {
    return fieldE01GLMGLN.getString();
  }

  /**
  * Set numeric field E01GLMGLN using a BigDecimal value.
  */
  public void setE01GLMGLN(BigDecimal newvalue)
  {
    fieldE01GLMGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GLMGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GLMGLN()
  {
    return fieldE01GLMGLN.getBigDecimal();
  }

  /**
  * Set field E01GLMDSC using a String value.
  */
  public void setE01GLMDSC(String newvalue)
  {
    fieldE01GLMDSC.setString(newvalue);
  }

  /**
  * Get value of field E01GLMDSC as a String.
  */
  public String getE01GLMDSC()
  {
    return fieldE01GLMDSC.getString();
  }

  /**
  * Set field E01GLMIBF using a String value.
  */
  public void setE01GLMIBF(String newvalue)
  {
    fieldE01GLMIBF.setString(newvalue);
  }

  /**
  * Get value of field E01GLMIBF as a String.
  */
  public String getE01GLMIBF()
  {
    return fieldE01GLMIBF.getString();
  }

  /**
  * Set field E01GLMATY using a String value.
  */
  public void setE01GLMATY(String newvalue)
  {
    fieldE01GLMATY.setString(newvalue);
  }

  /**
  * Get value of field E01GLMATY as a String.
  */
  public String getE01GLMATY()
  {
    return fieldE01GLMATY.getString();
  }

  /**
  * Set field E01GLMBBL using a String value.
  */
  public void setE01GLMBBL(String newvalue)
  {
    fieldE01GLMBBL.setString(newvalue);
  }

  /**
  * Get value of field E01GLMBBL as a String.
  */
  public String getE01GLMBBL()
  {
    return fieldE01GLMBBL.getString();
  }

  /**
  * Set numeric field E01GLMBBL using a BigDecimal value.
  */
  public void setE01GLMBBL(BigDecimal newvalue)
  {
    fieldE01GLMBBL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GLMBBL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GLMBBL()
  {
    return fieldE01GLMBBL.getBigDecimal();
  }

}
