package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0305DS physical file definition.
* 
* File level identifier is 1011206105442.
* Record format level identifier is 449DBB07A9B0C.
*/

public class EWD0305DSMessage extends MessageRecord
{
  final int FIELDCOUNT = 10;
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDCOD = null;
  private CharacterField fieldSWDNME = null;
  private DecimalField fieldSWDRFI = null;
  private DecimalField fieldSWDRVA = null;
  private DecimalField fieldSWDCUN = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0305DSMessage.
  */
  public EWD0305DSMessage()
  {
	createFields();
	initialize();
  }  

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
	recordsize = 97;
	fileid = "1011206105442";
	recordid = "449DBB07A9B0C";
	message = new byte[getByteLength()];
	formatname = "EWD0305DS";
	fieldnames = new String[FIELDCOUNT];
	tagnames = new String[FIELDCOUNT];
	fields = new MessageField[FIELDCOUNT];

	fieldnames[0] = "RWDUSR";
	tagnames[0] = "RWDUSR";
	fields[0] = fieldRWDUSR =
	new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
	fieldnames[1] = "RWDTYP";
	tagnames[1] = "RWDTYP";
	fields[1] = fieldRWDTYP =
	new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
	fieldnames[2] = "RWDFRC";
	tagnames[2] = "RWDFRC";
	fields[2] = fieldRWDFRC =
	new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
	fieldnames[3] = "SWDCOD";
	tagnames[3] = "SWDCOD";
	fields[3] = fieldSWDCOD =
	new CharacterField(message, HEADERSIZE + 19, 2, "SWDCOD");
	fieldnames[4] = "SWDNME";
	tagnames[4] = "SWDNME";
	fields[4] = fieldSWDNME =
	new CharacterField(message, HEADERSIZE + 21, 35, "SWDNME");
	fieldnames[5] = "SWDRFI";
	tagnames[5] = "SWDRFI";
	fields[5] = fieldSWDRFI =
	new DecimalField(message, HEADERSIZE + 56, 11, 6, "SWDRFI");
	fieldnames[6] = "SWDRVA";
	tagnames[6] = "SWDRVA";
	fields[6] = fieldSWDRVA =
	new DecimalField(message, HEADERSIZE + 67, 11, 6, "SWDRVA");
	fieldnames[7] = "SWDCUN";
	tagnames[7] = "SWDCUN";
	fields[7] = fieldSWDCUN =
	new DecimalField(message, HEADERSIZE + 78, 10, 0, "SWDCUN");
	fieldnames[8] = "SWDREC";
	tagnames[8] = "SWDREC";
	fields[8] = fieldSWDREC =
	new DecimalField(message, HEADERSIZE + 88, 8, 0, "SWDREC");
	fieldnames[9] = "SWDOPE";
	tagnames[9] = "SWDOPE";
	fields[9] = fieldSWDOPE =
	new CharacterField(message, HEADERSIZE + 96, 1, "SWDOPE");
  }  

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
	fieldRWDUSR.setString(newvalue);
  }  

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
	return fieldRWDUSR.getString();
  }  

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
	fieldRWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
	return fieldRWDTYP.getString();
  }  

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
	fieldRWDFRC.setString(newvalue);
  }  

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
	return fieldRWDFRC.getString();
  }  

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
	fieldRWDFRC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
	return fieldRWDFRC.getBigDecimal();
  }  

  /**
  * Set field SWDCOD using a String value.
  */
  public void setSWDCOD(String newvalue)
  {
	fieldSWDCOD.setString(newvalue);
  }  

  /**
  * Get value of field SWDCOD as a String.
  */
  public String getSWDCOD()
  {
	return fieldSWDCOD.getString();
  }  

  /**
  * Set field SWDNME using a String value.
  */
  public void setSWDNME(String newvalue)
  {
	fieldSWDNME.setString(newvalue);
  }  

  /**
  * Get value of field SWDNME as a String.
  */
  public String getSWDNME()
  {
	return fieldSWDNME.getString();
  }  

  /**
  * Set field SWDRFI using a String value.
  */
  public void setSWDRFI(String newvalue)
  {
	fieldSWDRFI.setString(newvalue);
  }  

  /**
  * Get value of field SWDRFI as a String.
  */
  public String getSWDRFI()
  {
	return fieldSWDRFI.getString();
  }  

  /**
  * Set numeric field SWDRFI using a BigDecimal value.
  */
  public void setSWDRFI(BigDecimal newvalue)
  {
	fieldSWDRFI.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDRFI as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDRFI()
  {
	return fieldSWDRFI.getBigDecimal();
  }  

  /**
  * Set field SWDRVA using a String value.
  */
  public void setSWDRVA(String newvalue)
  {
	fieldSWDRVA.setString(newvalue);
  }  

  /**
  * Get value of field SWDRVA as a String.
  */
  public String getSWDRVA()
  {
	return fieldSWDRVA.getString();
  }  

  /**
  * Set numeric field SWDRVA using a BigDecimal value.
  */
  public void setSWDRVA(BigDecimal newvalue)
  {
	fieldSWDRVA.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDRVA as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDRVA()
  {
	return fieldSWDRVA.getBigDecimal();
  }  

  /**
  * Set field SWDCUN using a String value.
  */
  public void setSWDCUN(String newvalue)
  {
	fieldSWDCUN.setString(newvalue);
  }  

  /**
  * Get value of field SWDCUN as a String.
  */
  public String getSWDCUN()
  {
	return fieldSWDCUN.getString();
  }  

  /**
  * Set numeric field SWDCUN using a BigDecimal value.
  */
  public void setSWDCUN(BigDecimal newvalue)
  {
	fieldSWDCUN.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCUN()
  {
	return fieldSWDCUN.getBigDecimal();
  }  

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
	fieldSWDREC.setString(newvalue);
  }  

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
	return fieldSWDREC.getString();
  }  

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
	fieldSWDREC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
	return fieldSWDREC.getBigDecimal();
  }  

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
	fieldSWDOPE.setString(newvalue);
  }  

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
	return fieldSWDOPE.getString();
  }  

}