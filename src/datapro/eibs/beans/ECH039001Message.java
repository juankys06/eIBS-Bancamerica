package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECH039001 physical file definition.
* 
* File level identifier is 1021115125920.
* Record format level identifier is 44923E2679ADB.
*/

public class ECH039001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CHMACC",
                                     "E01CUSIDN",
                                     "E01CUSCUN",
                                     "E01CUSNA1",
                                     "E01CHMRQY",
                                     "E01CHMRQM",
                                     "E01CHMRQD",
                                     "E01CHFEUY",
                                     "E01CHFEUM",
                                     "E01CHFEUD",
                                     "E01CHMNCB",
                                     "E01ESTADO",
                                     "E01CHMNTC",
                                     "E01CHMICK",
                                     "E01CHMFCK",
                                     "E01STSSOL",
                                     "E01STSREP",
                                     "E01STSENS",
                                     "E01STSRES",
                                     "E01STSENC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CHMACC",
                                   "E01CUSIDN",
                                   "E01CUSCUN",
                                   "E01CUSNA1",
                                   "E01CHMRQY",
                                   "E01CHMRQM",
                                   "E01CHMRQD",
                                   "E01CHFEUY",
                                   "E01CHFEUM",
                                   "E01CHFEUD",
                                   "E01CHMNCB",
                                   "E01ESTADO",
                                   "E01CHMNTC",
                                   "E01CHMICK",
                                   "E01CHMFCK",
                                   "E01STSSOL",
                                   "E01STSREP",
                                   "E01STSENS",
                                   "E01STSRES",
                                   "E01STSENC"
                                 };
  final static String fid = "1021115125920";
  final static String rid = "44923E2679ADB";
  final static String fmtname = "ECH039001";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CHMACC = null;
  private CharacterField fieldE01CUSIDN = null;
  private DecimalField fieldE01CUSCUN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private DecimalField fieldE01CHMRQY = null;
  private DecimalField fieldE01CHMRQM = null;
  private DecimalField fieldE01CHMRQD = null;
  private DecimalField fieldE01CHFEUY = null;
  private DecimalField fieldE01CHFEUM = null;
  private DecimalField fieldE01CHFEUD = null;
  private DecimalField fieldE01CHMNCB = null;
  private CharacterField fieldE01ESTADO = null;
  private DecimalField fieldE01CHMNTC = null;
  private DecimalField fieldE01CHMICK = null;
  private DecimalField fieldE01CHMFCK = null;
  private CharacterField fieldE01STSSOL = null;
  private CharacterField fieldE01STSREP = null;
  private CharacterField fieldE01STSENS = null;
  private CharacterField fieldE01STSRES = null;
  private CharacterField fieldE01STSENC = null;

  /**
  * Constructor for ECH039001Message.
  */
  public ECH039001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 188;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CHMACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01CHMACC");
    fields[10] = fieldE01CUSIDN =
    new CharacterField(message, HEADERSIZE + 55, 15, "E01CUSIDN");
    fields[11] = fieldE01CUSCUN =
    new DecimalField(message, HEADERSIZE + 70, 10, 0, "E01CUSCUN");
    fields[12] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 80, 45, "E01CUSNA1");
    fields[13] = fieldE01CHMRQY =
    new DecimalField(message, HEADERSIZE + 125, 3, 0, "E01CHMRQY");
    fields[14] = fieldE01CHMRQM =
    new DecimalField(message, HEADERSIZE + 128, 3, 0, "E01CHMRQM");
    fields[15] = fieldE01CHMRQD =
    new DecimalField(message, HEADERSIZE + 131, 3, 0, "E01CHMRQD");
    fields[16] = fieldE01CHFEUY =
    new DecimalField(message, HEADERSIZE + 134, 3, 0, "E01CHFEUY");
    fields[17] = fieldE01CHFEUM =
    new DecimalField(message, HEADERSIZE + 137, 3, 0, "E01CHFEUM");
    fields[18] = fieldE01CHFEUD =
    new DecimalField(message, HEADERSIZE + 140, 3, 0, "E01CHFEUD");
    fields[19] = fieldE01CHMNCB =
    new DecimalField(message, HEADERSIZE + 143, 5, 0, "E01CHMNCB");
    fields[20] = fieldE01ESTADO =
    new CharacterField(message, HEADERSIZE + 148, 10, "E01ESTADO");
    fields[21] = fieldE01CHMNTC =
    new DecimalField(message, HEADERSIZE + 158, 5, 0, "E01CHMNTC");
    fields[22] = fieldE01CHMICK =
    new DecimalField(message, HEADERSIZE + 163, 10, 0, "E01CHMICK");
    fields[23] = fieldE01CHMFCK =
    new DecimalField(message, HEADERSIZE + 173, 10, 0, "E01CHMFCK");
    fields[24] = fieldE01STSSOL =
    new CharacterField(message, HEADERSIZE + 183, 1, "E01STSSOL");
    fields[25] = fieldE01STSREP =
    new CharacterField(message, HEADERSIZE + 184, 1, "E01STSREP");
    fields[26] = fieldE01STSENS =
    new CharacterField(message, HEADERSIZE + 185, 1, "E01STSENS");
    fields[27] = fieldE01STSRES =
    new CharacterField(message, HEADERSIZE + 186, 1, "E01STSRES");
    fields[28] = fieldE01STSENC =
    new CharacterField(message, HEADERSIZE + 187, 1, "E01STSENC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CHMACC using a String value.
  */
  public void setE01CHMACC(String newvalue)
  {
    fieldE01CHMACC.setString(newvalue);
  }

  /**
  * Get value of field E01CHMACC as a String.
  */
  public String getE01CHMACC()
  {
    return fieldE01CHMACC.getString();
  }

  /**
  * Set numeric field E01CHMACC using a BigDecimal value.
  */
  public void setE01CHMACC(BigDecimal newvalue)
  {
    fieldE01CHMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMACC()
  {
    return fieldE01CHMACC.getBigDecimal();
  }

  /**
  * Set field E01CUSIDN using a String value.
  */
  public void setE01CUSIDN(String newvalue)
  {
    fieldE01CUSIDN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSIDN as a String.
  */
  public String getE01CUSIDN()
  {
    return fieldE01CUSIDN.getString();
  }

  /**
  * Set field E01CUSCUN using a String value.
  */
  public void setE01CUSCUN(String newvalue)
  {
    fieldE01CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSCUN as a String.
  */
  public String getE01CUSCUN()
  {
    return fieldE01CUSCUN.getString();
  }

  /**
  * Set numeric field E01CUSCUN using a BigDecimal value.
  */
  public void setE01CUSCUN(BigDecimal newvalue)
  {
    fieldE01CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSCUN()
  {
    return fieldE01CUSCUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CHMRQY using a String value.
  */
  public void setE01CHMRQY(String newvalue)
  {
    fieldE01CHMRQY.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRQY as a String.
  */
  public String getE01CHMRQY()
  {
    return fieldE01CHMRQY.getString();
  }

  /**
  * Set numeric field E01CHMRQY using a BigDecimal value.
  */
  public void setE01CHMRQY(BigDecimal newvalue)
  {
    fieldE01CHMRQY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRQY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRQY()
  {
    return fieldE01CHMRQY.getBigDecimal();
  }

  /**
  * Set field E01CHMRQM using a String value.
  */
  public void setE01CHMRQM(String newvalue)
  {
    fieldE01CHMRQM.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRQM as a String.
  */
  public String getE01CHMRQM()
  {
    return fieldE01CHMRQM.getString();
  }

  /**
  * Set numeric field E01CHMRQM using a BigDecimal value.
  */
  public void setE01CHMRQM(BigDecimal newvalue)
  {
    fieldE01CHMRQM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRQM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRQM()
  {
    return fieldE01CHMRQM.getBigDecimal();
  }

  /**
  * Set field E01CHMRQD using a String value.
  */
  public void setE01CHMRQD(String newvalue)
  {
    fieldE01CHMRQD.setString(newvalue);
  }

  /**
  * Get value of field E01CHMRQD as a String.
  */
  public String getE01CHMRQD()
  {
    return fieldE01CHMRQD.getString();
  }

  /**
  * Set numeric field E01CHMRQD using a BigDecimal value.
  */
  public void setE01CHMRQD(BigDecimal newvalue)
  {
    fieldE01CHMRQD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMRQD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMRQD()
  {
    return fieldE01CHMRQD.getBigDecimal();
  }

  /**
  * Set field E01CHFEUY using a String value.
  */
  public void setE01CHFEUY(String newvalue)
  {
    fieldE01CHFEUY.setString(newvalue);
  }

  /**
  * Get value of field E01CHFEUY as a String.
  */
  public String getE01CHFEUY()
  {
    return fieldE01CHFEUY.getString();
  }

  /**
  * Set numeric field E01CHFEUY using a BigDecimal value.
  */
  public void setE01CHFEUY(BigDecimal newvalue)
  {
    fieldE01CHFEUY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHFEUY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHFEUY()
  {
    return fieldE01CHFEUY.getBigDecimal();
  }

  /**
  * Set field E01CHFEUM using a String value.
  */
  public void setE01CHFEUM(String newvalue)
  {
    fieldE01CHFEUM.setString(newvalue);
  }

  /**
  * Get value of field E01CHFEUM as a String.
  */
  public String getE01CHFEUM()
  {
    return fieldE01CHFEUM.getString();
  }

  /**
  * Set numeric field E01CHFEUM using a BigDecimal value.
  */
  public void setE01CHFEUM(BigDecimal newvalue)
  {
    fieldE01CHFEUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHFEUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHFEUM()
  {
    return fieldE01CHFEUM.getBigDecimal();
  }

  /**
  * Set field E01CHFEUD using a String value.
  */
  public void setE01CHFEUD(String newvalue)
  {
    fieldE01CHFEUD.setString(newvalue);
  }

  /**
  * Get value of field E01CHFEUD as a String.
  */
  public String getE01CHFEUD()
  {
    return fieldE01CHFEUD.getString();
  }

  /**
  * Set numeric field E01CHFEUD using a BigDecimal value.
  */
  public void setE01CHFEUD(BigDecimal newvalue)
  {
    fieldE01CHFEUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHFEUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHFEUD()
  {
    return fieldE01CHFEUD.getBigDecimal();
  }

  /**
  * Set field E01CHMNCB using a String value.
  */
  public void setE01CHMNCB(String newvalue)
  {
    fieldE01CHMNCB.setString(newvalue);
  }

  /**
  * Get value of field E01CHMNCB as a String.
  */
  public String getE01CHMNCB()
  {
    return fieldE01CHMNCB.getString();
  }

  /**
  * Set numeric field E01CHMNCB using a BigDecimal value.
  */
  public void setE01CHMNCB(BigDecimal newvalue)
  {
    fieldE01CHMNCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMNCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMNCB()
  {
    return fieldE01CHMNCB.getBigDecimal();
  }

  /**
  * Set field E01ESTADO using a String value.
  */
  public void setE01ESTADO(String newvalue)
  {
    fieldE01ESTADO.setString(newvalue);
  }

  /**
  * Get value of field E01ESTADO as a String.
  */
  public String getE01ESTADO()
  {
    return fieldE01ESTADO.getString();
  }

  /**
  * Set field E01CHMNTC using a String value.
  */
  public void setE01CHMNTC(String newvalue)
  {
    fieldE01CHMNTC.setString(newvalue);
  }

  /**
  * Get value of field E01CHMNTC as a String.
  */
  public String getE01CHMNTC()
  {
    return fieldE01CHMNTC.getString();
  }

  /**
  * Set numeric field E01CHMNTC using a BigDecimal value.
  */
  public void setE01CHMNTC(BigDecimal newvalue)
  {
    fieldE01CHMNTC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMNTC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMNTC()
  {
    return fieldE01CHMNTC.getBigDecimal();
  }

  /**
  * Set field E01CHMICK using a String value.
  */
  public void setE01CHMICK(String newvalue)
  {
    fieldE01CHMICK.setString(newvalue);
  }

  /**
  * Get value of field E01CHMICK as a String.
  */
  public String getE01CHMICK()
  {
    return fieldE01CHMICK.getString();
  }

  /**
  * Set numeric field E01CHMICK using a BigDecimal value.
  */
  public void setE01CHMICK(BigDecimal newvalue)
  {
    fieldE01CHMICK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMICK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMICK()
  {
    return fieldE01CHMICK.getBigDecimal();
  }

  /**
  * Set field E01CHMFCK using a String value.
  */
  public void setE01CHMFCK(String newvalue)
  {
    fieldE01CHMFCK.setString(newvalue);
  }

  /**
  * Get value of field E01CHMFCK as a String.
  */
  public String getE01CHMFCK()
  {
    return fieldE01CHMFCK.getString();
  }

  /**
  * Set numeric field E01CHMFCK using a BigDecimal value.
  */
  public void setE01CHMFCK(BigDecimal newvalue)
  {
    fieldE01CHMFCK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMFCK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMFCK()
  {
    return fieldE01CHMFCK.getBigDecimal();
  }

  /**
  * Set field E01STSSOL using a String value.
  */
  public void setE01STSSOL(String newvalue)
  {
    fieldE01STSSOL.setString(newvalue);
  }

  /**
  * Get value of field E01STSSOL as a String.
  */
  public String getE01STSSOL()
  {
    return fieldE01STSSOL.getString();
  }

  /**
  * Set field E01STSREP using a String value.
  */
  public void setE01STSREP(String newvalue)
  {
    fieldE01STSREP.setString(newvalue);
  }

  /**
  * Get value of field E01STSREP as a String.
  */
  public String getE01STSREP()
  {
    return fieldE01STSREP.getString();
  }

  /**
  * Set field E01STSENS using a String value.
  */
  public void setE01STSENS(String newvalue)
  {
    fieldE01STSENS.setString(newvalue);
  }

  /**
  * Get value of field E01STSENS as a String.
  */
  public String getE01STSENS()
  {
    return fieldE01STSENS.getString();
  }

  /**
  * Set field E01STSRES using a String value.
  */
  public void setE01STSRES(String newvalue)
  {
    fieldE01STSRES.setString(newvalue);
  }

  /**
  * Get value of field E01STSRES as a String.
  */
  public String getE01STSRES()
  {
    return fieldE01STSRES.getString();
  }

  /**
  * Set field E01STSENC using a String value.
  */
  public void setE01STSENC(String newvalue)
  {
    fieldE01STSENC.setString(newvalue);
  }

  /**
  * Get value of field E01STSENC as a String.
  */
  public String getE01STSENC()
  {
    return fieldE01STSENC.getString();
  }

}
