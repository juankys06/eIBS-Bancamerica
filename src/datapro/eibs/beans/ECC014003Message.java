package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECC014003 physical file definition.
* 
* File level identifier is 1061102124714.
* Record format level identifier is 55CC423F20548.
*/

public class ECC014003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03CCMACC",
                                     "E03CCMACD",
                                     "E03CCMCUN",
                                     "E03CUSNA1",
                                     "E03CCMPRO",
                                     "E03CCMCCY",
                                     "E03CCMAMT",
                                     "E03CCMUBT",
                                     "E03CCMUSR",
                                     "E03CCMRMK",
                                     "E03CCMOPM",
                                     "E03CCMOPD",
                                     "E03CCMOPY",
                                     "E03CCMEXM",
                                     "E03CCMEXD",
                                     "E03CCMEXY",
                                     "E03CCMNUM"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03CCMACC",
                                   "E03CCMACD",
                                   "E03CCMCUN",
                                   "E03CUSNA1",
                                   "E03CCMPRO",
                                   "E03CCMCCY",
                                   "E03CCMAMT",
                                   "E03CCMUBT",
                                   "E03CCMUSR",
                                   "E03CCMRMK",
                                   "E03CCMOPM",
                                   "E03CCMOPD",
                                   "E03CCMOPY",
                                   "E03CCMEXM",
                                   "E03CCMEXD",
                                   "E03CCMEXY",
                                   "E03CCMNUM"
                                 };
  final static String fid = "1061102124714";
  final static String rid = "55CC423F20548";
  final static String fmtname = "ECC014003";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03CCMACC = null;
  private CharacterField fieldE03CCMACD = null;
  private DecimalField fieldE03CCMCUN = null;
  private CharacterField fieldE03CUSNA1 = null;
  private CharacterField fieldE03CCMPRO = null;
  private CharacterField fieldE03CCMCCY = null;
  private DecimalField fieldE03CCMAMT = null;
  private DecimalField fieldE03CCMUBT = null;
  private CharacterField fieldE03CCMUSR = null;
  private CharacterField fieldE03CCMRMK = null;
  private DecimalField fieldE03CCMOPM = null;
  private DecimalField fieldE03CCMOPD = null;
  private DecimalField fieldE03CCMOPY = null;
  private DecimalField fieldE03CCMEXM = null;
  private DecimalField fieldE03CCMEXD = null;
  private DecimalField fieldE03CCMEXY = null;
  private CharacterField fieldE03CCMNUM = null;

  /**
  * Constructor for ECC014003Message.
  */
  public ECC014003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 213;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03CCMACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E03CCMACC");
    fields[10] = fieldE03CCMACD =
    new CharacterField(message, HEADERSIZE + 55, 2, "E03CCMACD");
    fields[11] = fieldE03CCMCUN =
    new DecimalField(message, HEADERSIZE + 57, 10, 0, "E03CCMCUN");
    fields[12] = fieldE03CUSNA1 =
    new CharacterField(message, HEADERSIZE + 67, 45, "E03CUSNA1");
    fields[13] = fieldE03CCMPRO =
    new CharacterField(message, HEADERSIZE + 112, 4, "E03CCMPRO");
    fields[14] = fieldE03CCMCCY =
    new CharacterField(message, HEADERSIZE + 116, 3, "E03CCMCCY");
    fields[15] = fieldE03CCMAMT =
    new DecimalField(message, HEADERSIZE + 119, 17, 2, "E03CCMAMT");
    fields[16] = fieldE03CCMUBT =
    new DecimalField(message, HEADERSIZE + 136, 5, 0, "E03CCMUBT");
    fields[17] = fieldE03CCMUSR =
    new CharacterField(message, HEADERSIZE + 141, 10, "E03CCMUSR");
    fields[18] = fieldE03CCMRMK =
    new CharacterField(message, HEADERSIZE + 151, 20, "E03CCMRMK");
    fields[19] = fieldE03CCMOPM =
    new DecimalField(message, HEADERSIZE + 171, 3, 0, "E03CCMOPM");
    fields[20] = fieldE03CCMOPD =
    new DecimalField(message, HEADERSIZE + 174, 3, 0, "E03CCMOPD");
    fields[21] = fieldE03CCMOPY =
    new DecimalField(message, HEADERSIZE + 177, 5, 0, "E03CCMOPY");
    fields[22] = fieldE03CCMEXM =
    new DecimalField(message, HEADERSIZE + 182, 3, 0, "E03CCMEXM");
    fields[23] = fieldE03CCMEXD =
    new DecimalField(message, HEADERSIZE + 185, 3, 0, "E03CCMEXD");
    fields[24] = fieldE03CCMEXY =
    new DecimalField(message, HEADERSIZE + 188, 5, 0, "E03CCMEXY");
    fields[25] = fieldE03CCMNUM =
    new CharacterField(message, HEADERSIZE + 193, 20, "E03CCMNUM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03CCMACC using a String value.
  */
  public void setE03CCMACC(String newvalue)
  {
    fieldE03CCMACC.setString(newvalue);
  }

  /**
  * Get value of field E03CCMACC as a String.
  */
  public String getE03CCMACC()
  {
    return fieldE03CCMACC.getString();
  }

  /**
  * Set numeric field E03CCMACC using a BigDecimal value.
  */
  public void setE03CCMACC(BigDecimal newvalue)
  {
    fieldE03CCMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMACC()
  {
    return fieldE03CCMACC.getBigDecimal();
  }

  /**
  * Set field E03CCMACD using a String value.
  */
  public void setE03CCMACD(String newvalue)
  {
    fieldE03CCMACD.setString(newvalue);
  }

  /**
  * Get value of field E03CCMACD as a String.
  */
  public String getE03CCMACD()
  {
    return fieldE03CCMACD.getString();
  }

  /**
  * Set field E03CCMCUN using a String value.
  */
  public void setE03CCMCUN(String newvalue)
  {
    fieldE03CCMCUN.setString(newvalue);
  }

  /**
  * Get value of field E03CCMCUN as a String.
  */
  public String getE03CCMCUN()
  {
    return fieldE03CCMCUN.getString();
  }

  /**
  * Set numeric field E03CCMCUN using a BigDecimal value.
  */
  public void setE03CCMCUN(BigDecimal newvalue)
  {
    fieldE03CCMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMCUN()
  {
    return fieldE03CCMCUN.getBigDecimal();
  }

  /**
  * Set field E03CUSNA1 using a String value.
  */
  public void setE03CUSNA1(String newvalue)
  {
    fieldE03CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSNA1 as a String.
  */
  public String getE03CUSNA1()
  {
    return fieldE03CUSNA1.getString();
  }

  /**
  * Set field E03CCMPRO using a String value.
  */
  public void setE03CCMPRO(String newvalue)
  {
    fieldE03CCMPRO.setString(newvalue);
  }

  /**
  * Get value of field E03CCMPRO as a String.
  */
  public String getE03CCMPRO()
  {
    return fieldE03CCMPRO.getString();
  }

  /**
  * Set field E03CCMCCY using a String value.
  */
  public void setE03CCMCCY(String newvalue)
  {
    fieldE03CCMCCY.setString(newvalue);
  }

  /**
  * Get value of field E03CCMCCY as a String.
  */
  public String getE03CCMCCY()
  {
    return fieldE03CCMCCY.getString();
  }

  /**
  * Set field E03CCMAMT using a String value.
  */
  public void setE03CCMAMT(String newvalue)
  {
    fieldE03CCMAMT.setString(newvalue);
  }

  /**
  * Get value of field E03CCMAMT as a String.
  */
  public String getE03CCMAMT()
  {
    return fieldE03CCMAMT.getString();
  }

  /**
  * Set numeric field E03CCMAMT using a BigDecimal value.
  */
  public void setE03CCMAMT(BigDecimal newvalue)
  {
    fieldE03CCMAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMAMT()
  {
    return fieldE03CCMAMT.getBigDecimal();
  }

  /**
  * Set field E03CCMUBT using a String value.
  */
  public void setE03CCMUBT(String newvalue)
  {
    fieldE03CCMUBT.setString(newvalue);
  }

  /**
  * Get value of field E03CCMUBT as a String.
  */
  public String getE03CCMUBT()
  {
    return fieldE03CCMUBT.getString();
  }

  /**
  * Set numeric field E03CCMUBT using a BigDecimal value.
  */
  public void setE03CCMUBT(BigDecimal newvalue)
  {
    fieldE03CCMUBT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMUBT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMUBT()
  {
    return fieldE03CCMUBT.getBigDecimal();
  }

  /**
  * Set field E03CCMUSR using a String value.
  */
  public void setE03CCMUSR(String newvalue)
  {
    fieldE03CCMUSR.setString(newvalue);
  }

  /**
  * Get value of field E03CCMUSR as a String.
  */
  public String getE03CCMUSR()
  {
    return fieldE03CCMUSR.getString();
  }

  /**
  * Set field E03CCMRMK using a String value.
  */
  public void setE03CCMRMK(String newvalue)
  {
    fieldE03CCMRMK.setString(newvalue);
  }

  /**
  * Get value of field E03CCMRMK as a String.
  */
  public String getE03CCMRMK()
  {
    return fieldE03CCMRMK.getString();
  }

  /**
  * Set field E03CCMOPM using a String value.
  */
  public void setE03CCMOPM(String newvalue)
  {
    fieldE03CCMOPM.setString(newvalue);
  }

  /**
  * Get value of field E03CCMOPM as a String.
  */
  public String getE03CCMOPM()
  {
    return fieldE03CCMOPM.getString();
  }

  /**
  * Set numeric field E03CCMOPM using a BigDecimal value.
  */
  public void setE03CCMOPM(BigDecimal newvalue)
  {
    fieldE03CCMOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMOPM()
  {
    return fieldE03CCMOPM.getBigDecimal();
  }

  /**
  * Set field E03CCMOPD using a String value.
  */
  public void setE03CCMOPD(String newvalue)
  {
    fieldE03CCMOPD.setString(newvalue);
  }

  /**
  * Get value of field E03CCMOPD as a String.
  */
  public String getE03CCMOPD()
  {
    return fieldE03CCMOPD.getString();
  }

  /**
  * Set numeric field E03CCMOPD using a BigDecimal value.
  */
  public void setE03CCMOPD(BigDecimal newvalue)
  {
    fieldE03CCMOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMOPD()
  {
    return fieldE03CCMOPD.getBigDecimal();
  }

  /**
  * Set field E03CCMOPY using a String value.
  */
  public void setE03CCMOPY(String newvalue)
  {
    fieldE03CCMOPY.setString(newvalue);
  }

  /**
  * Get value of field E03CCMOPY as a String.
  */
  public String getE03CCMOPY()
  {
    return fieldE03CCMOPY.getString();
  }

  /**
  * Set numeric field E03CCMOPY using a BigDecimal value.
  */
  public void setE03CCMOPY(BigDecimal newvalue)
  {
    fieldE03CCMOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMOPY()
  {
    return fieldE03CCMOPY.getBigDecimal();
  }

  /**
  * Set field E03CCMEXM using a String value.
  */
  public void setE03CCMEXM(String newvalue)
  {
    fieldE03CCMEXM.setString(newvalue);
  }

  /**
  * Get value of field E03CCMEXM as a String.
  */
  public String getE03CCMEXM()
  {
    return fieldE03CCMEXM.getString();
  }

  /**
  * Set numeric field E03CCMEXM using a BigDecimal value.
  */
  public void setE03CCMEXM(BigDecimal newvalue)
  {
    fieldE03CCMEXM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMEXM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMEXM()
  {
    return fieldE03CCMEXM.getBigDecimal();
  }

  /**
  * Set field E03CCMEXD using a String value.
  */
  public void setE03CCMEXD(String newvalue)
  {
    fieldE03CCMEXD.setString(newvalue);
  }

  /**
  * Get value of field E03CCMEXD as a String.
  */
  public String getE03CCMEXD()
  {
    return fieldE03CCMEXD.getString();
  }

  /**
  * Set numeric field E03CCMEXD using a BigDecimal value.
  */
  public void setE03CCMEXD(BigDecimal newvalue)
  {
    fieldE03CCMEXD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMEXD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMEXD()
  {
    return fieldE03CCMEXD.getBigDecimal();
  }

  /**
  * Set field E03CCMEXY using a String value.
  */
  public void setE03CCMEXY(String newvalue)
  {
    fieldE03CCMEXY.setString(newvalue);
  }

  /**
  * Get value of field E03CCMEXY as a String.
  */
  public String getE03CCMEXY()
  {
    return fieldE03CCMEXY.getString();
  }

  /**
  * Set numeric field E03CCMEXY using a BigDecimal value.
  */
  public void setE03CCMEXY(BigDecimal newvalue)
  {
    fieldE03CCMEXY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CCMEXY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CCMEXY()
  {
    return fieldE03CCMEXY.getBigDecimal();
  }

  /**
  * Set field E03CCMNUM using a String value.
  */
  public void setE03CCMNUM(String newvalue)
  {
    fieldE03CCMNUM.setString(newvalue);
  }

  /**
  * Get value of field E03CCMNUM as a String.
  */
  public String getE03CCMNUM()
  {
    return fieldE03CCMNUM.getString();
  }

}
