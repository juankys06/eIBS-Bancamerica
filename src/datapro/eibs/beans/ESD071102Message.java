package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD071102 physical file definition.
* 
* File level identifier is 1030121192004.
* Record format level identifier is 5DEA137719D5A.
*/

public class ESD071102Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "E02USERID",
                                     "E02SELACD",
                                     "E02SELTYP",
                                     "E02OPERAC",
                                     "E02GENERI",
                                     "E02APCBNK",
                                     "E02APCCDE",
                                     "E02APCTYP",
                                     "E02DESCRI",
                                     "E02NICNME",
                                     "E02CURREN"
                                   };
  final static String tnames[] = {
                                   "E02USERID",
                                   "E02SELACD",
                                   "E02SELTYP",
                                   "E02OPERAC",
                                   "E02GENERI",
                                   "E02APCBNK",
                                   "E02APCCDE",
                                   "E02APCTYP",
                                   "E02DESCRI",
                                   "E02NICNME",
                                   "E02CURREN"
                                 };
  final static String fid = "1030121192004";
  final static String rid = "5DEA137719D5A";
  final static String fmtname = "ESD071102";
  final int FIELDCOUNT = 11;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldE02USERID = null;
  private CharacterField fieldE02SELACD = null;
  private CharacterField fieldE02SELTYP = null;
  private CharacterField fieldE02OPERAC = null;
  private CharacterField fieldE02GENERI = null;
  private CharacterField fieldE02APCBNK = null;
  private CharacterField fieldE02APCCDE = null;
  private CharacterField fieldE02APCTYP = null;
  private CharacterField fieldE02DESCRI = null;
  private CharacterField fieldE02NICNME = null;
  private CharacterField fieldE02CURREN = null;

  /**
  * Constructor for ESD071102Message.
  */
  public ESD071102Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 106;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldE02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "E02USERID");
    fields[1] = fieldE02SELACD =
    new CharacterField(message, HEADERSIZE + 10, 2, "E02SELACD");
    fields[2] = fieldE02SELTYP =
    new CharacterField(message, HEADERSIZE + 12, 4, "E02SELTYP");
    fields[3] = fieldE02OPERAC =
    new CharacterField(message, HEADERSIZE + 16, 1, "E02OPERAC");
    fields[4] = fieldE02GENERI =
    new CharacterField(message, HEADERSIZE + 17, 1, "E02GENERI");
    fields[5] = fieldE02APCBNK =
    new CharacterField(message, HEADERSIZE + 18, 2, "E02APCBNK");
    fields[6] = fieldE02APCCDE =
    new CharacterField(message, HEADERSIZE + 20, 4, "E02APCCDE");
    fields[7] = fieldE02APCTYP =
    new CharacterField(message, HEADERSIZE + 24, 4, "E02APCTYP");
    fields[8] = fieldE02DESCRI =
    new CharacterField(message, HEADERSIZE + 28, 60, "E02DESCRI");
    fields[9] = fieldE02NICNME =
    new CharacterField(message, HEADERSIZE + 88, 15, "E02NICNME");
    fields[10] = fieldE02CURREN =
    new CharacterField(message, HEADERSIZE + 103, 3, "E02CURREN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field E02USERID using a String value.
  */
  public void setE02USERID(String newvalue)
  {
    fieldE02USERID.setString(newvalue);
  }

  /**
  * Get value of field E02USERID as a String.
  */
  public String getE02USERID()
  {
    return fieldE02USERID.getString();
  }

  /**
  * Set field E02SELACD using a String value.
  */
  public void setE02SELACD(String newvalue)
  {
    fieldE02SELACD.setString(newvalue);
  }

  /**
  * Get value of field E02SELACD as a String.
  */
  public String getE02SELACD()
  {
    return fieldE02SELACD.getString();
  }

  /**
  * Set field E02SELTYP using a String value.
  */
  public void setE02SELTYP(String newvalue)
  {
    fieldE02SELTYP.setString(newvalue);
  }

  /**
  * Get value of field E02SELTYP as a String.
  */
  public String getE02SELTYP()
  {
    return fieldE02SELTYP.getString();
  }

  /**
  * Set field E02OPERAC using a String value.
  */
  public void setE02OPERAC(String newvalue)
  {
    fieldE02OPERAC.setString(newvalue);
  }

  /**
  * Get value of field E02OPERAC as a String.
  */
  public String getE02OPERAC()
  {
    return fieldE02OPERAC.getString();
  }

  /**
  * Set field E02GENERI using a String value.
  */
  public void setE02GENERI(String newvalue)
  {
    fieldE02GENERI.setString(newvalue);
  }

  /**
  * Get value of field E02GENERI as a String.
  */
  public String getE02GENERI()
  {
    return fieldE02GENERI.getString();
  }

  /**
  * Set field E02APCBNK using a String value.
  */
  public void setE02APCBNK(String newvalue)
  {
    fieldE02APCBNK.setString(newvalue);
  }

  /**
  * Get value of field E02APCBNK as a String.
  */
  public String getE02APCBNK()
  {
    return fieldE02APCBNK.getString();
  }

  /**
  * Set field E02APCCDE using a String value.
  */
  public void setE02APCCDE(String newvalue)
  {
    fieldE02APCCDE.setString(newvalue);
  }

  /**
  * Get value of field E02APCCDE as a String.
  */
  public String getE02APCCDE()
  {
    return fieldE02APCCDE.getString();
  }

  /**
  * Set field E02APCTYP using a String value.
  */
  public void setE02APCTYP(String newvalue)
  {
    fieldE02APCTYP.setString(newvalue);
  }

  /**
  * Get value of field E02APCTYP as a String.
  */
  public String getE02APCTYP()
  {
    return fieldE02APCTYP.getString();
  }

  /**
  * Set field E02DESCRI using a String value.
  */
  public void setE02DESCRI(String newvalue)
  {
    fieldE02DESCRI.setString(newvalue);
  }

  /**
  * Get value of field E02DESCRI as a String.
  */
  public String getE02DESCRI()
  {
    return fieldE02DESCRI.getString();
  }

  /**
  * Set field E02NICNME using a String value.
  */
  public void setE02NICNME(String newvalue)
  {
    fieldE02NICNME.setString(newvalue);
  }

  /**
  * Get value of field E02NICNME as a String.
  */
  public String getE02NICNME()
  {
    return fieldE02NICNME.getString();
  }

  /**
  * Set field E02CURREN using a String value.
  */
  public void setE02CURREN(String newvalue)
  {
    fieldE02CURREN.setString(newvalue);
  }

  /**
  * Get value of field E02CURREN as a String.
  */
  public String getE02CURREN()
  {
    return fieldE02CURREN.getString();
  }

}
