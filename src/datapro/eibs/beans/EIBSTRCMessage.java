package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EIBSTRC physical file definition.
* 
* File level identifier is 1030121191932.
* Record format level identifier is 5619FAA067F15.
*/

public class EIBSTRCMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EIBPRG",
                                     "EIBUSR",
                                     "EIBJOB",
                                     "EIBFMT",
                                     "EIBTRTE",
                                     "EIBTMDO",
                                     "EIBTTIM1",
                                     "EIBENV"
                                   };
  final static String tnames[] = {
                                   "EIBPRG",
                                   "EIBUSR",
                                   "EIBJOB",
                                   "EIBFMT",
                                   "EIBTRTE",
                                   "EIBTMDO",
                                   "EIBTTIM1",
                                   "EIBENV"
                                 };
  final static String fid = "1030121191932";
  final static String rid = "5619FAA067F15";
  final static String fmtname = "EIBSTRC";
  final int FIELDCOUNT = 8;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEIBPRG = null;
  private CharacterField fieldEIBUSR = null;
  private CharacterField fieldEIBJOB = null;
  private CharacterField fieldEIBFMT = null;
  private DecimalField fieldEIBTRTE = null;
  private CharacterField fieldEIBTMDO = null;
  private DecimalField fieldEIBTTIM1 = null;
  private CharacterField fieldEIBENV = null;

  /**
  * Constructor for EIBSTRCMessage.
  */
  public EIBSTRCMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 66;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEIBPRG =
    new CharacterField(message, HEADERSIZE + 0, 10, "EIBPRG");
    fields[1] = fieldEIBUSR =
    new CharacterField(message, HEADERSIZE + 10, 10, "EIBUSR");
    fields[2] = fieldEIBJOB =
    new CharacterField(message, HEADERSIZE + 20, 10, "EIBJOB");
    fields[3] = fieldEIBFMT =
    new CharacterField(message, HEADERSIZE + 30, 10, "EIBFMT");
    fields[4] = fieldEIBTRTE =
    new DecimalField(message, HEADERSIZE + 40, 9, 0, "EIBTRTE");
    fields[5] = fieldEIBTMDO =
    new CharacterField(message, HEADERSIZE + 49, 1, "EIBTMDO");
    fields[6] = fieldEIBTTIM1 =
    new DecimalField(message, HEADERSIZE + 50, 13, 0, "EIBTTIM1");
    fields[7] = fieldEIBENV =
    new CharacterField(message, HEADERSIZE + 63, 3, "EIBENV");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EIBPRG using a String value.
  */
  public void setEIBPRG(String newvalue)
  {
    fieldEIBPRG.setString(newvalue);
  }

  /**
  * Get value of field EIBPRG as a String.
  */
  public String getEIBPRG()
  {
    return fieldEIBPRG.getString();
  }

  /**
  * Set field EIBUSR using a String value.
  */
  public void setEIBUSR(String newvalue)
  {
    fieldEIBUSR.setString(newvalue);
  }

  /**
  * Get value of field EIBUSR as a String.
  */
  public String getEIBUSR()
  {
    return fieldEIBUSR.getString();
  }

  /**
  * Set field EIBJOB using a String value.
  */
  public void setEIBJOB(String newvalue)
  {
    fieldEIBJOB.setString(newvalue);
  }

  /**
  * Get value of field EIBJOB as a String.
  */
  public String getEIBJOB()
  {
    return fieldEIBJOB.getString();
  }

  /**
  * Set field EIBFMT using a String value.
  */
  public void setEIBFMT(String newvalue)
  {
    fieldEIBFMT.setString(newvalue);
  }

  /**
  * Get value of field EIBFMT as a String.
  */
  public String getEIBFMT()
  {
    return fieldEIBFMT.getString();
  }

  /**
  * Set field EIBTRTE using a String value.
  */
  public void setEIBTRTE(String newvalue)
  {
    fieldEIBTRTE.setString(newvalue);
  }

  /**
  * Get value of field EIBTRTE as a String.
  */
  public String getEIBTRTE()
  {
    return fieldEIBTRTE.getString();
  }

  /**
  * Set numeric field EIBTRTE using a BigDecimal value.
  */
  public void setEIBTRTE(BigDecimal newvalue)
  {
    fieldEIBTRTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EIBTRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalEIBTRTE()
  {
    return fieldEIBTRTE.getBigDecimal();
  }

  /**
  * Set field EIBTMDO using a String value.
  */
  public void setEIBTMDO(String newvalue)
  {
    fieldEIBTMDO.setString(newvalue);
  }

  /**
  * Get value of field EIBTMDO as a String.
  */
  public String getEIBTMDO()
  {
    return fieldEIBTMDO.getString();
  }

  /**
  * Set field EIBTTIM1 using a String value.
  */
  public void setEIBTTIM1(String newvalue)
  {
    fieldEIBTTIM1.setString(newvalue);
  }

  /**
  * Get value of field EIBTTIM1 as a String.
  */
  public String getEIBTTIM1()
  {
    return fieldEIBTTIM1.getString();
  }

  /**
  * Set numeric field EIBTTIM1 using a BigDecimal value.
  */
  public void setEIBTTIM1(BigDecimal newvalue)
  {
    fieldEIBTTIM1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EIBTTIM1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalEIBTTIM1()
  {
    return fieldEIBTTIM1.getBigDecimal();
  }

  /**
  * Set field EIBENV using a String value.
  */
  public void setEIBENV(String newvalue)
  {
    fieldEIBENV.setString(newvalue);
  }

  /**
  * Get value of field EIBENV as a String.
  */
  public String getEIBENV()
  {
    return fieldEIBENV.getString();
  }

}
