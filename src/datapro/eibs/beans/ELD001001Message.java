package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELD001001 physical file definition.
* 
* File level identifier is 1050505163700.
* Record format level identifier is 37B2BA9315193.
*/

public class ELD001001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01LDECUN",
                                     "E01LDEACC",
                                     "E01CUSNA1",
                                     "E01LDESEQ",
                                     "E01LDEBDY",
                                     "E01LDEBDM",
                                     "E01LDETPY",
                                     "E01LDERM1",
                                     "E01LDERM2",
                                     "E01LDERM3",
                                     "E01LDERM4"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01LDECUN",
                                   "E01LDEACC",
                                   "E01CUSNA1",
                                   "E01LDESEQ",
                                   "E01LDEBDY",
                                   "E01LDEBDM",
                                   "E01LDETPY",
                                   "E01LDERM1",
                                   "E01LDERM2",
                                   "E01LDERM3",
                                   "E01LDERM4"
                                 };
  final static String fid = "1050505163700";
  final static String rid = "37B2BA9315193";
  final static String fmtname = "ELD001001";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01LDECUN = null;
  private DecimalField fieldE01LDEACC = null;
  private CharacterField fieldE01CUSNA1 = null;
  private DecimalField fieldE01LDESEQ = null;
  private DecimalField fieldE01LDEBDY = null;
  private DecimalField fieldE01LDEBDM = null;
  private CharacterField fieldE01LDETPY = null;
  private CharacterField fieldE01LDERM1 = null;
  private CharacterField fieldE01LDERM2 = null;
  private CharacterField fieldE01LDERM3 = null;
  private CharacterField fieldE01LDERM4 = null;

  /**
  * Constructor for ELD001001Message.
  */
  public ELD001001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 291;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01LDECUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01LDECUN");
    fields[10] = fieldE01LDEACC =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "E01LDEACC");
    fields[11] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 65, 45, "E01CUSNA1");
    fields[12] = fieldE01LDESEQ =
    new DecimalField(message, HEADERSIZE + 110, 3, 0, "E01LDESEQ");
    fields[13] = fieldE01LDEBDY =
    new DecimalField(message, HEADERSIZE + 113, 5, 0, "E01LDEBDY");
    fields[14] = fieldE01LDEBDM =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "E01LDEBDM");
    fields[15] = fieldE01LDETPY =
    new CharacterField(message, HEADERSIZE + 121, 30, "E01LDETPY");
    fields[16] = fieldE01LDERM1 =
    new CharacterField(message, HEADERSIZE + 151, 35, "E01LDERM1");
    fields[17] = fieldE01LDERM2 =
    new CharacterField(message, HEADERSIZE + 186, 35, "E01LDERM2");
    fields[18] = fieldE01LDERM3 =
    new CharacterField(message, HEADERSIZE + 221, 35, "E01LDERM3");
    fields[19] = fieldE01LDERM4 =
    new CharacterField(message, HEADERSIZE + 256, 35, "E01LDERM4");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01LDECUN using a String value.
  */
  public void setE01LDECUN(String newvalue)
  {
    fieldE01LDECUN.setString(newvalue);
  }

  /**
  * Get value of field E01LDECUN as a String.
  */
  public String getE01LDECUN()
  {
    return fieldE01LDECUN.getString();
  }

  /**
  * Set numeric field E01LDECUN using a BigDecimal value.
  */
  public void setE01LDECUN(BigDecimal newvalue)
  {
    fieldE01LDECUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LDECUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LDECUN()
  {
    return fieldE01LDECUN.getBigDecimal();
  }

  /**
  * Set field E01LDEACC using a String value.
  */
  public void setE01LDEACC(String newvalue)
  {
    fieldE01LDEACC.setString(newvalue);
  }

  /**
  * Get value of field E01LDEACC as a String.
  */
  public String getE01LDEACC()
  {
    return fieldE01LDEACC.getString();
  }

  /**
  * Set numeric field E01LDEACC using a BigDecimal value.
  */
  public void setE01LDEACC(BigDecimal newvalue)
  {
    fieldE01LDEACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LDEACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LDEACC()
  {
    return fieldE01LDEACC.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01LDESEQ using a String value.
  */
  public void setE01LDESEQ(String newvalue)
  {
    fieldE01LDESEQ.setString(newvalue);
  }

  /**
  * Get value of field E01LDESEQ as a String.
  */
  public String getE01LDESEQ()
  {
    return fieldE01LDESEQ.getString();
  }

  /**
  * Set numeric field E01LDESEQ using a BigDecimal value.
  */
  public void setE01LDESEQ(BigDecimal newvalue)
  {
    fieldE01LDESEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LDESEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LDESEQ()
  {
    return fieldE01LDESEQ.getBigDecimal();
  }

  /**
  * Set field E01LDEBDY using a String value.
  */
  public void setE01LDEBDY(String newvalue)
  {
    fieldE01LDEBDY.setString(newvalue);
  }

  /**
  * Get value of field E01LDEBDY as a String.
  */
  public String getE01LDEBDY()
  {
    return fieldE01LDEBDY.getString();
  }

  /**
  * Set numeric field E01LDEBDY using a BigDecimal value.
  */
  public void setE01LDEBDY(BigDecimal newvalue)
  {
    fieldE01LDEBDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LDEBDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LDEBDY()
  {
    return fieldE01LDEBDY.getBigDecimal();
  }

  /**
  * Set field E01LDEBDM using a String value.
  */
  public void setE01LDEBDM(String newvalue)
  {
    fieldE01LDEBDM.setString(newvalue);
  }

  /**
  * Get value of field E01LDEBDM as a String.
  */
  public String getE01LDEBDM()
  {
    return fieldE01LDEBDM.getString();
  }

  /**
  * Set numeric field E01LDEBDM using a BigDecimal value.
  */
  public void setE01LDEBDM(BigDecimal newvalue)
  {
    fieldE01LDEBDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LDEBDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LDEBDM()
  {
    return fieldE01LDEBDM.getBigDecimal();
  }

  /**
  * Set field E01LDETPY using a String value.
  */
  public void setE01LDETPY(String newvalue)
  {
    fieldE01LDETPY.setString(newvalue);
  }

  /**
  * Get value of field E01LDETPY as a String.
  */
  public String getE01LDETPY()
  {
    return fieldE01LDETPY.getString();
  }

  /**
  * Set field E01LDERM1 using a String value.
  */
  public void setE01LDERM1(String newvalue)
  {
    fieldE01LDERM1.setString(newvalue);
  }

  /**
  * Get value of field E01LDERM1 as a String.
  */
  public String getE01LDERM1()
  {
    return fieldE01LDERM1.getString();
  }

  /**
  * Set field E01LDERM2 using a String value.
  */
  public void setE01LDERM2(String newvalue)
  {
    fieldE01LDERM2.setString(newvalue);
  }

  /**
  * Get value of field E01LDERM2 as a String.
  */
  public String getE01LDERM2()
  {
    return fieldE01LDERM2.getString();
  }

  /**
  * Set field E01LDERM3 using a String value.
  */
  public void setE01LDERM3(String newvalue)
  {
    fieldE01LDERM3.setString(newvalue);
  }

  /**
  * Get value of field E01LDERM3 as a String.
  */
  public String getE01LDERM3()
  {
    return fieldE01LDERM3.getString();
  }

  /**
  * Set field E01LDERM4 using a String value.
  */
  public void setE01LDERM4(String newvalue)
  {
    fieldE01LDERM4.setString(newvalue);
  }

  /**
  * Get value of field E01LDERM4 as a String.
  */
  public String getE01LDERM4()
  {
    return fieldE01LDERM4.getString();
  }

}
