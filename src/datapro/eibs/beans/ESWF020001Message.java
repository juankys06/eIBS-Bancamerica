package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESWF020001 physical file definition.
* 
* File level identifier is 1030130205322.
* Record format level identifier is 5585918FEF82B.
*/

public class ESWF020001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "ESW1USR",
                                     "ESW1SWI",
                                     "ESW1REF",
                                     "ESW1FTM",
                                     "ESW1DT1",
                                     "ESW1DT2",
                                     "ESW1DT3",
                                     "ESW1REC",
                                     "ESW1OPE",
                                     "ESW1LIN",
                                     "ESW1F01"
                                   };
  final static String tnames[] = {
                                   "ESW1USR",
                                   "ESW1SWI",
                                   "ESW1REF",
                                   "ESW1FTM",
                                   "ESW1DT1",
                                   "ESW1DT2",
                                   "ESW1DT3",
                                   "ESW1REC",
                                   "ESW1OPE",
                                   "ESW1LIN",
                                   "ESW1F01"
                                 };
  final static String fid = "1030130205322";
  final static String rid = "5585918FEF82B";
  final static String fmtname = "ESWF020001";
  final int FIELDCOUNT = 11;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldESW1USR = null;
  private CharacterField fieldESW1SWI = null;
  private CharacterField fieldESW1REF = null;
  private DecimalField fieldESW1FTM = null;
  private DecimalField fieldESW1DT1 = null;
  private DecimalField fieldESW1DT2 = null;
  private DecimalField fieldESW1DT3 = null;
  private DecimalField fieldESW1REC = null;
  private CharacterField fieldESW1OPE = null;
  private DecimalField fieldESW1LIN = null;
  private CharacterField fieldESW1F01 = null;

  /**
  * Constructor for ESWF020001Message.
  */
  public ESWF020001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 145;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldESW1USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "ESW1USR");
    fields[1] = fieldESW1SWI =
    new CharacterField(message, HEADERSIZE + 10, 12, "ESW1SWI");
    fields[2] = fieldESW1REF =
    new CharacterField(message, HEADERSIZE + 22, 16, "ESW1REF");
    fields[3] = fieldESW1FTM =
    new DecimalField(message, HEADERSIZE + 38, 4, 0, "ESW1FTM");
    fields[4] = fieldESW1DT1 =
    new DecimalField(message, HEADERSIZE + 42, 3, 0, "ESW1DT1");
    fields[5] = fieldESW1DT2 =
    new DecimalField(message, HEADERSIZE + 45, 3, 0, "ESW1DT2");
    fields[6] = fieldESW1DT3 =
    new DecimalField(message, HEADERSIZE + 48, 3, 0, "ESW1DT3");
    fields[7] = fieldESW1REC =
    new DecimalField(message, HEADERSIZE + 51, 8, 0, "ESW1REC");
    fields[8] = fieldESW1OPE =
    new CharacterField(message, HEADERSIZE + 59, 1, "ESW1OPE");
    fields[9] = fieldESW1LIN =
    new DecimalField(message, HEADERSIZE + 60, 5, 0, "ESW1LIN");
    fields[10] = fieldESW1F01 =
    new CharacterField(message, HEADERSIZE + 65, 80, "ESW1F01");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field ESW1USR using a String value.
  */
  public void setESW1USR(String newvalue)
  {
    fieldESW1USR.setString(newvalue);
  }

  /**
  * Get value of field ESW1USR as a String.
  */
  public String getESW1USR()
  {
    return fieldESW1USR.getString();
  }

  /**
  * Set field ESW1SWI using a String value.
  */
  public void setESW1SWI(String newvalue)
  {
    fieldESW1SWI.setString(newvalue);
  }

  /**
  * Get value of field ESW1SWI as a String.
  */
  public String getESW1SWI()
  {
    return fieldESW1SWI.getString();
  }

  /**
  * Set field ESW1REF using a String value.
  */
  public void setESW1REF(String newvalue)
  {
    fieldESW1REF.setString(newvalue);
  }

  /**
  * Get value of field ESW1REF as a String.
  */
  public String getESW1REF()
  {
    return fieldESW1REF.getString();
  }

  /**
  * Set field ESW1FTM using a String value.
  */
  public void setESW1FTM(String newvalue)
  {
    fieldESW1FTM.setString(newvalue);
  }

  /**
  * Get value of field ESW1FTM as a String.
  */
  public String getESW1FTM()
  {
    return fieldESW1FTM.getString();
  }

  /**
  * Set numeric field ESW1FTM using a BigDecimal value.
  */
  public void setESW1FTM(BigDecimal newvalue)
  {
    fieldESW1FTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW1FTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW1FTM()
  {
    return fieldESW1FTM.getBigDecimal();
  }

  /**
  * Set field ESW1DT1 using a String value.
  */
  public void setESW1DT1(String newvalue)
  {
    fieldESW1DT1.setString(newvalue);
  }

  /**
  * Get value of field ESW1DT1 as a String.
  */
  public String getESW1DT1()
  {
    return fieldESW1DT1.getString();
  }

  /**
  * Set numeric field ESW1DT1 using a BigDecimal value.
  */
  public void setESW1DT1(BigDecimal newvalue)
  {
    fieldESW1DT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW1DT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW1DT1()
  {
    return fieldESW1DT1.getBigDecimal();
  }

  /**
  * Set field ESW1DT2 using a String value.
  */
  public void setESW1DT2(String newvalue)
  {
    fieldESW1DT2.setString(newvalue);
  }

  /**
  * Get value of field ESW1DT2 as a String.
  */
  public String getESW1DT2()
  {
    return fieldESW1DT2.getString();
  }

  /**
  * Set numeric field ESW1DT2 using a BigDecimal value.
  */
  public void setESW1DT2(BigDecimal newvalue)
  {
    fieldESW1DT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW1DT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW1DT2()
  {
    return fieldESW1DT2.getBigDecimal();
  }

  /**
  * Set field ESW1DT3 using a String value.
  */
  public void setESW1DT3(String newvalue)
  {
    fieldESW1DT3.setString(newvalue);
  }

  /**
  * Get value of field ESW1DT3 as a String.
  */
  public String getESW1DT3()
  {
    return fieldESW1DT3.getString();
  }

  /**
  * Set numeric field ESW1DT3 using a BigDecimal value.
  */
  public void setESW1DT3(BigDecimal newvalue)
  {
    fieldESW1DT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW1DT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW1DT3()
  {
    return fieldESW1DT3.getBigDecimal();
  }

  /**
  * Set field ESW1REC using a String value.
  */
  public void setESW1REC(String newvalue)
  {
    fieldESW1REC.setString(newvalue);
  }

  /**
  * Get value of field ESW1REC as a String.
  */
  public String getESW1REC()
  {
    return fieldESW1REC.getString();
  }

  /**
  * Set numeric field ESW1REC using a BigDecimal value.
  */
  public void setESW1REC(BigDecimal newvalue)
  {
    fieldESW1REC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW1REC as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW1REC()
  {
    return fieldESW1REC.getBigDecimal();
  }

  /**
  * Set field ESW1OPE using a String value.
  */
  public void setESW1OPE(String newvalue)
  {
    fieldESW1OPE.setString(newvalue);
  }

  /**
  * Get value of field ESW1OPE as a String.
  */
  public String getESW1OPE()
  {
    return fieldESW1OPE.getString();
  }

  /**
  * Set field ESW1LIN using a String value.
  */
  public void setESW1LIN(String newvalue)
  {
    fieldESW1LIN.setString(newvalue);
  }

  /**
  * Get value of field ESW1LIN as a String.
  */
  public String getESW1LIN()
  {
    return fieldESW1LIN.getString();
  }

  /**
  * Set numeric field ESW1LIN using a BigDecimal value.
  */
  public void setESW1LIN(BigDecimal newvalue)
  {
    fieldESW1LIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW1LIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW1LIN()
  {
    return fieldESW1LIN.getBigDecimal();
  }

  /**
  * Set field ESW1F01 using a String value.
  */
  public void setESW1F01(String newvalue)
  {
    fieldESW1F01.setString(newvalue);
  }

  /**
  * Get value of field ESW1F01 as a String.
  */
  public String getESW1F01()
  {
    return fieldESW1F01.getString();
  }

}
