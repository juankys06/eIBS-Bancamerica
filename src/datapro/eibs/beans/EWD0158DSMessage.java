package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0158DS physical file definition.
* 
* File level identifier is 1030121192029.
* Record format level identifier is 485668C48199E.
*/

public class EWD0158DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDCDE",
                                     "EWDCTY",
                                     "EWDRUT",
                                     "EWDDES",
                                     "EWDFIM",
                                     "EWDFID",
                                     "EWDFIA",
                                     "EWDFVM",
                                     "EWDFVD",
                                     "EWDFVA",
                                     "EWDSTA",
                                     "EWDUSR",
                                     "EWDFUM",
                                     "EWDFUD",
                                     "EWDFUA",
                                     "EWDOFC",
                                     "EWDBRN",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDCDE",
                                   "EWDCTY",
                                   "EWDRUT",
                                   "EWDDES",
                                   "EWDFIM",
                                   "EWDFID",
                                   "EWDFIA",
                                   "EWDFVM",
                                   "EWDFVD",
                                   "EWDFVA",
                                   "EWDSTA",
                                   "EWDUSR",
                                   "EWDFUM",
                                   "EWDFUD",
                                   "EWDFUA",
                                   "EWDOFC",
                                   "EWDBRN",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192029";
  final static String rid = "485668C48199E";
  final static String fmtname = "EWD0158DS";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDCDE = null;
  private CharacterField fieldEWDCTY = null;
  private CharacterField fieldEWDRUT = null;
  private CharacterField fieldEWDDES = null;
  private DecimalField fieldEWDFIM = null;
  private DecimalField fieldEWDFID = null;
  private DecimalField fieldEWDFIA = null;
  private DecimalField fieldEWDFVM = null;
  private DecimalField fieldEWDFVD = null;
  private DecimalField fieldEWDFVA = null;
  private CharacterField fieldEWDSTA = null;
  private CharacterField fieldEWDUSR = null;
  private DecimalField fieldEWDFUM = null;
  private DecimalField fieldEWDFUD = null;
  private DecimalField fieldEWDFUA = null;
  private CharacterField fieldEWDOFC = null;
  private DecimalField fieldEWDBRN = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0158DSMessage.
  */
  public EWD0158DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 166;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDCDE =
    new CharacterField(message, HEADERSIZE + 0, 4, "EWDCDE");
    fields[1] = fieldEWDCTY =
    new CharacterField(message, HEADERSIZE + 4, 4, "EWDCTY");
    fields[2] = fieldEWDRUT =
    new CharacterField(message, HEADERSIZE + 8, 15, "EWDRUT");
    fields[3] = fieldEWDDES =
    new CharacterField(message, HEADERSIZE + 23, 90, "EWDDES");
    fields[4] = fieldEWDFIM =
    new DecimalField(message, HEADERSIZE + 113, 3, 0, "EWDFIM");
    fields[5] = fieldEWDFID =
    new DecimalField(message, HEADERSIZE + 116, 3, 0, "EWDFID");
    fields[6] = fieldEWDFIA =
    new DecimalField(message, HEADERSIZE + 119, 5, 0, "EWDFIA");
    fields[7] = fieldEWDFVM =
    new DecimalField(message, HEADERSIZE + 124, 3, 0, "EWDFVM");
    fields[8] = fieldEWDFVD =
    new DecimalField(message, HEADERSIZE + 127, 3, 0, "EWDFVD");
    fields[9] = fieldEWDFVA =
    new DecimalField(message, HEADERSIZE + 130, 5, 0, "EWDFVA");
    fields[10] = fieldEWDSTA =
    new CharacterField(message, HEADERSIZE + 135, 1, "EWDSTA");
    fields[11] = fieldEWDUSR =
    new CharacterField(message, HEADERSIZE + 136, 10, "EWDUSR");
    fields[12] = fieldEWDFUM =
    new DecimalField(message, HEADERSIZE + 146, 3, 0, "EWDFUM");
    fields[13] = fieldEWDFUD =
    new DecimalField(message, HEADERSIZE + 149, 3, 0, "EWDFUD");
    fields[14] = fieldEWDFUA =
    new DecimalField(message, HEADERSIZE + 152, 5, 0, "EWDFUA");
    fields[15] = fieldEWDOFC =
    new CharacterField(message, HEADERSIZE + 157, 4, "EWDOFC");
    fields[16] = fieldEWDBRN =
    new DecimalField(message, HEADERSIZE + 161, 4, 0, "EWDBRN");
    fields[17] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 165, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDCDE using a String value.
  */
  public void setEWDCDE(String newvalue)
  {
    fieldEWDCDE.setString(newvalue);
  }

  /**
  * Get value of field EWDCDE as a String.
  */
  public String getEWDCDE()
  {
    return fieldEWDCDE.getString();
  }

  /**
  * Set field EWDCTY using a String value.
  */
  public void setEWDCTY(String newvalue)
  {
    fieldEWDCTY.setString(newvalue);
  }

  /**
  * Get value of field EWDCTY as a String.
  */
  public String getEWDCTY()
  {
    return fieldEWDCTY.getString();
  }

  /**
  * Set field EWDRUT using a String value.
  */
  public void setEWDRUT(String newvalue)
  {
    fieldEWDRUT.setString(newvalue);
  }

  /**
  * Get value of field EWDRUT as a String.
  */
  public String getEWDRUT()
  {
    return fieldEWDRUT.getString();
  }

  /**
  * Set field EWDDES using a String value.
  */
  public void setEWDDES(String newvalue)
  {
    fieldEWDDES.setString(newvalue);
  }

  /**
  * Get value of field EWDDES as a String.
  */
  public String getEWDDES()
  {
    return fieldEWDDES.getString();
  }

  /**
  * Set field EWDFIM using a String value.
  */
  public void setEWDFIM(String newvalue)
  {
    fieldEWDFIM.setString(newvalue);
  }

  /**
  * Get value of field EWDFIM as a String.
  */
  public String getEWDFIM()
  {
    return fieldEWDFIM.getString();
  }

  /**
  * Set numeric field EWDFIM using a BigDecimal value.
  */
  public void setEWDFIM(BigDecimal newvalue)
  {
    fieldEWDFIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFIM()
  {
    return fieldEWDFIM.getBigDecimal();
  }

  /**
  * Set field EWDFID using a String value.
  */
  public void setEWDFID(String newvalue)
  {
    fieldEWDFID.setString(newvalue);
  }

  /**
  * Get value of field EWDFID as a String.
  */
  public String getEWDFID()
  {
    return fieldEWDFID.getString();
  }

  /**
  * Set numeric field EWDFID using a BigDecimal value.
  */
  public void setEWDFID(BigDecimal newvalue)
  {
    fieldEWDFID.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFID as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFID()
  {
    return fieldEWDFID.getBigDecimal();
  }

  /**
  * Set field EWDFIA using a String value.
  */
  public void setEWDFIA(String newvalue)
  {
    fieldEWDFIA.setString(newvalue);
  }

  /**
  * Get value of field EWDFIA as a String.
  */
  public String getEWDFIA()
  {
    return fieldEWDFIA.getString();
  }

  /**
  * Set numeric field EWDFIA using a BigDecimal value.
  */
  public void setEWDFIA(BigDecimal newvalue)
  {
    fieldEWDFIA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFIA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFIA()
  {
    return fieldEWDFIA.getBigDecimal();
  }

  /**
  * Set field EWDFVM using a String value.
  */
  public void setEWDFVM(String newvalue)
  {
    fieldEWDFVM.setString(newvalue);
  }

  /**
  * Get value of field EWDFVM as a String.
  */
  public String getEWDFVM()
  {
    return fieldEWDFVM.getString();
  }

  /**
  * Set numeric field EWDFVM using a BigDecimal value.
  */
  public void setEWDFVM(BigDecimal newvalue)
  {
    fieldEWDFVM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFVM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFVM()
  {
    return fieldEWDFVM.getBigDecimal();
  }

  /**
  * Set field EWDFVD using a String value.
  */
  public void setEWDFVD(String newvalue)
  {
    fieldEWDFVD.setString(newvalue);
  }

  /**
  * Get value of field EWDFVD as a String.
  */
  public String getEWDFVD()
  {
    return fieldEWDFVD.getString();
  }

  /**
  * Set numeric field EWDFVD using a BigDecimal value.
  */
  public void setEWDFVD(BigDecimal newvalue)
  {
    fieldEWDFVD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFVD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFVD()
  {
    return fieldEWDFVD.getBigDecimal();
  }

  /**
  * Set field EWDFVA using a String value.
  */
  public void setEWDFVA(String newvalue)
  {
    fieldEWDFVA.setString(newvalue);
  }

  /**
  * Get value of field EWDFVA as a String.
  */
  public String getEWDFVA()
  {
    return fieldEWDFVA.getString();
  }

  /**
  * Set numeric field EWDFVA using a BigDecimal value.
  */
  public void setEWDFVA(BigDecimal newvalue)
  {
    fieldEWDFVA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFVA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFVA()
  {
    return fieldEWDFVA.getBigDecimal();
  }

  /**
  * Set field EWDSTA using a String value.
  */
  public void setEWDSTA(String newvalue)
  {
    fieldEWDSTA.setString(newvalue);
  }

  /**
  * Get value of field EWDSTA as a String.
  */
  public String getEWDSTA()
  {
    return fieldEWDSTA.getString();
  }

  /**
  * Set field EWDUSR using a String value.
  */
  public void setEWDUSR(String newvalue)
  {
    fieldEWDUSR.setString(newvalue);
  }

  /**
  * Get value of field EWDUSR as a String.
  */
  public String getEWDUSR()
  {
    return fieldEWDUSR.getString();
  }

  /**
  * Set field EWDFUM using a String value.
  */
  public void setEWDFUM(String newvalue)
  {
    fieldEWDFUM.setString(newvalue);
  }

  /**
  * Get value of field EWDFUM as a String.
  */
  public String getEWDFUM()
  {
    return fieldEWDFUM.getString();
  }

  /**
  * Set numeric field EWDFUM using a BigDecimal value.
  */
  public void setEWDFUM(BigDecimal newvalue)
  {
    fieldEWDFUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFUM()
  {
    return fieldEWDFUM.getBigDecimal();
  }

  /**
  * Set field EWDFUD using a String value.
  */
  public void setEWDFUD(String newvalue)
  {
    fieldEWDFUD.setString(newvalue);
  }

  /**
  * Get value of field EWDFUD as a String.
  */
  public String getEWDFUD()
  {
    return fieldEWDFUD.getString();
  }

  /**
  * Set numeric field EWDFUD using a BigDecimal value.
  */
  public void setEWDFUD(BigDecimal newvalue)
  {
    fieldEWDFUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFUD()
  {
    return fieldEWDFUD.getBigDecimal();
  }

  /**
  * Set field EWDFUA using a String value.
  */
  public void setEWDFUA(String newvalue)
  {
    fieldEWDFUA.setString(newvalue);
  }

  /**
  * Get value of field EWDFUA as a String.
  */
  public String getEWDFUA()
  {
    return fieldEWDFUA.getString();
  }

  /**
  * Set numeric field EWDFUA using a BigDecimal value.
  */
  public void setEWDFUA(BigDecimal newvalue)
  {
    fieldEWDFUA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFUA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFUA()
  {
    return fieldEWDFUA.getBigDecimal();
  }

  /**
  * Set field EWDOFC using a String value.
  */
  public void setEWDOFC(String newvalue)
  {
    fieldEWDOFC.setString(newvalue);
  }

  /**
  * Get value of field EWDOFC as a String.
  */
  public String getEWDOFC()
  {
    return fieldEWDOFC.getString();
  }

  /**
  * Set field EWDBRN using a String value.
  */
  public void setEWDBRN(String newvalue)
  {
    fieldEWDBRN.setString(newvalue);
  }

  /**
  * Get value of field EWDBRN as a String.
  */
  public String getEWDBRN()
  {
    return fieldEWDBRN.getString();
  }

  /**
  * Set numeric field EWDBRN using a BigDecimal value.
  */
  public void setEWDBRN(BigDecimal newvalue)
  {
    fieldEWDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDBRN()
  {
    return fieldEWDBRN.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
