package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0702DS physical file definition.
* 
* File level identifier is 1100512123327.
* Record format level identifier is 63E8508A1B741.
*/

public class EWD0702DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDBAN",
                                     "EWDLOC",
                                     "EWDSUC",
                                     "EWDCCY",
                                     "EWDNOM",
                                     "EWDNDI",
                                     "EWDLEX",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDBAN",
                                   "EWDLOC",
                                   "EWDSUC",
                                   "EWDCCY",
                                   "EWDNOM",
                                   "EWDNDI",
                                   "EWDLEX",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1100512123327";
  final static String rid = "63E8508A1B741";
  final static String fmtname = "EWD0702DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDBAN = null;
  private CharacterField fieldEWDLOC = null;
  private CharacterField fieldEWDSUC = null;
  private CharacterField fieldEWDCCY = null;
  private CharacterField fieldEWDNOM = null;
  private DecimalField fieldEWDNDI = null;
  private CharacterField fieldEWDLEX = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0702DSMessage.
  */
  public EWD0702DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 63;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDBAN =
    new CharacterField(message, HEADERSIZE + 0, 4, "EWDBAN");
    fields[1] = fieldEWDLOC =
    new CharacterField(message, HEADERSIZE + 4, 4, "EWDLOC");
    fields[2] = fieldEWDSUC =
    new CharacterField(message, HEADERSIZE + 8, 4, "EWDSUC");
    fields[3] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 12, 3, "EWDCCY");
    fields[4] = fieldEWDNOM =
    new CharacterField(message, HEADERSIZE + 15, 35, "EWDNOM");
    fields[5] = fieldEWDNDI =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "EWDNDI");
    fields[6] = fieldEWDLEX =
    new CharacterField(message, HEADERSIZE + 53, 1, "EWDLEX");
    fields[7] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 54, 8, 0, "EWDREC");
    fields[8] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 62, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDBAN using a String value.
  */
  public void setEWDBAN(String newvalue)
  {
    fieldEWDBAN.setString(newvalue);
  }

  /**
  * Get value of field EWDBAN as a String.
  */
  public String getEWDBAN()
  {
    return fieldEWDBAN.getString();
  }

  /**
  * Set field EWDLOC using a String value.
  */
  public void setEWDLOC(String newvalue)
  {
    fieldEWDLOC.setString(newvalue);
  }

  /**
  * Get value of field EWDLOC as a String.
  */
  public String getEWDLOC()
  {
    return fieldEWDLOC.getString();
  }

  /**
  * Set field EWDSUC using a String value.
  */
  public void setEWDSUC(String newvalue)
  {
    fieldEWDSUC.setString(newvalue);
  }

  /**
  * Get value of field EWDSUC as a String.
  */
  public String getEWDSUC()
  {
    return fieldEWDSUC.getString();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDNOM using a String value.
  */
  public void setEWDNOM(String newvalue)
  {
    fieldEWDNOM.setString(newvalue);
  }

  /**
  * Get value of field EWDNOM as a String.
  */
  public String getEWDNOM()
  {
    return fieldEWDNOM.getString();
  }

  /**
  * Set field EWDNDI using a String value.
  */
  public void setEWDNDI(String newvalue)
  {
    fieldEWDNDI.setString(newvalue);
  }

  /**
  * Get value of field EWDNDI as a String.
  */
  public String getEWDNDI()
  {
    return fieldEWDNDI.getString();
  }

  /**
  * Set numeric field EWDNDI using a BigDecimal value.
  */
  public void setEWDNDI(BigDecimal newvalue)
  {
    fieldEWDNDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDNDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDNDI()
  {
    return fieldEWDNDI.getBigDecimal();
  }

  /**
  * Set field EWDLEX using a String value.
  */
  public void setEWDLEX(String newvalue)
  {
    fieldEWDLEX.setString(newvalue);
  }

  /**
  * Get value of field EWDLEX as a String.
  */
  public String getEWDLEX()
  {
    return fieldEWDLEX.getString();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
