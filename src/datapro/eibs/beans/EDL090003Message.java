package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL090003 physical file definition.
* 
* File level identifier is 1030121191914.
* Record format level identifier is 44A492A962045.
*/

public class EDL090003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03DLPACC",
                                     "E03DLPPNU",
                                     "E03DLPPD1",
                                     "E03DLPPD2",
                                     "E03DLPPD3",
                                     "E03DLPPRN",
                                     "E03DLPINT",
                                     "E03DLPTOT",
                                     "E03DLPBAL",
                                     "E03DLPSTS",
                                     "E03DLPVEN",
                                     "E03ENDFLD"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03DLPACC",
                                   "E03DLPPNU",
                                   "E03DLPPD1",
                                   "E03DLPPD2",
                                   "E03DLPPD3",
                                   "E03DLPPRN",
                                   "E03DLPINT",
                                   "E03DLPTOT",
                                   "E03DLPBAL",
                                   "E03DLPSTS",
                                   "E03DLPVEN",
                                   "E03ENDFLD"
                                 };
  final static String fid = "1030121191914";
  final static String rid = "44A492A962045";
  final static String fmtname = "EDL090003";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03DLPACC = null;
  private DecimalField fieldE03DLPPNU = null;
  private DecimalField fieldE03DLPPD1 = null;
  private DecimalField fieldE03DLPPD2 = null;
  private DecimalField fieldE03DLPPD3 = null;
  private DecimalField fieldE03DLPPRN = null;
  private DecimalField fieldE03DLPINT = null;
  private DecimalField fieldE03DLPTOT = null;
  private DecimalField fieldE03DLPBAL = null;
  private CharacterField fieldE03DLPSTS = null;
  private DecimalField fieldE03DLPVEN = null;
  private CharacterField fieldE03ENDFLD = null;

  /**
  * Constructor for EDL090003Message.
  */
  public EDL090003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 151;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03DLPACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E03DLPACC");
    fields[10] = fieldE03DLPPNU =
    new DecimalField(message, HEADERSIZE + 55, 4, 0, "E03DLPPNU");
    fields[11] = fieldE03DLPPD1 =
    new DecimalField(message, HEADERSIZE + 59, 3, 0, "E03DLPPD1");
    fields[12] = fieldE03DLPPD2 =
    new DecimalField(message, HEADERSIZE + 62, 3, 0, "E03DLPPD2");
    fields[13] = fieldE03DLPPD3 =
    new DecimalField(message, HEADERSIZE + 65, 3, 0, "E03DLPPD3");
    fields[14] = fieldE03DLPPRN =
    new DecimalField(message, HEADERSIZE + 68, 19, 4, "E03DLPPRN");
    fields[15] = fieldE03DLPINT =
    new DecimalField(message, HEADERSIZE + 87, 19, 4, "E03DLPINT");
    fields[16] = fieldE03DLPTOT =
    new DecimalField(message, HEADERSIZE + 106, 19, 4, "E03DLPTOT");
    fields[17] = fieldE03DLPBAL =
    new DecimalField(message, HEADERSIZE + 125, 19, 4, "E03DLPBAL");
    fields[18] = fieldE03DLPSTS =
    new CharacterField(message, HEADERSIZE + 144, 1, "E03DLPSTS");
    fields[19] = fieldE03DLPVEN =
    new DecimalField(message, HEADERSIZE + 145, 5, 0, "E03DLPVEN");
    fields[20] = fieldE03ENDFLD =
    new CharacterField(message, HEADERSIZE + 150, 1, "E03ENDFLD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03DLPACC using a String value.
  */
  public void setE03DLPACC(String newvalue)
  {
    fieldE03DLPACC.setString(newvalue);
  }

  /**
  * Get value of field E03DLPACC as a String.
  */
  public String getE03DLPACC()
  {
    return fieldE03DLPACC.getString();
  }

  /**
  * Set numeric field E03DLPACC using a BigDecimal value.
  */
  public void setE03DLPACC(BigDecimal newvalue)
  {
    fieldE03DLPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPACC()
  {
    return fieldE03DLPACC.getBigDecimal();
  }

  /**
  * Set field E03DLPPNU using a String value.
  */
  public void setE03DLPPNU(String newvalue)
  {
    fieldE03DLPPNU.setString(newvalue);
  }

  /**
  * Get value of field E03DLPPNU as a String.
  */
  public String getE03DLPPNU()
  {
    return fieldE03DLPPNU.getString();
  }

  /**
  * Set numeric field E03DLPPNU using a BigDecimal value.
  */
  public void setE03DLPPNU(BigDecimal newvalue)
  {
    fieldE03DLPPNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPPNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPPNU()
  {
    return fieldE03DLPPNU.getBigDecimal();
  }

  /**
  * Set field E03DLPPD1 using a String value.
  */
  public void setE03DLPPD1(String newvalue)
  {
    fieldE03DLPPD1.setString(newvalue);
  }

  /**
  * Get value of field E03DLPPD1 as a String.
  */
  public String getE03DLPPD1()
  {
    return fieldE03DLPPD1.getString();
  }

  /**
  * Set numeric field E03DLPPD1 using a BigDecimal value.
  */
  public void setE03DLPPD1(BigDecimal newvalue)
  {
    fieldE03DLPPD1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPPD1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPPD1()
  {
    return fieldE03DLPPD1.getBigDecimal();
  }

  /**
  * Set field E03DLPPD2 using a String value.
  */
  public void setE03DLPPD2(String newvalue)
  {
    fieldE03DLPPD2.setString(newvalue);
  }

  /**
  * Get value of field E03DLPPD2 as a String.
  */
  public String getE03DLPPD2()
  {
    return fieldE03DLPPD2.getString();
  }

  /**
  * Set numeric field E03DLPPD2 using a BigDecimal value.
  */
  public void setE03DLPPD2(BigDecimal newvalue)
  {
    fieldE03DLPPD2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPPD2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPPD2()
  {
    return fieldE03DLPPD2.getBigDecimal();
  }

  /**
  * Set field E03DLPPD3 using a String value.
  */
  public void setE03DLPPD3(String newvalue)
  {
    fieldE03DLPPD3.setString(newvalue);
  }

  /**
  * Get value of field E03DLPPD3 as a String.
  */
  public String getE03DLPPD3()
  {
    return fieldE03DLPPD3.getString();
  }

  /**
  * Set numeric field E03DLPPD3 using a BigDecimal value.
  */
  public void setE03DLPPD3(BigDecimal newvalue)
  {
    fieldE03DLPPD3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPPD3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPPD3()
  {
    return fieldE03DLPPD3.getBigDecimal();
  }

  /**
  * Set field E03DLPPRN using a String value.
  */
  public void setE03DLPPRN(String newvalue)
  {
    fieldE03DLPPRN.setString(newvalue);
  }

  /**
  * Get value of field E03DLPPRN as a String.
  */
  public String getE03DLPPRN()
  {
    return fieldE03DLPPRN.getString();
  }

  /**
  * Set numeric field E03DLPPRN using a BigDecimal value.
  */
  public void setE03DLPPRN(BigDecimal newvalue)
  {
    fieldE03DLPPRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPPRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPPRN()
  {
    return fieldE03DLPPRN.getBigDecimal();
  }

  /**
  * Set field E03DLPINT using a String value.
  */
  public void setE03DLPINT(String newvalue)
  {
    fieldE03DLPINT.setString(newvalue);
  }

  /**
  * Get value of field E03DLPINT as a String.
  */
  public String getE03DLPINT()
  {
    return fieldE03DLPINT.getString();
  }

  /**
  * Set numeric field E03DLPINT using a BigDecimal value.
  */
  public void setE03DLPINT(BigDecimal newvalue)
  {
    fieldE03DLPINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPINT()
  {
    return fieldE03DLPINT.getBigDecimal();
  }

  /**
  * Set field E03DLPTOT using a String value.
  */
  public void setE03DLPTOT(String newvalue)
  {
    fieldE03DLPTOT.setString(newvalue);
  }

  /**
  * Get value of field E03DLPTOT as a String.
  */
  public String getE03DLPTOT()
  {
    return fieldE03DLPTOT.getString();
  }

  /**
  * Set numeric field E03DLPTOT using a BigDecimal value.
  */
  public void setE03DLPTOT(BigDecimal newvalue)
  {
    fieldE03DLPTOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPTOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPTOT()
  {
    return fieldE03DLPTOT.getBigDecimal();
  }

  /**
  * Set field E03DLPBAL using a String value.
  */
  public void setE03DLPBAL(String newvalue)
  {
    fieldE03DLPBAL.setString(newvalue);
  }

  /**
  * Get value of field E03DLPBAL as a String.
  */
  public String getE03DLPBAL()
  {
    return fieldE03DLPBAL.getString();
  }

  /**
  * Set numeric field E03DLPBAL using a BigDecimal value.
  */
  public void setE03DLPBAL(BigDecimal newvalue)
  {
    fieldE03DLPBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPBAL()
  {
    return fieldE03DLPBAL.getBigDecimal();
  }

  /**
  * Set field E03DLPSTS using a String value.
  */
  public void setE03DLPSTS(String newvalue)
  {
    fieldE03DLPSTS.setString(newvalue);
  }

  /**
  * Get value of field E03DLPSTS as a String.
  */
  public String getE03DLPSTS()
  {
    return fieldE03DLPSTS.getString();
  }

  /**
  * Set field E03DLPVEN using a String value.
  */
  public void setE03DLPVEN(String newvalue)
  {
    fieldE03DLPVEN.setString(newvalue);
  }

  /**
  * Get value of field E03DLPVEN as a String.
  */
  public String getE03DLPVEN()
  {
    return fieldE03DLPVEN.getString();
  }

  /**
  * Set numeric field E03DLPVEN using a BigDecimal value.
  */
  public void setE03DLPVEN(BigDecimal newvalue)
  {
    fieldE03DLPVEN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLPVEN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLPVEN()
  {
    return fieldE03DLPVEN.getBigDecimal();
  }

  /**
  * Set field E03ENDFLD using a String value.
  */
  public void setE03ENDFLD(String newvalue)
  {
    fieldE03ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E03ENDFLD as a String.
  */
  public String getE03ENDFLD()
  {
    return fieldE03ENDFLD.getString();
  }

}
