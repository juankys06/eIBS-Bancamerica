package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0405DS physical file definition.
* 
* File level identifier is 1070921122925.
* Record format level identifier is 3F26B8BC65739.
*/

public class EWD0405DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSBK",
                                     "EWDSBR",
                                     "EWDSCY",
                                     "EWDSGL",
                                     "EWDSCA",
                                     "EWDSTY",
                                     "EWDBNK",
                                     "EWDBRN",
                                     "EWDCCY",
                                     "EWDGLN",
                                     "EWDACC",
                                     "EWDDSC",
                                     "EWDCLS",
                                     "EWDATY",
                                     "EWDACD",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSBK",
                                   "EWDSBR",
                                   "EWDSCY",
                                   "EWDSGL",
                                   "EWDSCA",
                                   "EWDSTY",
                                   "EWDBNK",
                                   "EWDBRN",
                                   "EWDCCY",
                                   "EWDGLN",
                                   "EWDACC",
                                   "EWDDSC",
                                   "EWDCLS",
                                   "EWDATY",
                                   "EWDACD",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1070921122925";
  final static String rid = "3F26B8BC65739";
  final static String fmtname = "EWD0405DS";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSBK = null;
  private DecimalField fieldEWDSBR = null;
  private CharacterField fieldEWDSCY = null;
  private DecimalField fieldEWDSGL = null;
  private CharacterField fieldEWDSCA = null;
  private CharacterField fieldEWDSTY = null;
  private CharacterField fieldEWDBNK = null;
  private DecimalField fieldEWDBRN = null;
  private CharacterField fieldEWDCCY = null;
  private DecimalField fieldEWDGLN = null;
  private DecimalField fieldEWDACC = null;
  private CharacterField fieldEWDDSC = null;
  private DecimalField fieldEWDCLS = null;
  private CharacterField fieldEWDATY = null;
  private CharacterField fieldEWDACD = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0405DSMessage.
  */
  public EWD0405DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 124;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSBK =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDSBK");
    fields[1] = fieldEWDSBR =
    new DecimalField(message, HEADERSIZE + 2, 4, 0, "EWDSBR");
    fields[2] = fieldEWDSCY =
    new CharacterField(message, HEADERSIZE + 6, 3, "EWDSCY");
    fields[3] = fieldEWDSGL =
    new DecimalField(message, HEADERSIZE + 9, 17, 0, "EWDSGL");
    fields[4] = fieldEWDSCA =
    new CharacterField(message, HEADERSIZE + 26, 2, "EWDSCA");
    fields[5] = fieldEWDSTY =
    new CharacterField(message, HEADERSIZE + 28, 4, "EWDSTY");
    fields[6] = fieldEWDBNK =
    new CharacterField(message, HEADERSIZE + 32, 2, "EWDBNK");
    fields[7] = fieldEWDBRN =
    new DecimalField(message, HEADERSIZE + 34, 4, 0, "EWDBRN");
    fields[8] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 38, 3, "EWDCCY");
    fields[9] = fieldEWDGLN =
    new DecimalField(message, HEADERSIZE + 41, 17, 0, "EWDGLN");
    fields[10] = fieldEWDACC =
    new DecimalField(message, HEADERSIZE + 58, 13, 0, "EWDACC");
    fields[11] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 71, 35, "EWDDSC");
    fields[12] = fieldEWDCLS =
    new DecimalField(message, HEADERSIZE + 106, 3, 0, "EWDCLS");
    fields[13] = fieldEWDATY =
    new CharacterField(message, HEADERSIZE + 109, 4, "EWDATY");
    fields[14] = fieldEWDACD =
    new CharacterField(message, HEADERSIZE + 113, 2, "EWDACD");
    fields[15] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 115, 8, 0, "EWDREC");
    fields[16] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 123, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSBK using a String value.
  */
  public void setEWDSBK(String newvalue)
  {
    fieldEWDSBK.setString(newvalue);
  }

  /**
  * Get value of field EWDSBK as a String.
  */
  public String getEWDSBK()
  {
    return fieldEWDSBK.getString();
  }

  /**
  * Set field EWDSBR using a String value.
  */
  public void setEWDSBR(String newvalue)
  {
    fieldEWDSBR.setString(newvalue);
  }

  /**
  * Get value of field EWDSBR as a String.
  */
  public String getEWDSBR()
  {
    return fieldEWDSBR.getString();
  }

  /**
  * Set numeric field EWDSBR using a BigDecimal value.
  */
  public void setEWDSBR(BigDecimal newvalue)
  {
    fieldEWDSBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDSBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDSBR()
  {
    return fieldEWDSBR.getBigDecimal();
  }

  /**
  * Set field EWDSCY using a String value.
  */
  public void setEWDSCY(String newvalue)
  {
    fieldEWDSCY.setString(newvalue);
  }

  /**
  * Get value of field EWDSCY as a String.
  */
  public String getEWDSCY()
  {
    return fieldEWDSCY.getString();
  }

  /**
  * Set field EWDSGL using a String value.
  */
  public void setEWDSGL(String newvalue)
  {
    fieldEWDSGL.setString(newvalue);
  }

  /**
  * Get value of field EWDSGL as a String.
  */
  public String getEWDSGL()
  {
    return fieldEWDSGL.getString();
  }

  /**
  * Set numeric field EWDSGL using a BigDecimal value.
  */
  public void setEWDSGL(BigDecimal newvalue)
  {
    fieldEWDSGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDSGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDSGL()
  {
    return fieldEWDSGL.getBigDecimal();
  }

  /**
  * Set field EWDSCA using a String value.
  */
  public void setEWDSCA(String newvalue)
  {
    fieldEWDSCA.setString(newvalue);
  }

  /**
  * Get value of field EWDSCA as a String.
  */
  public String getEWDSCA()
  {
    return fieldEWDSCA.getString();
  }

  /**
  * Set field EWDSTY using a String value.
  */
  public void setEWDSTY(String newvalue)
  {
    fieldEWDSTY.setString(newvalue);
  }

  /**
  * Get value of field EWDSTY as a String.
  */
  public String getEWDSTY()
  {
    return fieldEWDSTY.getString();
  }

  /**
  * Set field EWDBNK using a String value.
  */
  public void setEWDBNK(String newvalue)
  {
    fieldEWDBNK.setString(newvalue);
  }

  /**
  * Get value of field EWDBNK as a String.
  */
  public String getEWDBNK()
  {
    return fieldEWDBNK.getString();
  }

  /**
  * Set field EWDBRN using a String value.
  */
  public void setEWDBRN(String newvalue)
  {
    fieldEWDBRN.setString(newvalue);
  }

  /**
  * Get value of field EWDBRN as a String.
  */
  public String getEWDBRN()
  {
    return fieldEWDBRN.getString();
  }

  /**
  * Set numeric field EWDBRN using a BigDecimal value.
  */
  public void setEWDBRN(BigDecimal newvalue)
  {
    fieldEWDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDBRN()
  {
    return fieldEWDBRN.getBigDecimal();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDGLN using a String value.
  */
  public void setEWDGLN(String newvalue)
  {
    fieldEWDGLN.setString(newvalue);
  }

  /**
  * Get value of field EWDGLN as a String.
  */
  public String getEWDGLN()
  {
    return fieldEWDGLN.getString();
  }

  /**
  * Set numeric field EWDGLN using a BigDecimal value.
  */
  public void setEWDGLN(BigDecimal newvalue)
  {
    fieldEWDGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDGLN()
  {
    return fieldEWDGLN.getBigDecimal();
  }

  /**
  * Set field EWDACC using a String value.
  */
  public void setEWDACC(String newvalue)
  {
    fieldEWDACC.setString(newvalue);
  }

  /**
  * Get value of field EWDACC as a String.
  */
  public String getEWDACC()
  {
    return fieldEWDACC.getString();
  }

  /**
  * Set numeric field EWDACC using a BigDecimal value.
  */
  public void setEWDACC(BigDecimal newvalue)
  {
    fieldEWDACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDACC()
  {
    return fieldEWDACC.getBigDecimal();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDCLS using a String value.
  */
  public void setEWDCLS(String newvalue)
  {
    fieldEWDCLS.setString(newvalue);
  }

  /**
  * Get value of field EWDCLS as a String.
  */
  public String getEWDCLS()
  {
    return fieldEWDCLS.getString();
  }

  /**
  * Set numeric field EWDCLS using a BigDecimal value.
  */
  public void setEWDCLS(BigDecimal newvalue)
  {
    fieldEWDCLS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCLS as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCLS()
  {
    return fieldEWDCLS.getBigDecimal();
  }

  /**
  * Set field EWDATY using a String value.
  */
  public void setEWDATY(String newvalue)
  {
    fieldEWDATY.setString(newvalue);
  }

  /**
  * Get value of field EWDATY as a String.
  */
  public String getEWDATY()
  {
    return fieldEWDATY.getString();
  }

  /**
  * Set field EWDACD using a String value.
  */
  public void setEWDACD(String newvalue)
  {
    fieldEWDACD.setString(newvalue);
  }

  /**
  * Get value of field EWDACD as a String.
  */
  public String getEWDACD()
  {
    return fieldEWDACD.getString();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
