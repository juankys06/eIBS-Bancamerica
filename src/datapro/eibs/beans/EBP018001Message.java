package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EBP018001 physical file definition.
* 
* File level identifier is 1100503132508.
* Record format level identifier is 3688E5BB0CC18.
*/

public class EBP018001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01BPABNK",
                                     "E01BPAAMT",
                                     "E01BPADAD",
                                     "E01BPABTH",
                                     "E01BPATCD",
                                     "E01BPAGLA",
                                     "E01BPAGLR",
                                     "E01BPAGLG",
                                     "E01BPAGLC",
                                     "E01BPAFTY",
                                     "E01BPAGLP",
                                     "E01BPAGLS",
                                     "E01BPAGLW",
                                     "E01BPAPOW",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01BPABNK",
                                   "E01BPAAMT",
                                   "E01BPADAD",
                                   "E01BPABTH",
                                   "E01BPATCD",
                                   "E01BPAGLA",
                                   "E01BPAGLR",
                                   "E01BPAGLG",
                                   "E01BPAGLC",
                                   "E01BPAFTY",
                                   "E01BPAGLP",
                                   "E01BPAGLS",
                                   "E01BPAGLW",
                                   "E01BPAPOW",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1100503132508";
  final static String rid = "3688E5BB0CC18";
  final static String fmtname = "EBP018001";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01BPABNK = null;
  private DecimalField fieldE01BPAAMT = null;
  private DecimalField fieldE01BPADAD = null;
  private DecimalField fieldE01BPABTH = null;
  private CharacterField fieldE01BPATCD = null;
  private DecimalField fieldE01BPAGLA = null;
  private DecimalField fieldE01BPAGLR = null;
  private DecimalField fieldE01BPAGLG = null;
  private DecimalField fieldE01BPAGLC = null;
  private CharacterField fieldE01BPAFTY = null;
  private DecimalField fieldE01BPAGLP = null;
  private DecimalField fieldE01BPAGLS = null;
  private DecimalField fieldE01BPAGLW = null;
  private DecimalField fieldE01BPAPOW = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EBP018001Message.
  */
  public EBP018001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 208;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01BPABNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01BPABNK");
    fields[10] = fieldE01BPAAMT =
    new DecimalField(message, HEADERSIZE + 44, 17, 2, "E01BPAAMT");
    fields[11] = fieldE01BPADAD =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "E01BPADAD");
    fields[12] = fieldE01BPABTH =
    new DecimalField(message, HEADERSIZE + 64, 5, 0, "E01BPABTH");
    fields[13] = fieldE01BPATCD =
    new CharacterField(message, HEADERSIZE + 69, 2, "E01BPATCD");
    fields[14] = fieldE01BPAGLA =
    new DecimalField(message, HEADERSIZE + 71, 17, 0, "E01BPAGLA");
    fields[15] = fieldE01BPAGLR =
    new DecimalField(message, HEADERSIZE + 88, 17, 0, "E01BPAGLR");
    fields[16] = fieldE01BPAGLG =
    new DecimalField(message, HEADERSIZE + 105, 17, 0, "E01BPAGLG");
    fields[17] = fieldE01BPAGLC =
    new DecimalField(message, HEADERSIZE + 122, 17, 0, "E01BPAGLC");
    fields[18] = fieldE01BPAFTY =
    new CharacterField(message, HEADERSIZE + 139, 1, "E01BPAFTY");
    fields[19] = fieldE01BPAGLP =
    new DecimalField(message, HEADERSIZE + 140, 17, 0, "E01BPAGLP");
    fields[20] = fieldE01BPAGLS =
    new DecimalField(message, HEADERSIZE + 157, 17, 0, "E01BPAGLS");
    fields[21] = fieldE01BPAGLW =
    new DecimalField(message, HEADERSIZE + 174, 17, 0, "E01BPAGLW");
    fields[22] = fieldE01BPAPOW =
    new DecimalField(message, HEADERSIZE + 191, 7, 2, "E01BPAPOW");
    fields[23] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 198, 1, "E01ACT");
    fields[24] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 199, 8, 0, "E01NUMREC");
    fields[25] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 207, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01BPABNK using a String value.
  */
  public void setE01BPABNK(String newvalue)
  {
    fieldE01BPABNK.setString(newvalue);
  }

  /**
  * Get value of field E01BPABNK as a String.
  */
  public String getE01BPABNK()
  {
    return fieldE01BPABNK.getString();
  }

  /**
  * Set field E01BPAAMT using a String value.
  */
  public void setE01BPAAMT(String newvalue)
  {
    fieldE01BPAAMT.setString(newvalue);
  }

  /**
  * Get value of field E01BPAAMT as a String.
  */
  public String getE01BPAAMT()
  {
    return fieldE01BPAAMT.getString();
  }

  /**
  * Set numeric field E01BPAAMT using a BigDecimal value.
  */
  public void setE01BPAAMT(BigDecimal newvalue)
  {
    fieldE01BPAAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAAMT()
  {
    return fieldE01BPAAMT.getBigDecimal();
  }

  /**
  * Set field E01BPADAD using a String value.
  */
  public void setE01BPADAD(String newvalue)
  {
    fieldE01BPADAD.setString(newvalue);
  }

  /**
  * Get value of field E01BPADAD as a String.
  */
  public String getE01BPADAD()
  {
    return fieldE01BPADAD.getString();
  }

  /**
  * Set numeric field E01BPADAD using a BigDecimal value.
  */
  public void setE01BPADAD(BigDecimal newvalue)
  {
    fieldE01BPADAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPADAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPADAD()
  {
    return fieldE01BPADAD.getBigDecimal();
  }

  /**
  * Set field E01BPABTH using a String value.
  */
  public void setE01BPABTH(String newvalue)
  {
    fieldE01BPABTH.setString(newvalue);
  }

  /**
  * Get value of field E01BPABTH as a String.
  */
  public String getE01BPABTH()
  {
    return fieldE01BPABTH.getString();
  }

  /**
  * Set numeric field E01BPABTH using a BigDecimal value.
  */
  public void setE01BPABTH(BigDecimal newvalue)
  {
    fieldE01BPABTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPABTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPABTH()
  {
    return fieldE01BPABTH.getBigDecimal();
  }

  /**
  * Set field E01BPATCD using a String value.
  */
  public void setE01BPATCD(String newvalue)
  {
    fieldE01BPATCD.setString(newvalue);
  }

  /**
  * Get value of field E01BPATCD as a String.
  */
  public String getE01BPATCD()
  {
    return fieldE01BPATCD.getString();
  }

  /**
  * Set field E01BPAGLA using a String value.
  */
  public void setE01BPAGLA(String newvalue)
  {
    fieldE01BPAGLA.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLA as a String.
  */
  public String getE01BPAGLA()
  {
    return fieldE01BPAGLA.getString();
  }

  /**
  * Set numeric field E01BPAGLA using a BigDecimal value.
  */
  public void setE01BPAGLA(BigDecimal newvalue)
  {
    fieldE01BPAGLA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLA()
  {
    return fieldE01BPAGLA.getBigDecimal();
  }

  /**
  * Set field E01BPAGLR using a String value.
  */
  public void setE01BPAGLR(String newvalue)
  {
    fieldE01BPAGLR.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLR as a String.
  */
  public String getE01BPAGLR()
  {
    return fieldE01BPAGLR.getString();
  }

  /**
  * Set numeric field E01BPAGLR using a BigDecimal value.
  */
  public void setE01BPAGLR(BigDecimal newvalue)
  {
    fieldE01BPAGLR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLR()
  {
    return fieldE01BPAGLR.getBigDecimal();
  }

  /**
  * Set field E01BPAGLG using a String value.
  */
  public void setE01BPAGLG(String newvalue)
  {
    fieldE01BPAGLG.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLG as a String.
  */
  public String getE01BPAGLG()
  {
    return fieldE01BPAGLG.getString();
  }

  /**
  * Set numeric field E01BPAGLG using a BigDecimal value.
  */
  public void setE01BPAGLG(BigDecimal newvalue)
  {
    fieldE01BPAGLG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLG()
  {
    return fieldE01BPAGLG.getBigDecimal();
  }

  /**
  * Set field E01BPAGLC using a String value.
  */
  public void setE01BPAGLC(String newvalue)
  {
    fieldE01BPAGLC.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLC as a String.
  */
  public String getE01BPAGLC()
  {
    return fieldE01BPAGLC.getString();
  }

  /**
  * Set numeric field E01BPAGLC using a BigDecimal value.
  */
  public void setE01BPAGLC(BigDecimal newvalue)
  {
    fieldE01BPAGLC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLC()
  {
    return fieldE01BPAGLC.getBigDecimal();
  }

  /**
  * Set field E01BPAFTY using a String value.
  */
  public void setE01BPAFTY(String newvalue)
  {
    fieldE01BPAFTY.setString(newvalue);
  }

  /**
  * Get value of field E01BPAFTY as a String.
  */
  public String getE01BPAFTY()
  {
    return fieldE01BPAFTY.getString();
  }

  /**
  * Set field E01BPAGLP using a String value.
  */
  public void setE01BPAGLP(String newvalue)
  {
    fieldE01BPAGLP.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLP as a String.
  */
  public String getE01BPAGLP()
  {
    return fieldE01BPAGLP.getString();
  }

  /**
  * Set numeric field E01BPAGLP using a BigDecimal value.
  */
  public void setE01BPAGLP(BigDecimal newvalue)
  {
    fieldE01BPAGLP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLP()
  {
    return fieldE01BPAGLP.getBigDecimal();
  }

  /**
  * Set field E01BPAGLS using a String value.
  */
  public void setE01BPAGLS(String newvalue)
  {
    fieldE01BPAGLS.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLS as a String.
  */
  public String getE01BPAGLS()
  {
    return fieldE01BPAGLS.getString();
  }

  /**
  * Set numeric field E01BPAGLS using a BigDecimal value.
  */
  public void setE01BPAGLS(BigDecimal newvalue)
  {
    fieldE01BPAGLS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLS()
  {
    return fieldE01BPAGLS.getBigDecimal();
  }

  /**
  * Set field E01BPAGLW using a String value.
  */
  public void setE01BPAGLW(String newvalue)
  {
    fieldE01BPAGLW.setString(newvalue);
  }

  /**
  * Get value of field E01BPAGLW as a String.
  */
  public String getE01BPAGLW()
  {
    return fieldE01BPAGLW.getString();
  }

  /**
  * Set numeric field E01BPAGLW using a BigDecimal value.
  */
  public void setE01BPAGLW(BigDecimal newvalue)
  {
    fieldE01BPAGLW.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAGLW as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAGLW()
  {
    return fieldE01BPAGLW.getBigDecimal();
  }

  /**
  * Set field E01BPAPOW using a String value.
  */
  public void setE01BPAPOW(String newvalue)
  {
    fieldE01BPAPOW.setString(newvalue);
  }

  /**
  * Get value of field E01BPAPOW as a String.
  */
  public String getE01BPAPOW()
  {
    return fieldE01BPAPOW.getString();
  }

  /**
  * Set numeric field E01BPAPOW using a BigDecimal value.
  */
  public void setE01BPAPOW(BigDecimal newvalue)
  {
    fieldE01BPAPOW.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPAPOW as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPAPOW()
  {
    return fieldE01BPAPOW.getBigDecimal();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
