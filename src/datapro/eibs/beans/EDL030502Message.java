package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL030502 physical file definition.
* 
* File level identifier is 1030121191907.
* Record format level identifier is 3DBDBE5C3A647.
*/

public class EDL030502Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02PRIACC",
                                     "E02RELACC",
                                     "E02RELACD",
                                     "E02RELNME",
                                     "E02RELSTS",
                                     "E02RELMA1",
                                     "E02RELMA2",
                                     "E02RELMA3",
                                     "E02RELPRI",
                                     "E02RELINT",
                                     "E02RELRTE",
                                     "E02RELTYP",
                                     "E02ENDFLD"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02PRIACC",
                                   "E02RELACC",
                                   "E02RELACD",
                                   "E02RELNME",
                                   "E02RELSTS",
                                   "E02RELMA1",
                                   "E02RELMA2",
                                   "E02RELMA3",
                                   "E02RELPRI",
                                   "E02RELINT",
                                   "E02RELRTE",
                                   "E02RELTYP",
                                   "E02ENDFLD"
                                 };
  final static String fid = "1030121191907";
  final static String rid = "3DBDBE5C3A647";
  final static String fmtname = "EDL030502";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02PRIACC = null;
  private DecimalField fieldE02RELACC = null;
  private CharacterField fieldE02RELACD = null;
  private CharacterField fieldE02RELNME = null;
  private CharacterField fieldE02RELSTS = null;
  private DecimalField fieldE02RELMA1 = null;
  private DecimalField fieldE02RELMA2 = null;
  private DecimalField fieldE02RELMA3 = null;
  private DecimalField fieldE02RELPRI = null;
  private DecimalField fieldE02RELINT = null;
  private DecimalField fieldE02RELRTE = null;
  private CharacterField fieldE02RELTYP = null;
  private CharacterField fieldE02ENDFLD = null;

  /**
  * Constructor for EDL030502Message.
  */
  public EDL030502Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 172;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02PRIACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02PRIACC");
    fields[10] = fieldE02RELACC =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E02RELACC");
    fields[11] = fieldE02RELACD =
    new CharacterField(message, HEADERSIZE + 68, 2, "E02RELACD");
    fields[12] = fieldE02RELNME =
    new CharacterField(message, HEADERSIZE + 70, 45, "E02RELNME");
    fields[13] = fieldE02RELSTS =
    new CharacterField(message, HEADERSIZE + 115, 1, "E02RELSTS");
    fields[14] = fieldE02RELMA1 =
    new DecimalField(message, HEADERSIZE + 116, 3, 0, "E02RELMA1");
    fields[15] = fieldE02RELMA2 =
    new DecimalField(message, HEADERSIZE + 119, 3, 0, "E02RELMA2");
    fields[16] = fieldE02RELMA3 =
    new DecimalField(message, HEADERSIZE + 122, 3, 0, "E02RELMA3");
    fields[17] = fieldE02RELPRI =
    new DecimalField(message, HEADERSIZE + 125, 17, 2, "E02RELPRI");
    fields[18] = fieldE02RELINT =
    new DecimalField(message, HEADERSIZE + 142, 17, 2, "E02RELINT");
    fields[19] = fieldE02RELRTE =
    new DecimalField(message, HEADERSIZE + 159, 11, 6, "E02RELRTE");
    fields[20] = fieldE02RELTYP =
    new CharacterField(message, HEADERSIZE + 170, 1, "E02RELTYP");
    fields[21] = fieldE02ENDFLD =
    new CharacterField(message, HEADERSIZE + 171, 1, "E02ENDFLD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02PRIACC using a String value.
  */
  public void setE02PRIACC(String newvalue)
  {
    fieldE02PRIACC.setString(newvalue);
  }

  /**
  * Get value of field E02PRIACC as a String.
  */
  public String getE02PRIACC()
  {
    return fieldE02PRIACC.getString();
  }

  /**
  * Set numeric field E02PRIACC using a BigDecimal value.
  */
  public void setE02PRIACC(BigDecimal newvalue)
  {
    fieldE02PRIACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PRIACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PRIACC()
  {
    return fieldE02PRIACC.getBigDecimal();
  }

  /**
  * Set field E02RELACC using a String value.
  */
  public void setE02RELACC(String newvalue)
  {
    fieldE02RELACC.setString(newvalue);
  }

  /**
  * Get value of field E02RELACC as a String.
  */
  public String getE02RELACC()
  {
    return fieldE02RELACC.getString();
  }

  /**
  * Set numeric field E02RELACC using a BigDecimal value.
  */
  public void setE02RELACC(BigDecimal newvalue)
  {
    fieldE02RELACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELACC()
  {
    return fieldE02RELACC.getBigDecimal();
  }

  /**
  * Set field E02RELACD using a String value.
  */
  public void setE02RELACD(String newvalue)
  {
    fieldE02RELACD.setString(newvalue);
  }

  /**
  * Get value of field E02RELACD as a String.
  */
  public String getE02RELACD()
  {
    return fieldE02RELACD.getString();
  }

  /**
  * Set field E02RELNME using a String value.
  */
  public void setE02RELNME(String newvalue)
  {
    fieldE02RELNME.setString(newvalue);
  }

  /**
  * Get value of field E02RELNME as a String.
  */
  public String getE02RELNME()
  {
    return fieldE02RELNME.getString();
  }

  /**
  * Set field E02RELSTS using a String value.
  */
  public void setE02RELSTS(String newvalue)
  {
    fieldE02RELSTS.setString(newvalue);
  }

  /**
  * Get value of field E02RELSTS as a String.
  */
  public String getE02RELSTS()
  {
    return fieldE02RELSTS.getString();
  }

  /**
  * Set field E02RELMA1 using a String value.
  */
  public void setE02RELMA1(String newvalue)
  {
    fieldE02RELMA1.setString(newvalue);
  }

  /**
  * Get value of field E02RELMA1 as a String.
  */
  public String getE02RELMA1()
  {
    return fieldE02RELMA1.getString();
  }

  /**
  * Set numeric field E02RELMA1 using a BigDecimal value.
  */
  public void setE02RELMA1(BigDecimal newvalue)
  {
    fieldE02RELMA1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELMA1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELMA1()
  {
    return fieldE02RELMA1.getBigDecimal();
  }

  /**
  * Set field E02RELMA2 using a String value.
  */
  public void setE02RELMA2(String newvalue)
  {
    fieldE02RELMA2.setString(newvalue);
  }

  /**
  * Get value of field E02RELMA2 as a String.
  */
  public String getE02RELMA2()
  {
    return fieldE02RELMA2.getString();
  }

  /**
  * Set numeric field E02RELMA2 using a BigDecimal value.
  */
  public void setE02RELMA2(BigDecimal newvalue)
  {
    fieldE02RELMA2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELMA2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELMA2()
  {
    return fieldE02RELMA2.getBigDecimal();
  }

  /**
  * Set field E02RELMA3 using a String value.
  */
  public void setE02RELMA3(String newvalue)
  {
    fieldE02RELMA3.setString(newvalue);
  }

  /**
  * Get value of field E02RELMA3 as a String.
  */
  public String getE02RELMA3()
  {
    return fieldE02RELMA3.getString();
  }

  /**
  * Set numeric field E02RELMA3 using a BigDecimal value.
  */
  public void setE02RELMA3(BigDecimal newvalue)
  {
    fieldE02RELMA3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELMA3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELMA3()
  {
    return fieldE02RELMA3.getBigDecimal();
  }

  /**
  * Set field E02RELPRI using a String value.
  */
  public void setE02RELPRI(String newvalue)
  {
    fieldE02RELPRI.setString(newvalue);
  }

  /**
  * Get value of field E02RELPRI as a String.
  */
  public String getE02RELPRI()
  {
    return fieldE02RELPRI.getString();
  }

  /**
  * Set numeric field E02RELPRI using a BigDecimal value.
  */
  public void setE02RELPRI(BigDecimal newvalue)
  {
    fieldE02RELPRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELPRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELPRI()
  {
    return fieldE02RELPRI.getBigDecimal();
  }

  /**
  * Set field E02RELINT using a String value.
  */
  public void setE02RELINT(String newvalue)
  {
    fieldE02RELINT.setString(newvalue);
  }

  /**
  * Get value of field E02RELINT as a String.
  */
  public String getE02RELINT()
  {
    return fieldE02RELINT.getString();
  }

  /**
  * Set numeric field E02RELINT using a BigDecimal value.
  */
  public void setE02RELINT(BigDecimal newvalue)
  {
    fieldE02RELINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELINT()
  {
    return fieldE02RELINT.getBigDecimal();
  }

  /**
  * Set field E02RELRTE using a String value.
  */
  public void setE02RELRTE(String newvalue)
  {
    fieldE02RELRTE.setString(newvalue);
  }

  /**
  * Get value of field E02RELRTE as a String.
  */
  public String getE02RELRTE()
  {
    return fieldE02RELRTE.getString();
  }

  /**
  * Set numeric field E02RELRTE using a BigDecimal value.
  */
  public void setE02RELRTE(BigDecimal newvalue)
  {
    fieldE02RELRTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RELRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RELRTE()
  {
    return fieldE02RELRTE.getBigDecimal();
  }

  /**
  * Set field E02RELTYP using a String value.
  */
  public void setE02RELTYP(String newvalue)
  {
    fieldE02RELTYP.setString(newvalue);
  }

  /**
  * Get value of field E02RELTYP as a String.
  */
  public String getE02RELTYP()
  {
    return fieldE02RELTYP.getString();
  }

  /**
  * Set field E02ENDFLD using a String value.
  */
  public void setE02ENDFLD(String newvalue)
  {
    fieldE02ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E02ENDFLD as a String.
  */
  public String getE02ENDFLD()
  {
    return fieldE02ENDFLD.getString();
  }

}
