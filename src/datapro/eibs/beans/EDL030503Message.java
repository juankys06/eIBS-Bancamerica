package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL030503 physical file definition.
* 
* File level identifier is 1031104113346.
* Record format level identifier is 4E15F892D0AD1.
*/

public class EDL030503Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03DLIACC",
                                     "E03DLICDE",
                                     "E03DLITYP",
                                     "E03DEDNME",
                                     "E03DLIREF",
                                     "E03DLIRMK",
                                     "E03DLIDPM",
                                     "E03DLIFAC",
                                     "E03DLIPAM",
                                     "E03DLILTD",
                                     "E03DLIBNK",
                                     "E03DLIBRN",
                                     "E03DLICCY",
                                     "E03DLIGLN",
                                     "E03DLIIVA"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03DLIACC",
                                   "E03DLICDE",
                                   "E03DLITYP",
                                   "E03DEDNME",
                                   "E03DLIREF",
                                   "E03DLIRMK",
                                   "E03DLIDPM",
                                   "E03DLIFAC",
                                   "E03DLIPAM",
                                   "E03DLILTD",
                                   "E03DLIBNK",
                                   "E03DLIBRN",
                                   "E03DLICCY",
                                   "E03DLIGLN",
                                   "E03DLIIVA"
                                 };
  final static String fid = "1031104113346";
  final static String rid = "4E15F892D0AD1";
  final static String fmtname = "EDL030503";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03DLIACC = null;
  private CharacterField fieldE03DLICDE = null;
  private CharacterField fieldE03DLITYP = null;
  private CharacterField fieldE03DEDNME = null;
  private CharacterField fieldE03DLIREF = null;
  private CharacterField fieldE03DLIRMK = null;
  private DecimalField fieldE03DLIDPM = null;
  private CharacterField fieldE03DLIFAC = null;
  private DecimalField fieldE03DLIPAM = null;
  private DecimalField fieldE03DLILTD = null;
  private CharacterField fieldE03DLIBNK = null;
  private DecimalField fieldE03DLIBRN = null;
  private CharacterField fieldE03DLICCY = null;
  private DecimalField fieldE03DLIGLN = null;
  private CharacterField fieldE03DLIIVA = null;

  /**
  * Constructor for EDL030503Message.
  */
  public EDL030503Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 224;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03DLIACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E03DLIACC");
    fields[10] = fieldE03DLICDE =
    new CharacterField(message, HEADERSIZE + 55, 4, "E03DLICDE");
    fields[11] = fieldE03DLITYP =
    new CharacterField(message, HEADERSIZE + 59, 1, "E03DLITYP");
    fields[12] = fieldE03DEDNME =
    new CharacterField(message, HEADERSIZE + 60, 35, "E03DEDNME");
    fields[13] = fieldE03DLIREF =
    new CharacterField(message, HEADERSIZE + 95, 20, "E03DLIREF");
    fields[14] = fieldE03DLIRMK =
    new CharacterField(message, HEADERSIZE + 115, 30, "E03DLIRMK");
    fields[15] = fieldE03DLIDPM =
    new DecimalField(message, HEADERSIZE + 145, 17, 2, "E03DLIDPM");
    fields[16] = fieldE03DLIFAC =
    new CharacterField(message, HEADERSIZE + 162, 1, "E03DLIFAC");
    fields[17] = fieldE03DLIPAM =
    new DecimalField(message, HEADERSIZE + 163, 17, 2, "E03DLIPAM");
    fields[18] = fieldE03DLILTD =
    new DecimalField(message, HEADERSIZE + 180, 17, 2, "E03DLILTD");
    fields[19] = fieldE03DLIBNK =
    new CharacterField(message, HEADERSIZE + 197, 2, "E03DLIBNK");
    fields[20] = fieldE03DLIBRN =
    new DecimalField(message, HEADERSIZE + 199, 4, 0, "E03DLIBRN");
    fields[21] = fieldE03DLICCY =
    new CharacterField(message, HEADERSIZE + 203, 3, "E03DLICCY");
    fields[22] = fieldE03DLIGLN =
    new DecimalField(message, HEADERSIZE + 206, 17, 0, "E03DLIGLN");
    fields[23] = fieldE03DLIIVA =
    new CharacterField(message, HEADERSIZE + 223, 1, "E03DLIIVA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03DLIACC using a String value.
  */
  public void setE03DLIACC(String newvalue)
  {
    fieldE03DLIACC.setString(newvalue);
  }

  /**
  * Get value of field E03DLIACC as a String.
  */
  public String getE03DLIACC()
  {
    return fieldE03DLIACC.getString();
  }

  /**
  * Set numeric field E03DLIACC using a BigDecimal value.
  */
  public void setE03DLIACC(BigDecimal newvalue)
  {
    fieldE03DLIACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLIACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLIACC()
  {
    return fieldE03DLIACC.getBigDecimal();
  }

  /**
  * Set field E03DLICDE using a String value.
  */
  public void setE03DLICDE(String newvalue)
  {
    fieldE03DLICDE.setString(newvalue);
  }

  /**
  * Get value of field E03DLICDE as a String.
  */
  public String getE03DLICDE()
  {
    return fieldE03DLICDE.getString();
  }

  /**
  * Set field E03DLITYP using a String value.
  */
  public void setE03DLITYP(String newvalue)
  {
    fieldE03DLITYP.setString(newvalue);
  }

  /**
  * Get value of field E03DLITYP as a String.
  */
  public String getE03DLITYP()
  {
    return fieldE03DLITYP.getString();
  }

  /**
  * Set field E03DEDNME using a String value.
  */
  public void setE03DEDNME(String newvalue)
  {
    fieldE03DEDNME.setString(newvalue);
  }

  /**
  * Get value of field E03DEDNME as a String.
  */
  public String getE03DEDNME()
  {
    return fieldE03DEDNME.getString();
  }

  /**
  * Set field E03DLIREF using a String value.
  */
  public void setE03DLIREF(String newvalue)
  {
    fieldE03DLIREF.setString(newvalue);
  }

  /**
  * Get value of field E03DLIREF as a String.
  */
  public String getE03DLIREF()
  {
    return fieldE03DLIREF.getString();
  }

  /**
  * Set field E03DLIRMK using a String value.
  */
  public void setE03DLIRMK(String newvalue)
  {
    fieldE03DLIRMK.setString(newvalue);
  }

  /**
  * Get value of field E03DLIRMK as a String.
  */
  public String getE03DLIRMK()
  {
    return fieldE03DLIRMK.getString();
  }

  /**
  * Set field E03DLIDPM using a String value.
  */
  public void setE03DLIDPM(String newvalue)
  {
    fieldE03DLIDPM.setString(newvalue);
  }

  /**
  * Get value of field E03DLIDPM as a String.
  */
  public String getE03DLIDPM()
  {
    return fieldE03DLIDPM.getString();
  }

  /**
  * Set numeric field E03DLIDPM using a BigDecimal value.
  */
  public void setE03DLIDPM(BigDecimal newvalue)
  {
    fieldE03DLIDPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLIDPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLIDPM()
  {
    return fieldE03DLIDPM.getBigDecimal();
  }

  /**
  * Set field E03DLIFAC using a String value.
  */
  public void setE03DLIFAC(String newvalue)
  {
    fieldE03DLIFAC.setString(newvalue);
  }

  /**
  * Get value of field E03DLIFAC as a String.
  */
  public String getE03DLIFAC()
  {
    return fieldE03DLIFAC.getString();
  }

  /**
  * Set field E03DLIPAM using a String value.
  */
  public void setE03DLIPAM(String newvalue)
  {
    fieldE03DLIPAM.setString(newvalue);
  }

  /**
  * Get value of field E03DLIPAM as a String.
  */
  public String getE03DLIPAM()
  {
    return fieldE03DLIPAM.getString();
  }

  /**
  * Set numeric field E03DLIPAM using a BigDecimal value.
  */
  public void setE03DLIPAM(BigDecimal newvalue)
  {
    fieldE03DLIPAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLIPAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLIPAM()
  {
    return fieldE03DLIPAM.getBigDecimal();
  }

  /**
  * Set field E03DLILTD using a String value.
  */
  public void setE03DLILTD(String newvalue)
  {
    fieldE03DLILTD.setString(newvalue);
  }

  /**
  * Get value of field E03DLILTD as a String.
  */
  public String getE03DLILTD()
  {
    return fieldE03DLILTD.getString();
  }

  /**
  * Set numeric field E03DLILTD using a BigDecimal value.
  */
  public void setE03DLILTD(BigDecimal newvalue)
  {
    fieldE03DLILTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLILTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLILTD()
  {
    return fieldE03DLILTD.getBigDecimal();
  }

  /**
  * Set field E03DLIBNK using a String value.
  */
  public void setE03DLIBNK(String newvalue)
  {
    fieldE03DLIBNK.setString(newvalue);
  }

  /**
  * Get value of field E03DLIBNK as a String.
  */
  public String getE03DLIBNK()
  {
    return fieldE03DLIBNK.getString();
  }

  /**
  * Set field E03DLIBRN using a String value.
  */
  public void setE03DLIBRN(String newvalue)
  {
    fieldE03DLIBRN.setString(newvalue);
  }

  /**
  * Get value of field E03DLIBRN as a String.
  */
  public String getE03DLIBRN()
  {
    return fieldE03DLIBRN.getString();
  }

  /**
  * Set numeric field E03DLIBRN using a BigDecimal value.
  */
  public void setE03DLIBRN(BigDecimal newvalue)
  {
    fieldE03DLIBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLIBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLIBRN()
  {
    return fieldE03DLIBRN.getBigDecimal();
  }

  /**
  * Set field E03DLICCY using a String value.
  */
  public void setE03DLICCY(String newvalue)
  {
    fieldE03DLICCY.setString(newvalue);
  }

  /**
  * Get value of field E03DLICCY as a String.
  */
  public String getE03DLICCY()
  {
    return fieldE03DLICCY.getString();
  }

  /**
  * Set field E03DLIGLN using a String value.
  */
  public void setE03DLIGLN(String newvalue)
  {
    fieldE03DLIGLN.setString(newvalue);
  }

  /**
  * Get value of field E03DLIGLN as a String.
  */
  public String getE03DLIGLN()
  {
    return fieldE03DLIGLN.getString();
  }

  /**
  * Set numeric field E03DLIGLN using a BigDecimal value.
  */
  public void setE03DLIGLN(BigDecimal newvalue)
  {
    fieldE03DLIGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DLIGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DLIGLN()
  {
    return fieldE03DLIGLN.getBigDecimal();
  }

  /**
  * Set field E03DLIIVA using a String value.
  */
  public void setE03DLIIVA(String newvalue)
  {
    fieldE03DLIIVA.setString(newvalue);
  }

  /**
  * Get value of field E03DLIIVA as a String.
  */
  public String getE03DLIIVA()
  {
    return fieldE03DLIIVA.getString();
  }

}
