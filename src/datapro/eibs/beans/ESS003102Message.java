package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS003102 physical file definition.
* 
* File level identifier is 1030121192011.
* Record format level identifier is 38A8676576CC3.
*/

public class ESS003102Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USR",
                                     "H02PGM",
                                     "H02TIM",
                                     "H02SCR",
                                     "H02OPE",
                                     "H02MAS",
                                     "H02WK1",
                                     "H02WK2",
                                     "H02WK3",
                                     "E02ENV",
                                     "E02EODFLG",
                                     "E02SK1",
                                     "E02SK2",
                                     "E02SK3"
                                   };
  final static String tnames[] = {
                                   "H02USR",
                                   "H02PGM",
                                   "H02TIM",
                                   "H02SCR",
                                   "H02OPE",
                                   "H02MAS",
                                   "H02WK1",
                                   "H02WK2",
                                   "H02WK3",
                                   "E02ENV",
                                   "E02EODFLG",
                                   "E02SK1",
                                   "E02SK2",
                                   "E02SK3"
                                 };
  final static String fid = "1030121192011";
  final static String rid = "38A8676576CC3";
  final static String fmtname = "ESS003102";
  final int FIELDCOUNT = 14;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USR = null;
  private CharacterField fieldH02PGM = null;
  private CharacterField fieldH02TIM = null;
  private CharacterField fieldH02SCR = null;
  private CharacterField fieldH02OPE = null;
  private CharacterField fieldH02MAS = null;
  private CharacterField fieldH02WK1 = null;
  private CharacterField fieldH02WK2 = null;
  private CharacterField fieldH02WK3 = null;
  private CharacterField fieldE02ENV = null;
  private CharacterField fieldE02EODFLG = null;
  private CharacterField fieldE02SK1 = null;
  private CharacterField fieldE02SK2 = null;
  private CharacterField fieldE02SK3 = null;

  /**
  * Constructor for ESS003102Message.
  */
  public ESS003102Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 79;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USR");
    fields[1] = fieldH02PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PGM");
    fields[2] = fieldH02TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIM");
    fields[3] = fieldH02SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCR");
    fields[4] = fieldH02OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPE");
    fields[5] = fieldH02MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02MAS");
    fields[6] = fieldH02WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02WK1");
    fields[7] = fieldH02WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02WK2");
    fields[8] = fieldH02WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02WK3");
    fields[9] = fieldE02ENV =
    new CharacterField(message, HEADERSIZE + 42, 3, "E02ENV");
    fields[10] = fieldE02EODFLG =
    new CharacterField(message, HEADERSIZE + 45, 1, "E02EODFLG");
    fields[11] = fieldE02SK1 =
    new CharacterField(message, HEADERSIZE + 46, 11, "E02SK1");
    fields[12] = fieldE02SK2 =
    new CharacterField(message, HEADERSIZE + 57, 11, "E02SK2");
    fields[13] = fieldE02SK3 =
    new CharacterField(message, HEADERSIZE + 68, 11, "E02SK3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USR using a String value.
  */
  public void setH02USR(String newvalue)
  {
    fieldH02USR.setString(newvalue);
  }

  /**
  * Get value of field H02USR as a String.
  */
  public String getH02USR()
  {
    return fieldH02USR.getString();
  }

  /**
  * Set field H02PGM using a String value.
  */
  public void setH02PGM(String newvalue)
  {
    fieldH02PGM.setString(newvalue);
  }

  /**
  * Get value of field H02PGM as a String.
  */
  public String getH02PGM()
  {
    return fieldH02PGM.getString();
  }

  /**
  * Set field H02TIM using a String value.
  */
  public void setH02TIM(String newvalue)
  {
    fieldH02TIM.setString(newvalue);
  }

  /**
  * Get value of field H02TIM as a String.
  */
  public String getH02TIM()
  {
    return fieldH02TIM.getString();
  }

  /**
  * Set field H02SCR using a String value.
  */
  public void setH02SCR(String newvalue)
  {
    fieldH02SCR.setString(newvalue);
  }

  /**
  * Get value of field H02SCR as a String.
  */
  public String getH02SCR()
  {
    return fieldH02SCR.getString();
  }

  /**
  * Set field H02OPE using a String value.
  */
  public void setH02OPE(String newvalue)
  {
    fieldH02OPE.setString(newvalue);
  }

  /**
  * Get value of field H02OPE as a String.
  */
  public String getH02OPE()
  {
    return fieldH02OPE.getString();
  }

  /**
  * Set field H02MAS using a String value.
  */
  public void setH02MAS(String newvalue)
  {
    fieldH02MAS.setString(newvalue);
  }

  /**
  * Get value of field H02MAS as a String.
  */
  public String getH02MAS()
  {
    return fieldH02MAS.getString();
  }

  /**
  * Set field H02WK1 using a String value.
  */
  public void setH02WK1(String newvalue)
  {
    fieldH02WK1.setString(newvalue);
  }

  /**
  * Get value of field H02WK1 as a String.
  */
  public String getH02WK1()
  {
    return fieldH02WK1.getString();
  }

  /**
  * Set field H02WK2 using a String value.
  */
  public void setH02WK2(String newvalue)
  {
    fieldH02WK2.setString(newvalue);
  }

  /**
  * Get value of field H02WK2 as a String.
  */
  public String getH02WK2()
  {
    return fieldH02WK2.getString();
  }

  /**
  * Set field H02WK3 using a String value.
  */
  public void setH02WK3(String newvalue)
  {
    fieldH02WK3.setString(newvalue);
  }

  /**
  * Get value of field H02WK3 as a String.
  */
  public String getH02WK3()
  {
    return fieldH02WK3.getString();
  }

  /**
  * Set field E02ENV using a String value.
  */
  public void setE02ENV(String newvalue)
  {
    fieldE02ENV.setString(newvalue);
  }

  /**
  * Get value of field E02ENV as a String.
  */
  public String getE02ENV()
  {
    return fieldE02ENV.getString();
  }

  /**
  * Set field E02EODFLG using a String value.
  */
  public void setE02EODFLG(String newvalue)
  {
    fieldE02EODFLG.setString(newvalue);
  }

  /**
  * Get value of field E02EODFLG as a String.
  */
  public String getE02EODFLG()
  {
    return fieldE02EODFLG.getString();
  }

  /**
  * Set field E02SK1 using a String value.
  */
  public void setE02SK1(String newvalue)
  {
    fieldE02SK1.setString(newvalue);
  }

  /**
  * Get value of field E02SK1 as a String.
  */
  public String getE02SK1()
  {
    return fieldE02SK1.getString();
  }

  /**
  * Set field E02SK2 using a String value.
  */
  public void setE02SK2(String newvalue)
  {
    fieldE02SK2.setString(newvalue);
  }

  /**
  * Get value of field E02SK2 as a String.
  */
  public String getE02SK2()
  {
    return fieldE02SK2.getString();
  }

  /**
  * Set field E02SK3 using a String value.
  */
  public void setE02SK3(String newvalue)
  {
    fieldE02SK3.setString(newvalue);
  }

  /**
  * Get value of field E02SK3 as a String.
  */
  public String getE02SK3()
  {
    return fieldE02SK3.getString();
  }

}
