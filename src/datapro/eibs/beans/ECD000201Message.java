package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECD000201 physical file definition.
* 
* File level identifier is 1051003180045.
* Record format level identifier is 265D5FB3211F1.
*/

public class ECD000201Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CDRBKS",
                                     "E01CDRBRN",
                                     "E01CDRTPL",
                                     "E01CDRNPL",
                                     "E01CDRUSR",
                                     "E01CDRNUM",
                                     "E01CDRTAR",
                                     "E01CDRDAY",
                                     "E01CDRMON",
                                     "E01CDRYEA",
                                     "E01CDRTIM",
                                     "E01CDRSTS",
                                     "E01CDRBND",
                                     "E01CDRBRD",
                                     "E01CDRRUS",
                                     "E01CDRDAR",
                                     "E01CDRMOR",
                                     "E01CDRYER",
                                     "E01CDRTIR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CDRBKS",
                                   "E01CDRBRN",
                                   "E01CDRTPL",
                                   "E01CDRNPL",
                                   "E01CDRUSR",
                                   "E01CDRNUM",
                                   "E01CDRTAR",
                                   "E01CDRDAY",
                                   "E01CDRMON",
                                   "E01CDRYEA",
                                   "E01CDRTIM",
                                   "E01CDRSTS",
                                   "E01CDRBND",
                                   "E01CDRBRD",
                                   "E01CDRRUS",
                                   "E01CDRDAR",
                                   "E01CDRMOR",
                                   "E01CDRYER",
                                   "E01CDRTIR"
                                 };
  final static String fid = "1051003180045";
  final static String rid = "265D5FB3211F1";
  final static String fmtname = "ECD000201";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CDRBKS = null;
  private DecimalField fieldE01CDRBRN = null;
  private CharacterField fieldE01CDRTPL = null;
  private CharacterField fieldE01CDRNPL = null;
  private CharacterField fieldE01CDRUSR = null;
  private DecimalField fieldE01CDRNUM = null;
  private CharacterField fieldE01CDRTAR = null;
  private DecimalField fieldE01CDRDAY = null;
  private DecimalField fieldE01CDRMON = null;
  private DecimalField fieldE01CDRYEA = null;
  private DecimalField fieldE01CDRTIM = null;
  private CharacterField fieldE01CDRSTS = null;
  private DecimalField fieldE01CDRBND = null;
  private DecimalField fieldE01CDRBRD = null;
  private CharacterField fieldE01CDRRUS = null;
  private DecimalField fieldE01CDRDAR = null;
  private DecimalField fieldE01CDRMOR = null;
  private DecimalField fieldE01CDRYER = null;
  private DecimalField fieldE01CDRTIR = null;

  /**
  * Constructor for ECD000201Message.
  */
  public ECD000201Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 184;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CDRBKS =
    new DecimalField(message, HEADERSIZE + 42, 3, 0, "E01CDRBKS");
    fields[10] = fieldE01CDRBRN =
    new DecimalField(message, HEADERSIZE + 45, 4, 0, "E01CDRBRN");
    fields[11] = fieldE01CDRTPL =
    new CharacterField(message, HEADERSIZE + 49, 2, "E01CDRTPL");
    fields[12] = fieldE01CDRNPL =
    new CharacterField(message, HEADERSIZE + 51, 30, "E01CDRNPL");
    fields[13] = fieldE01CDRUSR =
    new CharacterField(message, HEADERSIZE + 81, 15, "E01CDRUSR");
    fields[14] = fieldE01CDRNUM =
    new DecimalField(message, HEADERSIZE + 96, 13, 0, "E01CDRNUM");
    fields[15] = fieldE01CDRTAR =
    new CharacterField(message, HEADERSIZE + 109, 20, "E01CDRTAR");
    fields[16] = fieldE01CDRDAY =
    new DecimalField(message, HEADERSIZE + 129, 3, 0, "E01CDRDAY");
    fields[17] = fieldE01CDRMON =
    new DecimalField(message, HEADERSIZE + 132, 3, 0, "E01CDRMON");
    fields[18] = fieldE01CDRYEA =
    new DecimalField(message, HEADERSIZE + 135, 3, 0, "E01CDRYEA");
    fields[19] = fieldE01CDRTIM =
    new DecimalField(message, HEADERSIZE + 138, 7, 0, "E01CDRTIM");
    fields[20] = fieldE01CDRSTS =
    new CharacterField(message, HEADERSIZE + 145, 1, "E01CDRSTS");
    fields[21] = fieldE01CDRBND =
    new DecimalField(message, HEADERSIZE + 146, 3, 0, "E01CDRBND");
    fields[22] = fieldE01CDRBRD =
    new DecimalField(message, HEADERSIZE + 149, 4, 0, "E01CDRBRD");
    fields[23] = fieldE01CDRRUS =
    new CharacterField(message, HEADERSIZE + 153, 15, "E01CDRRUS");
    fields[24] = fieldE01CDRDAR =
    new DecimalField(message, HEADERSIZE + 168, 3, 0, "E01CDRDAR");
    fields[25] = fieldE01CDRMOR =
    new DecimalField(message, HEADERSIZE + 171, 3, 0, "E01CDRMOR");
    fields[26] = fieldE01CDRYER =
    new DecimalField(message, HEADERSIZE + 174, 3, 0, "E01CDRYER");
    fields[27] = fieldE01CDRTIR =
    new DecimalField(message, HEADERSIZE + 177, 7, 0, "E01CDRTIR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CDRBKS using a String value.
  */
  public void setE01CDRBKS(String newvalue)
  {
    fieldE01CDRBKS.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBKS as a String.
  */
  public String getE01CDRBKS()
  {
    return fieldE01CDRBKS.getString();
  }

  /**
  * Set numeric field E01CDRBKS using a BigDecimal value.
  */
  public void setE01CDRBKS(BigDecimal newvalue)
  {
    fieldE01CDRBKS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBKS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBKS()
  {
    return fieldE01CDRBKS.getBigDecimal();
  }

  /**
  * Set field E01CDRBRN using a String value.
  */
  public void setE01CDRBRN(String newvalue)
  {
    fieldE01CDRBRN.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBRN as a String.
  */
  public String getE01CDRBRN()
  {
    return fieldE01CDRBRN.getString();
  }

  /**
  * Set numeric field E01CDRBRN using a BigDecimal value.
  */
  public void setE01CDRBRN(BigDecimal newvalue)
  {
    fieldE01CDRBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBRN()
  {
    return fieldE01CDRBRN.getBigDecimal();
  }

  /**
  * Set field E01CDRTPL using a String value.
  */
  public void setE01CDRTPL(String newvalue)
  {
    fieldE01CDRTPL.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTPL as a String.
  */
  public String getE01CDRTPL()
  {
    return fieldE01CDRTPL.getString();
  }

  /**
  * Set field E01CDRNPL using a String value.
  */
  public void setE01CDRNPL(String newvalue)
  {
    fieldE01CDRNPL.setString(newvalue);
  }

  /**
  * Get value of field E01CDRNPL as a String.
  */
  public String getE01CDRNPL()
  {
    return fieldE01CDRNPL.getString();
  }

  /**
  * Set field E01CDRUSR using a String value.
  */
  public void setE01CDRUSR(String newvalue)
  {
    fieldE01CDRUSR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRUSR as a String.
  */
  public String getE01CDRUSR()
  {
    return fieldE01CDRUSR.getString();
  }

  /**
  * Set field E01CDRNUM using a String value.
  */
  public void setE01CDRNUM(String newvalue)
  {
    fieldE01CDRNUM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRNUM as a String.
  */
  public String getE01CDRNUM()
  {
    return fieldE01CDRNUM.getString();
  }

  /**
  * Set numeric field E01CDRNUM using a BigDecimal value.
  */
  public void setE01CDRNUM(BigDecimal newvalue)
  {
    fieldE01CDRNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRNUM()
  {
    return fieldE01CDRNUM.getBigDecimal();
  }

  /**
  * Set field E01CDRTAR using a String value.
  */
  public void setE01CDRTAR(String newvalue)
  {
    fieldE01CDRTAR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTAR as a String.
  */
  public String getE01CDRTAR()
  {
    return fieldE01CDRTAR.getString();
  }

  /**
  * Set field E01CDRDAY using a String value.
  */
  public void setE01CDRDAY(String newvalue)
  {
    fieldE01CDRDAY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDAY as a String.
  */
  public String getE01CDRDAY()
  {
    return fieldE01CDRDAY.getString();
  }

  /**
  * Set numeric field E01CDRDAY using a BigDecimal value.
  */
  public void setE01CDRDAY(BigDecimal newvalue)
  {
    fieldE01CDRDAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDAY()
  {
    return fieldE01CDRDAY.getBigDecimal();
  }

  /**
  * Set field E01CDRMON using a String value.
  */
  public void setE01CDRMON(String newvalue)
  {
    fieldE01CDRMON.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMON as a String.
  */
  public String getE01CDRMON()
  {
    return fieldE01CDRMON.getString();
  }

  /**
  * Set numeric field E01CDRMON using a BigDecimal value.
  */
  public void setE01CDRMON(BigDecimal newvalue)
  {
    fieldE01CDRMON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRMON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRMON()
  {
    return fieldE01CDRMON.getBigDecimal();
  }

  /**
  * Set field E01CDRYEA using a String value.
  */
  public void setE01CDRYEA(String newvalue)
  {
    fieldE01CDRYEA.setString(newvalue);
  }

  /**
  * Get value of field E01CDRYEA as a String.
  */
  public String getE01CDRYEA()
  {
    return fieldE01CDRYEA.getString();
  }

  /**
  * Set numeric field E01CDRYEA using a BigDecimal value.
  */
  public void setE01CDRYEA(BigDecimal newvalue)
  {
    fieldE01CDRYEA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRYEA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRYEA()
  {
    return fieldE01CDRYEA.getBigDecimal();
  }

  /**
  * Set field E01CDRTIM using a String value.
  */
  public void setE01CDRTIM(String newvalue)
  {
    fieldE01CDRTIM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTIM as a String.
  */
  public String getE01CDRTIM()
  {
    return fieldE01CDRTIM.getString();
  }

  /**
  * Set numeric field E01CDRTIM using a BigDecimal value.
  */
  public void setE01CDRTIM(BigDecimal newvalue)
  {
    fieldE01CDRTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRTIM()
  {
    return fieldE01CDRTIM.getBigDecimal();
  }

  /**
  * Set field E01CDRSTS using a String value.
  */
  public void setE01CDRSTS(String newvalue)
  {
    fieldE01CDRSTS.setString(newvalue);
  }

  /**
  * Get value of field E01CDRSTS as a String.
  */
  public String getE01CDRSTS()
  {
    return fieldE01CDRSTS.getString();
  }

  /**
  * Set field E01CDRBND using a String value.
  */
  public void setE01CDRBND(String newvalue)
  {
    fieldE01CDRBND.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBND as a String.
  */
  public String getE01CDRBND()
  {
    return fieldE01CDRBND.getString();
  }

  /**
  * Set numeric field E01CDRBND using a BigDecimal value.
  */
  public void setE01CDRBND(BigDecimal newvalue)
  {
    fieldE01CDRBND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBND as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBND()
  {
    return fieldE01CDRBND.getBigDecimal();
  }

  /**
  * Set field E01CDRBRD using a String value.
  */
  public void setE01CDRBRD(String newvalue)
  {
    fieldE01CDRBRD.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBRD as a String.
  */
  public String getE01CDRBRD()
  {
    return fieldE01CDRBRD.getString();
  }

  /**
  * Set numeric field E01CDRBRD using a BigDecimal value.
  */
  public void setE01CDRBRD(BigDecimal newvalue)
  {
    fieldE01CDRBRD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBRD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBRD()
  {
    return fieldE01CDRBRD.getBigDecimal();
  }

  /**
  * Set field E01CDRRUS using a String value.
  */
  public void setE01CDRRUS(String newvalue)
  {
    fieldE01CDRRUS.setString(newvalue);
  }

  /**
  * Get value of field E01CDRRUS as a String.
  */
  public String getE01CDRRUS()
  {
    return fieldE01CDRRUS.getString();
  }

  /**
  * Set field E01CDRDAR using a String value.
  */
  public void setE01CDRDAR(String newvalue)
  {
    fieldE01CDRDAR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDAR as a String.
  */
  public String getE01CDRDAR()
  {
    return fieldE01CDRDAR.getString();
  }

  /**
  * Set numeric field E01CDRDAR using a BigDecimal value.
  */
  public void setE01CDRDAR(BigDecimal newvalue)
  {
    fieldE01CDRDAR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDAR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDAR()
  {
    return fieldE01CDRDAR.getBigDecimal();
  }

  /**
  * Set field E01CDRMOR using a String value.
  */
  public void setE01CDRMOR(String newvalue)
  {
    fieldE01CDRMOR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMOR as a String.
  */
  public String getE01CDRMOR()
  {
    return fieldE01CDRMOR.getString();
  }

  /**
  * Set numeric field E01CDRMOR using a BigDecimal value.
  */
  public void setE01CDRMOR(BigDecimal newvalue)
  {
    fieldE01CDRMOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRMOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRMOR()
  {
    return fieldE01CDRMOR.getBigDecimal();
  }

  /**
  * Set field E01CDRYER using a String value.
  */
  public void setE01CDRYER(String newvalue)
  {
    fieldE01CDRYER.setString(newvalue);
  }

  /**
  * Get value of field E01CDRYER as a String.
  */
  public String getE01CDRYER()
  {
    return fieldE01CDRYER.getString();
  }

  /**
  * Set numeric field E01CDRYER using a BigDecimal value.
  */
  public void setE01CDRYER(BigDecimal newvalue)
  {
    fieldE01CDRYER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRYER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRYER()
  {
    return fieldE01CDRYER.getBigDecimal();
  }

  /**
  * Set field E01CDRTIR using a String value.
  */
  public void setE01CDRTIR(String newvalue)
  {
    fieldE01CDRTIR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTIR as a String.
  */
  public String getE01CDRTIR()
  {
    return fieldE01CDRTIR.getString();
  }

  /**
  * Set numeric field E01CDRTIR using a BigDecimal value.
  */
  public void setE01CDRTIR(BigDecimal newvalue)
  {
    fieldE01CDRTIR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRTIR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRTIR()
  {
    return fieldE01CDRTIR.getBigDecimal();
  }

}
