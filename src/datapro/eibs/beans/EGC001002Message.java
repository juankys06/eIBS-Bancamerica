package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC001002 physical file definition.
* 
* File level identifier is 1030121191922.
* Record format level identifier is 3F6B03150F604.
*/

public class EGC001002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CUSCUN",
                                     "E02CUSNA1",
                                     "E02CUSSHN",
                                     "E02CUSIDN",
                                     "E02CUSTID",
                                     "E02CUSPID",
                                     "E02CLILGT",
                                     "E02CLITYP",
                                     "E02CLISTS",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CUSCUN",
                                   "E02CUSNA1",
                                   "E02CUSSHN",
                                   "E02CUSIDN",
                                   "E02CUSTID",
                                   "E02CUSPID",
                                   "E02CLILGT",
                                   "E02CLITYP",
                                   "E02CLISTS",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1030121191922";
  final static String rid = "3F6B03150F604";
  final static String fmtname = "EGC001002";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02CUSCUN = null;
  private CharacterField fieldE02CUSNA1 = null;
  private CharacterField fieldE02CUSSHN = null;
  private CharacterField fieldE02CUSIDN = null;
  private CharacterField fieldE02CUSTID = null;
  private CharacterField fieldE02CUSPID = null;
  private CharacterField fieldE02CLILGT = null;
  private CharacterField fieldE02CLITYP = null;
  private CharacterField fieldE02CLISTS = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EGC001002Message.
  */
  public EGC001002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 184;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CUSCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E02CUSCUN");
    fields[10] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 52, 45, "E02CUSNA1");
    fields[11] = fieldE02CUSSHN =
    new CharacterField(message, HEADERSIZE + 97, 15, "E02CUSSHN");
    fields[12] = fieldE02CUSIDN =
    new CharacterField(message, HEADERSIZE + 112, 15, "E02CUSIDN");
    fields[13] = fieldE02CUSTID =
    new CharacterField(message, HEADERSIZE + 127, 4, "E02CUSTID");
    fields[14] = fieldE02CUSPID =
    new CharacterField(message, HEADERSIZE + 131, 4, "E02CUSPID");
    fields[15] = fieldE02CLILGT =
    new CharacterField(message, HEADERSIZE + 135, 10, "E02CLILGT");
    fields[16] = fieldE02CLITYP =
    new CharacterField(message, HEADERSIZE + 145, 10, "E02CLITYP");
    fields[17] = fieldE02CLISTS =
    new CharacterField(message, HEADERSIZE + 155, 20, "E02CLISTS");
    fields[18] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 175, 8, 0, "E02NUMREC");
    fields[19] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 183, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CUSCUN using a String value.
  */
  public void setE02CUSCUN(String newvalue)
  {
    fieldE02CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E02CUSCUN as a String.
  */
  public String getE02CUSCUN()
  {
    return fieldE02CUSCUN.getString();
  }

  /**
  * Set numeric field E02CUSCUN using a BigDecimal value.
  */
  public void setE02CUSCUN(BigDecimal newvalue)
  {
    fieldE02CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUSCUN()
  {
    return fieldE02CUSCUN.getBigDecimal();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02CUSSHN using a String value.
  */
  public void setE02CUSSHN(String newvalue)
  {
    fieldE02CUSSHN.setString(newvalue);
  }

  /**
  * Get value of field E02CUSSHN as a String.
  */
  public String getE02CUSSHN()
  {
    return fieldE02CUSSHN.getString();
  }

  /**
  * Set field E02CUSIDN using a String value.
  */
  public void setE02CUSIDN(String newvalue)
  {
    fieldE02CUSIDN.setString(newvalue);
  }

  /**
  * Get value of field E02CUSIDN as a String.
  */
  public String getE02CUSIDN()
  {
    return fieldE02CUSIDN.getString();
  }

  /**
  * Set field E02CUSTID using a String value.
  */
  public void setE02CUSTID(String newvalue)
  {
    fieldE02CUSTID.setString(newvalue);
  }

  /**
  * Get value of field E02CUSTID as a String.
  */
  public String getE02CUSTID()
  {
    return fieldE02CUSTID.getString();
  }

  /**
  * Set field E02CUSPID using a String value.
  */
  public void setE02CUSPID(String newvalue)
  {
    fieldE02CUSPID.setString(newvalue);
  }

  /**
  * Get value of field E02CUSPID as a String.
  */
  public String getE02CUSPID()
  {
    return fieldE02CUSPID.getString();
  }

  /**
  * Set field E02CLILGT using a String value.
  */
  public void setE02CLILGT(String newvalue)
  {
    fieldE02CLILGT.setString(newvalue);
  }

  /**
  * Get value of field E02CLILGT as a String.
  */
  public String getE02CLILGT()
  {
    return fieldE02CLILGT.getString();
  }

  /**
  * Set field E02CLITYP using a String value.
  */
  public void setE02CLITYP(String newvalue)
  {
    fieldE02CLITYP.setString(newvalue);
  }

  /**
  * Get value of field E02CLITYP as a String.
  */
  public String getE02CLITYP()
  {
    return fieldE02CLITYP.getString();
  }

  /**
  * Set field E02CLISTS using a String value.
  */
  public void setE02CLISTS(String newvalue)
  {
    fieldE02CLISTS.setString(newvalue);
  }

  /**
  * Get value of field E02CLISTS as a String.
  */
  public String getE02CLISTS()
  {
    return fieldE02CLISTS.getString();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
