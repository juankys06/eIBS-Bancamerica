package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECD0009DS physical file definition.
* 
* File level identifier is 1070130161159.
* Record format level identifier is 579A556290614.
*/

public class ECD0009DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CDRTBL",
                                     "E01CDRDSC",
                                     "E01CDRDOC",
                                     "E01CDRBIN",
                                     "E01CDREMI",
                                     "E01CDRTYP",
                                     "E01CDRACT",
                                     "E01CDRTRM",
                                     "E01CDRTRC",
                                     "E01CDRMXC",
                                     "E01CDRCVC",
                                     "E01CDRJUR",
                                     "E01CDRFIR",
                                     "E01CDRDIG",
                                     "E01CDROFF",
                                     "E01CDRPIN",
                                     "E01CDRCV1",
                                     "E01CDRCV2",
                                     "E01CDRDEV"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CDRTBL",
                                   "E01CDRDSC",
                                   "E01CDRDOC",
                                   "E01CDRBIN",
                                   "E01CDREMI",
                                   "E01CDRTYP",
                                   "E01CDRACT",
                                   "E01CDRTRM",
                                   "E01CDRTRC",
                                   "E01CDRMXC",
                                   "E01CDRCVC",
                                   "E01CDRJUR",
                                   "E01CDRFIR",
                                   "E01CDRDIG",
                                   "E01CDROFF",
                                   "E01CDRPIN",
                                   "E01CDRCV1",
                                   "E01CDRCV2",
                                   "E01CDRDEV"
                                 };
  final static String fid = "1070130161159";
  final static String rid = "579A556290614";
  final static String fmtname = "ECD0009DS";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CDRTBL = null;
  private CharacterField fieldE01CDRDSC = null;
  private CharacterField fieldE01CDRDOC = null;
  private DecimalField fieldE01CDRBIN = null;
  private DecimalField fieldE01CDREMI = null;
  private CharacterField fieldE01CDRTYP = null;
  private CharacterField fieldE01CDRACT = null;
  private DecimalField fieldE01CDRTRM = null;
  private CharacterField fieldE01CDRTRC = null;
  private DecimalField fieldE01CDRMXC = null;
  private CharacterField fieldE01CDRCVC = null;
  private CharacterField fieldE01CDRJUR = null;
  private CharacterField fieldE01CDRFIR = null;
  private DecimalField fieldE01CDRDIG = null;
  private CharacterField fieldE01CDROFF = null;
  private CharacterField fieldE01CDRPIN = null;
  private CharacterField fieldE01CDRCV1 = null;
  private CharacterField fieldE01CDRCV2 = null;
  private DecimalField fieldE01CDRDEV = null;

  /**
  * Constructor for ECD0009DSMessage.
  */
  public ECD0009DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 124;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CDRTBL =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01CDRTBL");
    fields[10] = fieldE01CDRDSC =
    new CharacterField(message, HEADERSIZE + 44, 30, "E01CDRDSC");
    fields[11] = fieldE01CDRDOC =
    new CharacterField(message, HEADERSIZE + 74, 1, "E01CDRDOC");
    fields[12] = fieldE01CDRBIN =
    new DecimalField(message, HEADERSIZE + 75, 7, 0, "E01CDRBIN");
    fields[13] = fieldE01CDREMI =
    new DecimalField(message, HEADERSIZE + 82, 5, 0, "E01CDREMI");
    fields[14] = fieldE01CDRTYP =
    new CharacterField(message, HEADERSIZE + 87, 1, "E01CDRTYP");
    fields[15] = fieldE01CDRACT =
    new CharacterField(message, HEADERSIZE + 88, 1, "E01CDRACT");
    fields[16] = fieldE01CDRTRM =
    new DecimalField(message, HEADERSIZE + 89, 4, 0, "E01CDRTRM");
    fields[17] = fieldE01CDRTRC =
    new CharacterField(message, HEADERSIZE + 93, 1, "E01CDRTRC");
    fields[18] = fieldE01CDRMXC =
    new DecimalField(message, HEADERSIZE + 94, 3, 0, "E01CDRMXC");
    fields[19] = fieldE01CDRCVC =
    new CharacterField(message, HEADERSIZE + 97, 1, "E01CDRCVC");
    fields[20] = fieldE01CDRJUR =
    new CharacterField(message, HEADERSIZE + 98, 1, "E01CDRJUR");
    fields[21] = fieldE01CDRFIR =
    new CharacterField(message, HEADERSIZE + 99, 1, "E01CDRFIR");
    fields[22] = fieldE01CDRDIG =
    new DecimalField(message, HEADERSIZE + 100, 3, 0, "E01CDRDIG");
    fields[23] = fieldE01CDROFF =
    new CharacterField(message, HEADERSIZE + 103, 1, "E01CDROFF");
    fields[24] = fieldE01CDRPIN =
    new CharacterField(message, HEADERSIZE + 104, 1, "E01CDRPIN");
    fields[25] = fieldE01CDRCV1 =
    new CharacterField(message, HEADERSIZE + 105, 1, "E01CDRCV1");
    fields[26] = fieldE01CDRCV2 =
    new CharacterField(message, HEADERSIZE + 106, 1, "E01CDRCV2");
    fields[27] = fieldE01CDRDEV =
    new DecimalField(message, HEADERSIZE + 107, 17, 2, "E01CDRDEV");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CDRTBL using a String value.
  */
  public void setE01CDRTBL(String newvalue)
  {
    fieldE01CDRTBL.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTBL as a String.
  */
  public String getE01CDRTBL()
  {
    return fieldE01CDRTBL.getString();
  }

  /**
  * Set field E01CDRDSC using a String value.
  */
  public void setE01CDRDSC(String newvalue)
  {
    fieldE01CDRDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDSC as a String.
  */
  public String getE01CDRDSC()
  {
    return fieldE01CDRDSC.getString();
  }

  /**
  * Set field E01CDRDOC using a String value.
  */
  public void setE01CDRDOC(String newvalue)
  {
    fieldE01CDRDOC.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDOC as a String.
  */
  public String getE01CDRDOC()
  {
    return fieldE01CDRDOC.getString();
  }

  /**
  * Set field E01CDRBIN using a String value.
  */
  public void setE01CDRBIN(String newvalue)
  {
    fieldE01CDRBIN.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBIN as a String.
  */
  public String getE01CDRBIN()
  {
    return fieldE01CDRBIN.getString();
  }

  /**
  * Set numeric field E01CDRBIN using a BigDecimal value.
  */
  public void setE01CDRBIN(BigDecimal newvalue)
  {
    fieldE01CDRBIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBIN()
  {
    return fieldE01CDRBIN.getBigDecimal();
  }

  /**
  * Set field E01CDREMI using a String value.
  */
  public void setE01CDREMI(String newvalue)
  {
    fieldE01CDREMI.setString(newvalue);
  }

  /**
  * Get value of field E01CDREMI as a String.
  */
  public String getE01CDREMI()
  {
    return fieldE01CDREMI.getString();
  }

  /**
  * Set numeric field E01CDREMI using a BigDecimal value.
  */
  public void setE01CDREMI(BigDecimal newvalue)
  {
    fieldE01CDREMI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDREMI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDREMI()
  {
    return fieldE01CDREMI.getBigDecimal();
  }

  /**
  * Set field E01CDRTYP using a String value.
  */
  public void setE01CDRTYP(String newvalue)
  {
    fieldE01CDRTYP.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTYP as a String.
  */
  public String getE01CDRTYP()
  {
    return fieldE01CDRTYP.getString();
  }

  /**
  * Set field E01CDRACT using a String value.
  */
  public void setE01CDRACT(String newvalue)
  {
    fieldE01CDRACT.setString(newvalue);
  }

  /**
  * Get value of field E01CDRACT as a String.
  */
  public String getE01CDRACT()
  {
    return fieldE01CDRACT.getString();
  }

  /**
  * Set field E01CDRTRM using a String value.
  */
  public void setE01CDRTRM(String newvalue)
  {
    fieldE01CDRTRM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTRM as a String.
  */
  public String getE01CDRTRM()
  {
    return fieldE01CDRTRM.getString();
  }

  /**
  * Set numeric field E01CDRTRM using a BigDecimal value.
  */
  public void setE01CDRTRM(BigDecimal newvalue)
  {
    fieldE01CDRTRM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRTRM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRTRM()
  {
    return fieldE01CDRTRM.getBigDecimal();
  }

  /**
  * Set field E01CDRTRC using a String value.
  */
  public void setE01CDRTRC(String newvalue)
  {
    fieldE01CDRTRC.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTRC as a String.
  */
  public String getE01CDRTRC()
  {
    return fieldE01CDRTRC.getString();
  }

  /**
  * Set field E01CDRMXC using a String value.
  */
  public void setE01CDRMXC(String newvalue)
  {
    fieldE01CDRMXC.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMXC as a String.
  */
  public String getE01CDRMXC()
  {
    return fieldE01CDRMXC.getString();
  }

  /**
  * Set numeric field E01CDRMXC using a BigDecimal value.
  */
  public void setE01CDRMXC(BigDecimal newvalue)
  {
    fieldE01CDRMXC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRMXC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRMXC()
  {
    return fieldE01CDRMXC.getBigDecimal();
  }

  /**
  * Set field E01CDRCVC using a String value.
  */
  public void setE01CDRCVC(String newvalue)
  {
    fieldE01CDRCVC.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCVC as a String.
  */
  public String getE01CDRCVC()
  {
    return fieldE01CDRCVC.getString();
  }

  /**
  * Set field E01CDRJUR using a String value.
  */
  public void setE01CDRJUR(String newvalue)
  {
    fieldE01CDRJUR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRJUR as a String.
  */
  public String getE01CDRJUR()
  {
    return fieldE01CDRJUR.getString();
  }

  /**
  * Set field E01CDRFIR using a String value.
  */
  public void setE01CDRFIR(String newvalue)
  {
    fieldE01CDRFIR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRFIR as a String.
  */
  public String getE01CDRFIR()
  {
    return fieldE01CDRFIR.getString();
  }

  /**
  * Set field E01CDRDIG using a String value.
  */
  public void setE01CDRDIG(String newvalue)
  {
    fieldE01CDRDIG.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDIG as a String.
  */
  public String getE01CDRDIG()
  {
    return fieldE01CDRDIG.getString();
  }

  /**
  * Set numeric field E01CDRDIG using a BigDecimal value.
  */
  public void setE01CDRDIG(BigDecimal newvalue)
  {
    fieldE01CDRDIG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDIG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDIG()
  {
    return fieldE01CDRDIG.getBigDecimal();
  }

  /**
  * Set field E01CDROFF using a String value.
  */
  public void setE01CDROFF(String newvalue)
  {
    fieldE01CDROFF.setString(newvalue);
  }

  /**
  * Get value of field E01CDROFF as a String.
  */
  public String getE01CDROFF()
  {
    return fieldE01CDROFF.getString();
  }

  /**
  * Set field E01CDRPIN using a String value.
  */
  public void setE01CDRPIN(String newvalue)
  {
    fieldE01CDRPIN.setString(newvalue);
  }

  /**
  * Get value of field E01CDRPIN as a String.
  */
  public String getE01CDRPIN()
  {
    return fieldE01CDRPIN.getString();
  }

  /**
  * Set field E01CDRCV1 using a String value.
  */
  public void setE01CDRCV1(String newvalue)
  {
    fieldE01CDRCV1.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCV1 as a String.
  */
  public String getE01CDRCV1()
  {
    return fieldE01CDRCV1.getString();
  }

  /**
  * Set field E01CDRCV2 using a String value.
  */
  public void setE01CDRCV2(String newvalue)
  {
    fieldE01CDRCV2.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCV2 as a String.
  */
  public String getE01CDRCV2()
  {
    return fieldE01CDRCV2.getString();
  }

  /**
  * Set field E01CDRDEV using a String value.
  */
  public void setE01CDRDEV(String newvalue)
  {
    fieldE01CDRDEV.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDEV as a String.
  */
  public String getE01CDRDEV()
  {
    return fieldE01CDRDEV.getString();
  }

  /**
  * Set numeric field E01CDRDEV using a BigDecimal value.
  */
  public void setE01CDRDEV(BigDecimal newvalue)
  {
    fieldE01CDRDEV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDEV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDEV()
  {
    return fieldE01CDRDEV.getBigDecimal();
  }

}
