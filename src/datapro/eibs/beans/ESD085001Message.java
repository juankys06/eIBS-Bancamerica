package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD085001 physical file definition.
* 
* File level identifier is 1030121192010.
* Record format level identifier is 376D9FCAF3EEF.
*/

public class ESD085001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CUSCUN",
                                     "E01OFCCOD",
                                     "E01OFCNME",
                                     "E01OFCIDN",
                                     "E01OFCEML",
                                     "E01OFCPHN",
                                     "E01OFCPXT",
                                     "E01OFCBNK",
                                     "E01OFCBRN",
                                     "E01OFCCCN",
                                     "E01OFCROT",
                                     "E01OFCAOF",
                                     "E01DSCAOF"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CUSCUN",
                                   "E01OFCCOD",
                                   "E01OFCNME",
                                   "E01OFCIDN",
                                   "E01OFCEML",
                                   "E01OFCPHN",
                                   "E01OFCPXT",
                                   "E01OFCBNK",
                                   "E01OFCBRN",
                                   "E01OFCCCN",
                                   "E01OFCROT",
                                   "E01OFCAOF",
                                   "E01DSCAOF"
                                 };
  final static String fid = "1030121192010";
  final static String rid = "376D9FCAF3EEF";
  final static String fmtname = "ESD085001";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CUSCUN = null;
  private CharacterField fieldE01OFCCOD = null;
  private CharacterField fieldE01OFCNME = null;
  private CharacterField fieldE01OFCIDN = null;
  private CharacterField fieldE01OFCEML = null;
  private DecimalField fieldE01OFCPHN = null;
  private DecimalField fieldE01OFCPXT = null;
  private CharacterField fieldE01OFCBNK = null;
  private DecimalField fieldE01OFCBRN = null;
  private DecimalField fieldE01OFCCCN = null;
  private CharacterField fieldE01OFCROT = null;
  private CharacterField fieldE01OFCAOF = null;
  private CharacterField fieldE01DSCAOF = null;

  /**
  * Constructor for ESD085001Message.
  */
  public ESD085001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 206;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CUSCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01CUSCUN");
    fields[10] = fieldE01OFCCOD =
    new CharacterField(message, HEADERSIZE + 52, 4, "E01OFCCOD");
    fields[11] = fieldE01OFCNME =
    new CharacterField(message, HEADERSIZE + 56, 45, "E01OFCNME");
    fields[12] = fieldE01OFCIDN =
    new CharacterField(message, HEADERSIZE + 101, 15, "E01OFCIDN");
    fields[13] = fieldE01OFCEML =
    new CharacterField(message, HEADERSIZE + 116, 40, "E01OFCEML");
    fields[14] = fieldE01OFCPHN =
    new DecimalField(message, HEADERSIZE + 156, 12, 0, "E01OFCPHN");
    fields[15] = fieldE01OFCPXT =
    new DecimalField(message, HEADERSIZE + 168, 5, 0, "E01OFCPXT");
    fields[16] = fieldE01OFCBNK =
    new CharacterField(message, HEADERSIZE + 173, 2, "E01OFCBNK");
    fields[17] = fieldE01OFCBRN =
    new DecimalField(message, HEADERSIZE + 175, 4, 0, "E01OFCBRN");
    fields[18] = fieldE01OFCCCN =
    new DecimalField(message, HEADERSIZE + 179, 9, 0, "E01OFCCCN");
    fields[19] = fieldE01OFCROT =
    new CharacterField(message, HEADERSIZE + 188, 10, "E01OFCROT");
    fields[20] = fieldE01OFCAOF =
    new CharacterField(message, HEADERSIZE + 198, 4, "E01OFCAOF");
    fields[21] = fieldE01DSCAOF =
    new CharacterField(message, HEADERSIZE + 202, 4, "E01DSCAOF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CUSCUN using a String value.
  */
  public void setE01CUSCUN(String newvalue)
  {
    fieldE01CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSCUN as a String.
  */
  public String getE01CUSCUN()
  {
    return fieldE01CUSCUN.getString();
  }

  /**
  * Set numeric field E01CUSCUN using a BigDecimal value.
  */
  public void setE01CUSCUN(BigDecimal newvalue)
  {
    fieldE01CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSCUN()
  {
    return fieldE01CUSCUN.getBigDecimal();
  }

  /**
  * Set field E01OFCCOD using a String value.
  */
  public void setE01OFCCOD(String newvalue)
  {
    fieldE01OFCCOD.setString(newvalue);
  }

  /**
  * Get value of field E01OFCCOD as a String.
  */
  public String getE01OFCCOD()
  {
    return fieldE01OFCCOD.getString();
  }

  /**
  * Set field E01OFCNME using a String value.
  */
  public void setE01OFCNME(String newvalue)
  {
    fieldE01OFCNME.setString(newvalue);
  }

  /**
  * Get value of field E01OFCNME as a String.
  */
  public String getE01OFCNME()
  {
    return fieldE01OFCNME.getString();
  }

  /**
  * Set field E01OFCIDN using a String value.
  */
  public void setE01OFCIDN(String newvalue)
  {
    fieldE01OFCIDN.setString(newvalue);
  }

  /**
  * Get value of field E01OFCIDN as a String.
  */
  public String getE01OFCIDN()
  {
    return fieldE01OFCIDN.getString();
  }

  /**
  * Set field E01OFCEML using a String value.
  */
  public void setE01OFCEML(String newvalue)
  {
    fieldE01OFCEML.setString(newvalue);
  }

  /**
  * Get value of field E01OFCEML as a String.
  */
  public String getE01OFCEML()
  {
    return fieldE01OFCEML.getString();
  }

  /**
  * Set field E01OFCPHN using a String value.
  */
  public void setE01OFCPHN(String newvalue)
  {
    fieldE01OFCPHN.setString(newvalue);
  }

  /**
  * Get value of field E01OFCPHN as a String.
  */
  public String getE01OFCPHN()
  {
    return fieldE01OFCPHN.getString();
  }

  /**
  * Set numeric field E01OFCPHN using a BigDecimal value.
  */
  public void setE01OFCPHN(BigDecimal newvalue)
  {
    fieldE01OFCPHN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OFCPHN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OFCPHN()
  {
    return fieldE01OFCPHN.getBigDecimal();
  }

  /**
  * Set field E01OFCPXT using a String value.
  */
  public void setE01OFCPXT(String newvalue)
  {
    fieldE01OFCPXT.setString(newvalue);
  }

  /**
  * Get value of field E01OFCPXT as a String.
  */
  public String getE01OFCPXT()
  {
    return fieldE01OFCPXT.getString();
  }

  /**
  * Set numeric field E01OFCPXT using a BigDecimal value.
  */
  public void setE01OFCPXT(BigDecimal newvalue)
  {
    fieldE01OFCPXT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OFCPXT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OFCPXT()
  {
    return fieldE01OFCPXT.getBigDecimal();
  }

  /**
  * Set field E01OFCBNK using a String value.
  */
  public void setE01OFCBNK(String newvalue)
  {
    fieldE01OFCBNK.setString(newvalue);
  }

  /**
  * Get value of field E01OFCBNK as a String.
  */
  public String getE01OFCBNK()
  {
    return fieldE01OFCBNK.getString();
  }

  /**
  * Set field E01OFCBRN using a String value.
  */
  public void setE01OFCBRN(String newvalue)
  {
    fieldE01OFCBRN.setString(newvalue);
  }

  /**
  * Get value of field E01OFCBRN as a String.
  */
  public String getE01OFCBRN()
  {
    return fieldE01OFCBRN.getString();
  }

  /**
  * Set numeric field E01OFCBRN using a BigDecimal value.
  */
  public void setE01OFCBRN(BigDecimal newvalue)
  {
    fieldE01OFCBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OFCBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OFCBRN()
  {
    return fieldE01OFCBRN.getBigDecimal();
  }

  /**
  * Set field E01OFCCCN using a String value.
  */
  public void setE01OFCCCN(String newvalue)
  {
    fieldE01OFCCCN.setString(newvalue);
  }

  /**
  * Get value of field E01OFCCCN as a String.
  */
  public String getE01OFCCCN()
  {
    return fieldE01OFCCCN.getString();
  }

  /**
  * Set numeric field E01OFCCCN using a BigDecimal value.
  */
  public void setE01OFCCCN(BigDecimal newvalue)
  {
    fieldE01OFCCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OFCCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OFCCCN()
  {
    return fieldE01OFCCCN.getBigDecimal();
  }

  /**
  * Set field E01OFCROT using a String value.
  */
  public void setE01OFCROT(String newvalue)
  {
    fieldE01OFCROT.setString(newvalue);
  }

  /**
  * Get value of field E01OFCROT as a String.
  */
  public String getE01OFCROT()
  {
    return fieldE01OFCROT.getString();
  }

  /**
  * Set field E01OFCAOF using a String value.
  */
  public void setE01OFCAOF(String newvalue)
  {
    fieldE01OFCAOF.setString(newvalue);
  }

  /**
  * Get value of field E01OFCAOF as a String.
  */
  public String getE01OFCAOF()
  {
    return fieldE01OFCAOF.getString();
  }

  /**
  * Set field E01DSCAOF using a String value.
  */
  public void setE01DSCAOF(String newvalue)
  {
    fieldE01DSCAOF.setString(newvalue);
  }

  /**
  * Get value of field E01DSCAOF as a String.
  */
  public String getE01DSCAOF()
  {
    return fieldE01DSCAOF.getString();
  }

}
