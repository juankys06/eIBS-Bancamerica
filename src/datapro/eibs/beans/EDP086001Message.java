package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP086001 physical file definition.
* 
* File level identifier is 1090115110549.
* Record format level identifier is 351692A3A6BE0.
*/

public class EDP086001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01PNRCCL",
                                     "E01PNRDSC",
                                     "E01PNRSNM",
                                     "E01PNRPTS",
                                     "E01PNRPMN",
                                     "E01PNRPMX",
                                     "E01PNRPRI",
                                     "E01RECPOS",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01PNRCCL",
                                   "E01PNRDSC",
                                   "E01PNRSNM",
                                   "E01PNRPTS",
                                   "E01PNRPMN",
                                   "E01PNRPMX",
                                   "E01PNRPRI",
                                   "E01RECPOS",
                                   "E01OPECDE"
                                 };
  final static String fid = "1090115110549";
  final static String rid = "351692A3A6BE0";
  final static String fmtname = "EDP086001";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private CharacterField fieldE01PNRCCL = null;
  private CharacterField fieldE01PNRDSC = null;
  private CharacterField fieldE01PNRSNM = null;
  private DecimalField fieldE01PNRPTS = null;
  private DecimalField fieldE01PNRPMN = null;
  private DecimalField fieldE01PNRPMX = null;
  private DecimalField fieldE01PNRPRI = null;
  private DecimalField fieldE01RECPOS = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP086001Message.
  */
  public EDP086001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 156;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01PNRCCL =
    new CharacterField(message, HEADERSIZE + 43, 4, "E01PNRCCL");
    fields[11] = fieldE01PNRDSC =
    new CharacterField(message, HEADERSIZE + 47, 35, "E01PNRDSC");
    fields[12] = fieldE01PNRSNM =
    new CharacterField(message, HEADERSIZE + 82, 15, "E01PNRSNM");
    fields[13] = fieldE01PNRPTS =
    new DecimalField(message, HEADERSIZE + 97, 17, 2, "E01PNRPTS");
    fields[14] = fieldE01PNRPMN =
    new DecimalField(message, HEADERSIZE + 114, 11, 6, "E01PNRPMN");
    fields[15] = fieldE01PNRPMX =
    new DecimalField(message, HEADERSIZE + 125, 11, 6, "E01PNRPMX");
    fields[16] = fieldE01PNRPRI =
    new DecimalField(message, HEADERSIZE + 136, 11, 6, "E01PNRPRI");
    fields[17] = fieldE01RECPOS =
    new DecimalField(message, HEADERSIZE + 147, 8, 0, "E01RECPOS");
    fields[18] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 155, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01PNRCCL using a String value.
  */
  public void setE01PNRCCL(String newvalue)
  {
    fieldE01PNRCCL.setString(newvalue);
  }

  /**
  * Get value of field E01PNRCCL as a String.
  */
  public String getE01PNRCCL()
  {
    return fieldE01PNRCCL.getString();
  }

  /**
  * Set field E01PNRDSC using a String value.
  */
  public void setE01PNRDSC(String newvalue)
  {
    fieldE01PNRDSC.setString(newvalue);
  }

  /**
  * Get value of field E01PNRDSC as a String.
  */
  public String getE01PNRDSC()
  {
    return fieldE01PNRDSC.getString();
  }

  /**
  * Set field E01PNRSNM using a String value.
  */
  public void setE01PNRSNM(String newvalue)
  {
    fieldE01PNRSNM.setString(newvalue);
  }

  /**
  * Get value of field E01PNRSNM as a String.
  */
  public String getE01PNRSNM()
  {
    return fieldE01PNRSNM.getString();
  }

  /**
  * Set field E01PNRPTS using a String value.
  */
  public void setE01PNRPTS(String newvalue)
  {
    fieldE01PNRPTS.setString(newvalue);
  }

  /**
  * Get value of field E01PNRPTS as a String.
  */
  public String getE01PNRPTS()
  {
    return fieldE01PNRPTS.getString();
  }

  /**
  * Set numeric field E01PNRPTS using a BigDecimal value.
  */
  public void setE01PNRPTS(BigDecimal newvalue)
  {
    fieldE01PNRPTS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PNRPTS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PNRPTS()
  {
    return fieldE01PNRPTS.getBigDecimal();
  }

  /**
  * Set field E01PNRPMN using a String value.
  */
  public void setE01PNRPMN(String newvalue)
  {
    fieldE01PNRPMN.setString(newvalue);
  }

  /**
  * Get value of field E01PNRPMN as a String.
  */
  public String getE01PNRPMN()
  {
    return fieldE01PNRPMN.getString();
  }

  /**
  * Set numeric field E01PNRPMN using a BigDecimal value.
  */
  public void setE01PNRPMN(BigDecimal newvalue)
  {
    fieldE01PNRPMN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PNRPMN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PNRPMN()
  {
    return fieldE01PNRPMN.getBigDecimal();
  }

  /**
  * Set field E01PNRPMX using a String value.
  */
  public void setE01PNRPMX(String newvalue)
  {
    fieldE01PNRPMX.setString(newvalue);
  }

  /**
  * Get value of field E01PNRPMX as a String.
  */
  public String getE01PNRPMX()
  {
    return fieldE01PNRPMX.getString();
  }

  /**
  * Set numeric field E01PNRPMX using a BigDecimal value.
  */
  public void setE01PNRPMX(BigDecimal newvalue)
  {
    fieldE01PNRPMX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PNRPMX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PNRPMX()
  {
    return fieldE01PNRPMX.getBigDecimal();
  }

  /**
  * Set field E01PNRPRI using a String value.
  */
  public void setE01PNRPRI(String newvalue)
  {
    fieldE01PNRPRI.setString(newvalue);
  }

  /**
  * Get value of field E01PNRPRI as a String.
  */
  public String getE01PNRPRI()
  {
    return fieldE01PNRPRI.getString();
  }

  /**
  * Set numeric field E01PNRPRI using a BigDecimal value.
  */
  public void setE01PNRPRI(BigDecimal newvalue)
  {
    fieldE01PNRPRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PNRPRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PNRPRI()
  {
    return fieldE01PNRPRI.getBigDecimal();
  }

  /**
  * Set field E01RECPOS using a String value.
  */
  public void setE01RECPOS(String newvalue)
  {
    fieldE01RECPOS.setString(newvalue);
  }

  /**
  * Get value of field E01RECPOS as a String.
  */
  public String getE01RECPOS()
  {
    return fieldE01RECPOS.getString();
  }

  /**
  * Set numeric field E01RECPOS using a BigDecimal value.
  */
  public void setE01RECPOS(BigDecimal newvalue)
  {
    fieldE01RECPOS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RECPOS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RECPOS()
  {
    return fieldE01RECPOS.getBigDecimal();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
