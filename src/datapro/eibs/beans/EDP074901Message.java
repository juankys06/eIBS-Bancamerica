package datapro.eibs.beans;


import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP074901 physical file definition.
* 
* File level identifier is 1060403113513.
* Record format level identifier is 3FB638F2093D2.
*/

public class EDP074901Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01PLPNPR",
                                     "E01PLPCUN",
                                     "E01CUSNA1",
                                     "E01CUSNA2",
                                     "E01PLPAID",
                                     "E01PLPIPD",
                                     "E01PLPIPM",
                                     "E01PLPPLP",
                                     "E01PLPRUT",
                                     "E01PLPSRU",
                                     "E01PLPACT",
                                     "E01PLPTAR",
                                     "E01PLPPSR",
                                     "E01PLPPAC",
                                     "E01PLPPTA",
                                     "E01PLPEST",
                                     "E01XXXEST",
                                     "E01DESRUT",
                                     "E01DESAC1",
                                     "E01DESAC2",
                                     "E01PLPEJE",
                                     "E01XXXEJE",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01PLPNPR",
                                   "E01PLPCUN",
                                   "E01CUSNA1",
                                   "E01CUSNA2",
                                   "E01PLPAID",
                                   "E01PLPIPD",
                                   "E01PLPIPM",
                                   "E01PLPPLP",
                                   "E01PLPRUT",
                                   "E01PLPSRU",
                                   "E01PLPACT",
                                   "E01PLPTAR",
                                   "E01PLPPSR",
                                   "E01PLPPAC",
                                   "E01PLPPTA",
                                   "E01PLPEST",
                                   "E01XXXEST",
                                   "E01DESRUT",
                                   "E01DESAC1",
                                   "E01DESAC2",
                                   "E01PLPEJE",
                                   "E01XXXEJE",
                                   "E01OPECDE"
                                 };
  final static String fid = "1060403113513";
  final static String rid = "3FB638F2093D2";
  final static String fmtname = "EDP074901";
  final int FIELDCOUNT = 33;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private DecimalField fieldE01PLPNPR = null;
  private DecimalField fieldE01PLPCUN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01CUSNA2 = null;
  private CharacterField fieldE01PLPAID = null;
  private DecimalField fieldE01PLPIPD = null;
  private DecimalField fieldE01PLPIPM = null;
  private DecimalField fieldE01PLPPLP = null;
  private CharacterField fieldE01PLPRUT = null;
  private DecimalField fieldE01PLPSRU = null;
  private CharacterField fieldE01PLPACT = null;
  private CharacterField fieldE01PLPTAR = null;
  private DecimalField fieldE01PLPPSR = null;
  private CharacterField fieldE01PLPPAC = null;
  private CharacterField fieldE01PLPPTA = null;
  private CharacterField fieldE01PLPEST = null;
  private CharacterField fieldE01XXXEST = null;
  private CharacterField fieldE01DESRUT = null;
  private CharacterField fieldE01DESAC1 = null;
  private CharacterField fieldE01DESAC2 = null;
  private CharacterField fieldE01PLPEJE = null;
  private CharacterField fieldE01XXXEJE = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP074901Message.
  */
  public EDP074901Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 371;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01PLPNPR =
    new DecimalField(message, HEADERSIZE + 43, 13, 0, "E01PLPNPR");
    fields[11] = fieldE01PLPCUN =
    new DecimalField(message, HEADERSIZE + 56, 10, 0, "E01PLPCUN");
    fields[12] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 66, 35, "E01CUSNA1");
    fields[13] = fieldE01CUSNA2 =
    new CharacterField(message, HEADERSIZE + 101, 35, "E01CUSNA2");
    fields[14] = fieldE01PLPAID =
    new CharacterField(message, HEADERSIZE + 136, 10, "E01PLPAID");
    fields[15] = fieldE01PLPIPD =
    new DecimalField(message, HEADERSIZE + 146, 3, 0, "E01PLPIPD");
    fields[16] = fieldE01PLPIPM =
    new DecimalField(message, HEADERSIZE + 149, 3, 0, "E01PLPIPM");
    fields[17] = fieldE01PLPPLP =
    new DecimalField(message, HEADERSIZE + 152, 3, 0, "E01PLPPLP");
    fields[18] = fieldE01PLPRUT =
    new CharacterField(message, HEADERSIZE + 155, 4, "E01PLPRUT");
    fields[19] = fieldE01PLPSRU =
    new DecimalField(message, HEADERSIZE + 159, 7, 2, "E01PLPSRU");
    fields[20] = fieldE01PLPACT =
    new CharacterField(message, HEADERSIZE + 166, 4, "E01PLPACT");
    fields[21] = fieldE01PLPTAR =
    new CharacterField(message, HEADERSIZE + 170, 4, "E01PLPTAR");
    fields[22] = fieldE01PLPPSR =
    new DecimalField(message, HEADERSIZE + 174, 7, 2, "E01PLPPSR");
    fields[23] = fieldE01PLPPAC =
    new CharacterField(message, HEADERSIZE + 181, 4, "E01PLPPAC");
    fields[24] = fieldE01PLPPTA =
    new CharacterField(message, HEADERSIZE + 185, 4, "E01PLPPTA");
    fields[25] = fieldE01PLPEST =
    new CharacterField(message, HEADERSIZE + 189, 2, "E01PLPEST");
    fields[26] = fieldE01XXXEST =
    new CharacterField(message, HEADERSIZE + 191, 35, "E01XXXEST");
    fields[27] = fieldE01DESRUT =
    new CharacterField(message, HEADERSIZE + 226, 35, "E01DESRUT");
    fields[28] = fieldE01DESAC1 =
    new CharacterField(message, HEADERSIZE + 261, 35, "E01DESAC1");
    fields[29] = fieldE01DESAC2 =
    new CharacterField(message, HEADERSIZE + 296, 35, "E01DESAC2");
    fields[30] = fieldE01PLPEJE =
    new CharacterField(message, HEADERSIZE + 331, 4, "E01PLPEJE");
    fields[31] = fieldE01XXXEJE =
    new CharacterField(message, HEADERSIZE + 335, 35, "E01XXXEJE");
    fields[32] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 370, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01PLPNPR using a String value.
  */
  public void setE01PLPNPR(String newvalue)
  {
    fieldE01PLPNPR.setString(newvalue);
  }

  /**
  * Get value of field E01PLPNPR as a String.
  */
  public String getE01PLPNPR()
  {
    return fieldE01PLPNPR.getString();
  }

  /**
  * Set numeric field E01PLPNPR using a BigDecimal value.
  */
  public void setE01PLPNPR(BigDecimal newvalue)
  {
    fieldE01PLPNPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPNPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPNPR()
  {
    return fieldE01PLPNPR.getBigDecimal();
  }

  /**
  * Set field E01PLPCUN using a String value.
  */
  public void setE01PLPCUN(String newvalue)
  {
    fieldE01PLPCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PLPCUN as a String.
  */
  public String getE01PLPCUN()
  {
    return fieldE01PLPCUN.getString();
  }

  /**
  * Set numeric field E01PLPCUN using a BigDecimal value.
  */
  public void setE01PLPCUN(BigDecimal newvalue)
  {
    fieldE01PLPCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPCUN()
  {
    return fieldE01PLPCUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CUSNA2 using a String value.
  */
  public void setE01CUSNA2(String newvalue)
  {
    fieldE01CUSNA2.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA2 as a String.
  */
  public String getE01CUSNA2()
  {
    return fieldE01CUSNA2.getString();
  }

  /**
  * Set field E01PLPAID using a String value.
  */
  public void setE01PLPAID(String newvalue)
  {
    fieldE01PLPAID.setString(newvalue);
  }

  /**
  * Get value of field E01PLPAID as a String.
  */
  public String getE01PLPAID()
  {
    return fieldE01PLPAID.getString();
  }

  /**
  * Set field E01PLPIPD using a String value.
  */
  public void setE01PLPIPD(String newvalue)
  {
    fieldE01PLPIPD.setString(newvalue);
  }

  /**
  * Get value of field E01PLPIPD as a String.
  */
  public String getE01PLPIPD()
  {
    return fieldE01PLPIPD.getString();
  }

  /**
  * Set numeric field E01PLPIPD using a BigDecimal value.
  */
  public void setE01PLPIPD(BigDecimal newvalue)
  {
    fieldE01PLPIPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPIPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPIPD()
  {
    return fieldE01PLPIPD.getBigDecimal();
  }

  /**
  * Set field E01PLPIPM using a String value.
  */
  public void setE01PLPIPM(String newvalue)
  {
    fieldE01PLPIPM.setString(newvalue);
  }

  /**
  * Get value of field E01PLPIPM as a String.
  */
  public String getE01PLPIPM()
  {
    return fieldE01PLPIPM.getString();
  }

  /**
  * Set numeric field E01PLPIPM using a BigDecimal value.
  */
  public void setE01PLPIPM(BigDecimal newvalue)
  {
    fieldE01PLPIPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPIPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPIPM()
  {
    return fieldE01PLPIPM.getBigDecimal();
  }

  /**
  * Set field E01PLPPLP using a String value.
  */
  public void setE01PLPPLP(String newvalue)
  {
    fieldE01PLPPLP.setString(newvalue);
  }

  /**
  * Get value of field E01PLPPLP as a String.
  */
  public String getE01PLPPLP()
  {
    return fieldE01PLPPLP.getString();
  }

  /**
  * Set numeric field E01PLPPLP using a BigDecimal value.
  */
  public void setE01PLPPLP(BigDecimal newvalue)
  {
    fieldE01PLPPLP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPPLP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPPLP()
  {
    return fieldE01PLPPLP.getBigDecimal();
  }

  /**
  * Set field E01PLPRUT using a String value.
  */
  public void setE01PLPRUT(String newvalue)
  {
    fieldE01PLPRUT.setString(newvalue);
  }

  /**
  * Get value of field E01PLPRUT as a String.
  */
  public String getE01PLPRUT()
  {
    return fieldE01PLPRUT.getString();
  }

  /**
  * Set field E01PLPSRU using a String value.
  */
  public void setE01PLPSRU(String newvalue)
  {
    fieldE01PLPSRU.setString(newvalue);
  }

  /**
  * Get value of field E01PLPSRU as a String.
  */
  public String getE01PLPSRU()
  {
    return fieldE01PLPSRU.getString();
  }

  /**
  * Set numeric field E01PLPSRU using a BigDecimal value.
  */
  public void setE01PLPSRU(BigDecimal newvalue)
  {
    fieldE01PLPSRU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPSRU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPSRU()
  {
    return fieldE01PLPSRU.getBigDecimal();
  }

  /**
  * Set field E01PLPACT using a String value.
  */
  public void setE01PLPACT(String newvalue)
  {
    fieldE01PLPACT.setString(newvalue);
  }

  /**
  * Get value of field E01PLPACT as a String.
  */
  public String getE01PLPACT()
  {
    return fieldE01PLPACT.getString();
  }

  /**
  * Set field E01PLPTAR using a String value.
  */
  public void setE01PLPTAR(String newvalue)
  {
    fieldE01PLPTAR.setString(newvalue);
  }

  /**
  * Get value of field E01PLPTAR as a String.
  */
  public String getE01PLPTAR()
  {
    return fieldE01PLPTAR.getString();
  }

  /**
  * Set field E01PLPPSR using a String value.
  */
  public void setE01PLPPSR(String newvalue)
  {
    fieldE01PLPPSR.setString(newvalue);
  }

  /**
  * Get value of field E01PLPPSR as a String.
  */
  public String getE01PLPPSR()
  {
    return fieldE01PLPPSR.getString();
  }

  /**
  * Set numeric field E01PLPPSR using a BigDecimal value.
  */
  public void setE01PLPPSR(BigDecimal newvalue)
  {
    fieldE01PLPPSR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PLPPSR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PLPPSR()
  {
    return fieldE01PLPPSR.getBigDecimal();
  }

  /**
  * Set field E01PLPPAC using a String value.
  */
  public void setE01PLPPAC(String newvalue)
  {
    fieldE01PLPPAC.setString(newvalue);
  }

  /**
  * Get value of field E01PLPPAC as a String.
  */
  public String getE01PLPPAC()
  {
    return fieldE01PLPPAC.getString();
  }

  /**
  * Set field E01PLPPTA using a String value.
  */
  public void setE01PLPPTA(String newvalue)
  {
    fieldE01PLPPTA.setString(newvalue);
  }

  /**
  * Get value of field E01PLPPTA as a String.
  */
  public String getE01PLPPTA()
  {
    return fieldE01PLPPTA.getString();
  }

  /**
  * Set field E01PLPEST using a String value.
  */
  public void setE01PLPEST(String newvalue)
  {
    fieldE01PLPEST.setString(newvalue);
  }

  /**
  * Get value of field E01PLPEST as a String.
  */
  public String getE01PLPEST()
  {
    return fieldE01PLPEST.getString();
  }

  /**
  * Set field E01XXXEST using a String value.
  */
  public void setE01XXXEST(String newvalue)
  {
    fieldE01XXXEST.setString(newvalue);
  }

  /**
  * Get value of field E01XXXEST as a String.
  */
  public String getE01XXXEST()
  {
    return fieldE01XXXEST.getString();
  }

  /**
  * Set field E01DESRUT using a String value.
  */
  public void setE01DESRUT(String newvalue)
  {
    fieldE01DESRUT.setString(newvalue);
  }

  /**
  * Get value of field E01DESRUT as a String.
  */
  public String getE01DESRUT()
  {
    return fieldE01DESRUT.getString();
  }

  /**
  * Set field E01DESAC1 using a String value.
  */
  public void setE01DESAC1(String newvalue)
  {
    fieldE01DESAC1.setString(newvalue);
  }

  /**
  * Get value of field E01DESAC1 as a String.
  */
  public String getE01DESAC1()
  {
    return fieldE01DESAC1.getString();
  }

  /**
  * Set field E01DESAC2 using a String value.
  */
  public void setE01DESAC2(String newvalue)
  {
    fieldE01DESAC2.setString(newvalue);
  }

  /**
  * Get value of field E01DESAC2 as a String.
  */
  public String getE01DESAC2()
  {
    return fieldE01DESAC2.getString();
  }

  /**
  * Set field E01PLPEJE using a String value.
  */
  public void setE01PLPEJE(String newvalue)
  {
    fieldE01PLPEJE.setString(newvalue);
  }

  /**
  * Get value of field E01PLPEJE as a String.
  */
  public String getE01PLPEJE()
  {
    return fieldE01PLPEJE.getString();
  }

  /**
  * Set field E01XXXEJE using a String value.
  */
  public void setE01XXXEJE(String newvalue)
  {
    fieldE01XXXEJE.setString(newvalue);
  }

  /**
  * Get value of field E01XXXEJE as a String.
  */
  public String getE01XXXEJE()
  {
    return fieldE01XXXEJE.getString();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
