package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS210501 physical file definition.
* 
* File level identifier is 1100105112732.
* Record format level identifier is 51FD4451846AA.
*/

public class ESS210501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "E01VENNME",
                                     "E01VENNUM",
                                     "E01VENDATB",
                                     "E01VENDATE",
                                     "E01VENAMT",
                                     "E01VENREF",
                                     "E01VENACC",
                                     "E01VENDSC",
                                     "E01USERPMT",
                                     "E01CUSPMT",
                                     "E01PMTNUM"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "E01VENNME",
                                   "E01VENNUM",
                                   "E01VENDATB",
                                   "E01VENDATE",
                                   "E01VENAMT",
                                   "E01VENREF",
                                   "E01VENACC",
                                   "E01VENDSC",
                                   "E01USERPMT",
                                   "E01CUSPMT",
                                   "E01PMTNUM"
                                 };
  final static String fid = "1100105112732";
  final static String rid = "51FD4451846AA";
  final static String fmtname = "ESS210501";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldE01VENNME = null;
  private DecimalField fieldE01VENNUM = null;
  private DecimalField fieldE01VENDATB = null;
  private DecimalField fieldE01VENDATE = null;
  private DecimalField fieldE01VENAMT = null;
  private CharacterField fieldE01VENREF = null;
  private CharacterField fieldE01VENACC = null;
  private CharacterField fieldE01VENDSC = null;
  private CharacterField fieldE01USERPMT = null;
  private DecimalField fieldE01CUSPMT = null;
  private DecimalField fieldE01PMTNUM = null;

  /**
  * Constructor for ESS210501Message.
  */
  public ESS210501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 224;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 20, 2, "H01SCRCOD");
    fields[3] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 22, 4, "H01OPECOD");
    fields[4] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 26, 1, "H01FLGMAS");
    fields[5] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 27, 1, "H01FLGWK1");
    fields[6] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 28, 1, "H01FLGWK2");
    fields[7] = fieldE01VENNME =
    new CharacterField(message, HEADERSIZE + 29, 50, "E01VENNME");
    fields[8] = fieldE01VENNUM =
    new DecimalField(message, HEADERSIZE + 79, 10, 0, "E01VENNUM");
    fields[9] = fieldE01VENDATB =
    new DecimalField(message, HEADERSIZE + 89, 9, 0, "E01VENDATB");
    fields[10] = fieldE01VENDATE =
    new DecimalField(message, HEADERSIZE + 98, 9, 0, "E01VENDATE");
    fields[11] = fieldE01VENAMT =
    new DecimalField(message, HEADERSIZE + 107, 17, 2, "E01VENAMT");
    fields[12] = fieldE01VENREF =
    new CharacterField(message, HEADERSIZE + 124, 20, "E01VENREF");
    fields[13] = fieldE01VENACC =
    new CharacterField(message, HEADERSIZE + 144, 20, "E01VENACC");
    fields[14] = fieldE01VENDSC =
    new CharacterField(message, HEADERSIZE + 164, 30, "E01VENDSC");
    fields[15] = fieldE01USERPMT =
    new CharacterField(message, HEADERSIZE + 194, 10, "E01USERPMT");
    fields[16] = fieldE01CUSPMT =
    new DecimalField(message, HEADERSIZE + 204, 10, 0, "E01CUSPMT");
    fields[17] = fieldE01PMTNUM =
    new DecimalField(message, HEADERSIZE + 214, 10, 0, "E01PMTNUM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field E01VENNME using a String value.
  */
  public void setE01VENNME(String newvalue)
  {
    fieldE01VENNME.setString(newvalue);
  }

  /**
  * Get value of field E01VENNME as a String.
  */
  public String getE01VENNME()
  {
    return fieldE01VENNME.getString();
  }

  /**
  * Set field E01VENNUM using a String value.
  */
  public void setE01VENNUM(String newvalue)
  {
    fieldE01VENNUM.setString(newvalue);
  }

  /**
  * Get value of field E01VENNUM as a String.
  */
  public String getE01VENNUM()
  {
    return fieldE01VENNUM.getString();
  }

  /**
  * Set numeric field E01VENNUM using a BigDecimal value.
  */
  public void setE01VENNUM(BigDecimal newvalue)
  {
    fieldE01VENNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01VENNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01VENNUM()
  {
    return fieldE01VENNUM.getBigDecimal();
  }

  /**
  * Set field E01VENDATB using a String value.
  */
  public void setE01VENDATB(String newvalue)
  {
    fieldE01VENDATB.setString(newvalue);
  }

  /**
  * Get value of field E01VENDATB as a String.
  */
  public String getE01VENDATB()
  {
    return fieldE01VENDATB.getString();
  }

  /**
  * Set numeric field E01VENDATB using a BigDecimal value.
  */
  public void setE01VENDATB(BigDecimal newvalue)
  {
    fieldE01VENDATB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01VENDATB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01VENDATB()
  {
    return fieldE01VENDATB.getBigDecimal();
  }

  /**
  * Set field E01VENDATE using a String value.
  */
  public void setE01VENDATE(String newvalue)
  {
    fieldE01VENDATE.setString(newvalue);
  }

  /**
  * Get value of field E01VENDATE as a String.
  */
  public String getE01VENDATE()
  {
    return fieldE01VENDATE.getString();
  }

  /**
  * Set numeric field E01VENDATE using a BigDecimal value.
  */
  public void setE01VENDATE(BigDecimal newvalue)
  {
    fieldE01VENDATE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01VENDATE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01VENDATE()
  {
    return fieldE01VENDATE.getBigDecimal();
  }

  /**
  * Set field E01VENAMT using a String value.
  */
  public void setE01VENAMT(String newvalue)
  {
    fieldE01VENAMT.setString(newvalue);
  }

  /**
  * Get value of field E01VENAMT as a String.
  */
  public String getE01VENAMT()
  {
    return fieldE01VENAMT.getString();
  }

  /**
  * Set numeric field E01VENAMT using a BigDecimal value.
  */
  public void setE01VENAMT(BigDecimal newvalue)
  {
    fieldE01VENAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01VENAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01VENAMT()
  {
    return fieldE01VENAMT.getBigDecimal();
  }

  /**
  * Set field E01VENREF using a String value.
  */
  public void setE01VENREF(String newvalue)
  {
    fieldE01VENREF.setString(newvalue);
  }

  /**
  * Get value of field E01VENREF as a String.
  */
  public String getE01VENREF()
  {
    return fieldE01VENREF.getString();
  }

  /**
  * Set field E01VENACC using a String value.
  */
  public void setE01VENACC(String newvalue)
  {
    fieldE01VENACC.setString(newvalue);
  }

  /**
  * Get value of field E01VENACC as a String.
  */
  public String getE01VENACC()
  {
    return fieldE01VENACC.getString();
  }

  /**
  * Set field E01VENDSC using a String value.
  */
  public void setE01VENDSC(String newvalue)
  {
    fieldE01VENDSC.setString(newvalue);
  }

  /**
  * Get value of field E01VENDSC as a String.
  */
  public String getE01VENDSC()
  {
    return fieldE01VENDSC.getString();
  }

  /**
  * Set field E01USERPMT using a String value.
  */
  public void setE01USERPMT(String newvalue)
  {
    fieldE01USERPMT.setString(newvalue);
  }

  /**
  * Get value of field E01USERPMT as a String.
  */
  public String getE01USERPMT()
  {
    return fieldE01USERPMT.getString();
  }

  /**
  * Set field E01CUSPMT using a String value.
  */
  public void setE01CUSPMT(String newvalue)
  {
    fieldE01CUSPMT.setString(newvalue);
  }

  /**
  * Get value of field E01CUSPMT as a String.
  */
  public String getE01CUSPMT()
  {
    return fieldE01CUSPMT.getString();
  }

  /**
  * Set numeric field E01CUSPMT using a BigDecimal value.
  */
  public void setE01CUSPMT(BigDecimal newvalue)
  {
    fieldE01CUSPMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSPMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSPMT()
  {
    return fieldE01CUSPMT.getBigDecimal();
  }

  /**
  * Set field E01PMTNUM using a String value.
  */
  public void setE01PMTNUM(String newvalue)
  {
    fieldE01PMTNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PMTNUM as a String.
  */
  public String getE01PMTNUM()
  {
    return fieldE01PMTNUM.getString();
  }

  /**
  * Set numeric field E01PMTNUM using a BigDecimal value.
  */
  public void setE01PMTNUM(BigDecimal newvalue)
  {
    fieldE01PMTNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PMTNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PMTNUM()
  {
    return fieldE01PMTNUM.getBigDecimal();
  }

}
