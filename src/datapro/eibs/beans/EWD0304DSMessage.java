package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0304DS physical file definition.
* 
* File level identifier is 1011206125946.
* Record format level identifier is 3894B431A4579.
*/

public class EWD0304DSMessage extends MessageRecord
{
  final int FIELDCOUNT = 11;
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDTYP = null;
  private CharacterField fieldSWDDOC = null;
  private CharacterField fieldSWDDSC = null;
  private CharacterField fieldSWDBNK = null;
  private CharacterField fieldSWDCCY = null;
  private CharacterField fieldSWDCLS = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0304DSMessage.
  */
  public EWD0304DSMessage()
  {
	createFields();
	initialize();
  }  

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
	recordsize = 70;
	fileid = "1011206125946";
	recordid = "3894B431A4579";
	message = new byte[getByteLength()];
	formatname = "EWD0304DS";
	fieldnames = new String[FIELDCOUNT];
	tagnames = new String[FIELDCOUNT];
	fields = new MessageField[FIELDCOUNT];

	fieldnames[0] = "RWDUSR";
	tagnames[0] = "RWDUSR";
	fields[0] = fieldRWDUSR =
	new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
	fieldnames[1] = "RWDTYP";
	tagnames[1] = "RWDTYP";
	fields[1] = fieldRWDTYP =
	new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
	fieldnames[2] = "RWDFRC";
	tagnames[2] = "RWDFRC";
	fields[2] = fieldRWDFRC =
	new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
	fieldnames[3] = "SWDTYP";
	tagnames[3] = "SWDTYP";
	fields[3] = fieldSWDTYP =
	new CharacterField(message, HEADERSIZE + 19, 2, "SWDTYP");
	fieldnames[4] = "SWDDOC";
	tagnames[4] = "SWDDOC";
	fields[4] = fieldSWDDOC =
	new CharacterField(message, HEADERSIZE + 21, 4, "SWDDOC");
	fieldnames[5] = "SWDDSC";
	tagnames[5] = "SWDDSC";
	fields[5] = fieldSWDDSC =
	new CharacterField(message, HEADERSIZE + 25, 30, "SWDDSC");
	fieldnames[6] = "SWDBNK";
	tagnames[6] = "SWDBNK";
	fields[6] = fieldSWDBNK =
	new CharacterField(message, HEADERSIZE + 55, 2, "SWDBNK");
	fieldnames[7] = "SWDCCY";
	tagnames[7] = "SWDCCY";
	fields[7] = fieldSWDCCY =
	new CharacterField(message, HEADERSIZE + 57, 3, "SWDCCY");
	fieldnames[8] = "SWDCLS";
	tagnames[8] = "SWDCLS";
	fields[8] = fieldSWDCLS =
	new CharacterField(message, HEADERSIZE + 60, 1, "SWDCLS");
	fieldnames[9] = "SWDREC";
	tagnames[9] = "SWDREC";
	fields[9] = fieldSWDREC =
	new DecimalField(message, HEADERSIZE + 61, 8, 0, "SWDREC");
	fieldnames[10] = "SWDOPE";
	tagnames[10] = "SWDOPE";
	fields[10] = fieldSWDOPE =
	new CharacterField(message, HEADERSIZE + 69, 1, "SWDOPE");
  }  

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
	fieldRWDUSR.setString(newvalue);
  }  

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
	return fieldRWDUSR.getString();
  }  

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
	fieldRWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
	return fieldRWDTYP.getString();
  }  

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
	fieldRWDFRC.setString(newvalue);
  }  

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
	return fieldRWDFRC.getString();
  }  

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
	fieldRWDFRC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
	return fieldRWDFRC.getBigDecimal();
  }  

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
	fieldSWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
	return fieldSWDTYP.getString();
  }  

  /**
  * Set field SWDDOC using a String value.
  */
  public void setSWDDOC(String newvalue)
  {
	fieldSWDDOC.setString(newvalue);
  }  

  /**
  * Get value of field SWDDOC as a String.
  */
  public String getSWDDOC()
  {
	return fieldSWDDOC.getString();
  }  

  /**
  * Set field SWDDSC using a String value.
  */
  public void setSWDDSC(String newvalue)
  {
	fieldSWDDSC.setString(newvalue);
  }  

  /**
  * Get value of field SWDDSC as a String.
  */
  public String getSWDDSC()
  {
	return fieldSWDDSC.getString();
  }  

  /**
  * Set field SWDBNK using a String value.
  */
  public void setSWDBNK(String newvalue)
  {
	fieldSWDBNK.setString(newvalue);
  }  

  /**
  * Get value of field SWDBNK as a String.
  */
  public String getSWDBNK()
  {
	return fieldSWDBNK.getString();
  }  

  /**
  * Set field SWDCCY using a String value.
  */
  public void setSWDCCY(String newvalue)
  {
	fieldSWDCCY.setString(newvalue);
  }  

  /**
  * Get value of field SWDCCY as a String.
  */
  public String getSWDCCY()
  {
	return fieldSWDCCY.getString();
  }  

  /**
  * Set field SWDCLS using a String value.
  */
  public void setSWDCLS(String newvalue)
  {
	fieldSWDCLS.setString(newvalue);
  }  

  /**
  * Get value of field SWDCLS as a String.
  */
  public String getSWDCLS()
  {
	return fieldSWDCLS.getString();
  }  

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
	fieldSWDREC.setString(newvalue);
  }  

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
	return fieldSWDREC.getString();
  }  

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
	fieldSWDREC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
	return fieldSWDREC.getBigDecimal();
  }  

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
	fieldSWDOPE.setString(newvalue);
  }  

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
	return fieldSWDOPE.getString();
  }  

}