package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EOF000002 physical file definition.
* 
* File level identifier is 1041203182522.
* Record format level identifier is 3280996A98F31.
*/

public class EOF000002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02OFCNXO",
                                     "E02OFNBNK",
                                     "E02OFNCCY",
                                     "E02OFNFTY",
                                     "E02OFNBRN",
                                     "E02OFNNUM",
                                     "E02BRNNME",
                                     "E02CNDEML",
                                     "E02CNDPHN",
                                     "E02CNDPXT",
                                     "E02CNDCCN",
                                     "E02CNDRUT",
                                     "E02CNDBRN",
                                     "E02CNDBNK",
                                     "E02CNDTYP",
                                     "E02CNDSUP",
                                     "E02OFNOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02OFCNXO",
                                   "E02OFNBNK",
                                   "E02OFNCCY",
                                   "E02OFNFTY",
                                   "E02OFNBRN",
                                   "E02OFNNUM",
                                   "E02BRNNME",
                                   "E02CNDEML",
                                   "E02CNDPHN",
                                   "E02CNDPXT",
                                   "E02CNDCCN",
                                   "E02CNDRUT",
                                   "E02CNDBRN",
                                   "E02CNDBNK",
                                   "E02CNDTYP",
                                   "E02CNDSUP",
                                   "E02OFNOPE"
                                 };
  final static String fid = "1041203182522";
  final static String rid = "3280996A98F31";
  final static String fmtname = "EOF000002";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02OFCNXO = null;
  private CharacterField fieldE02OFNBNK = null;
  private CharacterField fieldE02OFNCCY = null;
  private CharacterField fieldE02OFNFTY = null;
  private DecimalField fieldE02OFNBRN = null;
  private DecimalField fieldE02OFNNUM = null;
  private CharacterField fieldE02BRNNME = null;
  private CharacterField fieldE02CNDEML = null;
  private DecimalField fieldE02CNDPHN = null;
  private DecimalField fieldE02CNDPXT = null;
  private DecimalField fieldE02CNDCCN = null;
  private CharacterField fieldE02CNDRUT = null;
  private DecimalField fieldE02CNDBRN = null;
  private CharacterField fieldE02CNDBNK = null;
  private CharacterField fieldE02CNDTYP = null;
  private CharacterField fieldE02CNDSUP = null;
  private CharacterField fieldE02OFNOPE = null;

  /**
  * Constructor for EOF000002Message.
  */
  public EOF000002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 194;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02OFCNXO =
    new CharacterField(message, HEADERSIZE + 42, 1, "E02OFCNXO");
    fields[10] = fieldE02OFNBNK =
    new CharacterField(message, HEADERSIZE + 43, 2, "E02OFNBNK");
    fields[11] = fieldE02OFNCCY =
    new CharacterField(message, HEADERSIZE + 45, 3, "E02OFNCCY");
    fields[12] = fieldE02OFNFTY =
    new CharacterField(message, HEADERSIZE + 48, 1, "E02OFNFTY");
    fields[13] = fieldE02OFNBRN =
    new DecimalField(message, HEADERSIZE + 49, 4, 0, "E02OFNBRN");
    fields[14] = fieldE02OFNNUM =
    new DecimalField(message, HEADERSIZE + 53, 10, 0, "E02OFNNUM");
    fields[15] = fieldE02BRNNME =
    new CharacterField(message, HEADERSIZE + 63, 35, "E02BRNNME");
    fields[16] = fieldE02CNDEML =
    new CharacterField(message, HEADERSIZE + 98, 40, "E02CNDEML");
    fields[17] = fieldE02CNDPHN =
    new DecimalField(message, HEADERSIZE + 138, 12, 0, "E02CNDPHN");
    fields[18] = fieldE02CNDPXT =
    new DecimalField(message, HEADERSIZE + 150, 5, 0, "E02CNDPXT");
    fields[19] = fieldE02CNDCCN =
    new DecimalField(message, HEADERSIZE + 155, 9, 0, "E02CNDCCN");
    fields[20] = fieldE02CNDRUT =
    new CharacterField(message, HEADERSIZE + 164, 15, "E02CNDRUT");
    fields[21] = fieldE02CNDBRN =
    new DecimalField(message, HEADERSIZE + 179, 4, 0, "E02CNDBRN");
    fields[22] = fieldE02CNDBNK =
    new CharacterField(message, HEADERSIZE + 183, 2, "E02CNDBNK");
    fields[23] = fieldE02CNDTYP =
    new CharacterField(message, HEADERSIZE + 185, 4, "E02CNDTYP");
    fields[24] = fieldE02CNDSUP =
    new CharacterField(message, HEADERSIZE + 189, 4, "E02CNDSUP");
    fields[25] = fieldE02OFNOPE =
    new CharacterField(message, HEADERSIZE + 193, 1, "E02OFNOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02OFCNXO using a String value.
  */
  public void setE02OFCNXO(String newvalue)
  {
    fieldE02OFCNXO.setString(newvalue);
  }

  /**
  * Get value of field E02OFCNXO as a String.
  */
  public String getE02OFCNXO()
  {
    return fieldE02OFCNXO.getString();
  }

  /**
  * Set field E02OFNBNK using a String value.
  */
  public void setE02OFNBNK(String newvalue)
  {
    fieldE02OFNBNK.setString(newvalue);
  }

  /**
  * Get value of field E02OFNBNK as a String.
  */
  public String getE02OFNBNK()
  {
    return fieldE02OFNBNK.getString();
  }

  /**
  * Set field E02OFNCCY using a String value.
  */
  public void setE02OFNCCY(String newvalue)
  {
    fieldE02OFNCCY.setString(newvalue);
  }

  /**
  * Get value of field E02OFNCCY as a String.
  */
  public String getE02OFNCCY()
  {
    return fieldE02OFNCCY.getString();
  }

  /**
  * Set field E02OFNFTY using a String value.
  */
  public void setE02OFNFTY(String newvalue)
  {
    fieldE02OFNFTY.setString(newvalue);
  }

  /**
  * Get value of field E02OFNFTY as a String.
  */
  public String getE02OFNFTY()
  {
    return fieldE02OFNFTY.getString();
  }

  /**
  * Set field E02OFNBRN using a String value.
  */
  public void setE02OFNBRN(String newvalue)
  {
    fieldE02OFNBRN.setString(newvalue);
  }

  /**
  * Get value of field E02OFNBRN as a String.
  */
  public String getE02OFNBRN()
  {
    return fieldE02OFNBRN.getString();
  }

  /**
  * Set numeric field E02OFNBRN using a BigDecimal value.
  */
  public void setE02OFNBRN(BigDecimal newvalue)
  {
    fieldE02OFNBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02OFNBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02OFNBRN()
  {
    return fieldE02OFNBRN.getBigDecimal();
  }

  /**
  * Set field E02OFNNUM using a String value.
  */
  public void setE02OFNNUM(String newvalue)
  {
    fieldE02OFNNUM.setString(newvalue);
  }

  /**
  * Get value of field E02OFNNUM as a String.
  */
  public String getE02OFNNUM()
  {
    return fieldE02OFNNUM.getString();
  }

  /**
  * Set numeric field E02OFNNUM using a BigDecimal value.
  */
  public void setE02OFNNUM(BigDecimal newvalue)
  {
    fieldE02OFNNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02OFNNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02OFNNUM()
  {
    return fieldE02OFNNUM.getBigDecimal();
  }

  /**
  * Set field E02BRNNME using a String value.
  */
  public void setE02BRNNME(String newvalue)
  {
    fieldE02BRNNME.setString(newvalue);
  }

  /**
  * Get value of field E02BRNNME as a String.
  */
  public String getE02BRNNME()
  {
    return fieldE02BRNNME.getString();
  }

  /**
  * Set field E02CNDEML using a String value.
  */
  public void setE02CNDEML(String newvalue)
  {
    fieldE02CNDEML.setString(newvalue);
  }

  /**
  * Get value of field E02CNDEML as a String.
  */
  public String getE02CNDEML()
  {
    return fieldE02CNDEML.getString();
  }

  /**
  * Set field E02CNDPHN using a String value.
  */
  public void setE02CNDPHN(String newvalue)
  {
    fieldE02CNDPHN.setString(newvalue);
  }

  /**
  * Get value of field E02CNDPHN as a String.
  */
  public String getE02CNDPHN()
  {
    return fieldE02CNDPHN.getString();
  }

  /**
  * Set numeric field E02CNDPHN using a BigDecimal value.
  */
  public void setE02CNDPHN(BigDecimal newvalue)
  {
    fieldE02CNDPHN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CNDPHN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CNDPHN()
  {
    return fieldE02CNDPHN.getBigDecimal();
  }

  /**
  * Set field E02CNDPXT using a String value.
  */
  public void setE02CNDPXT(String newvalue)
  {
    fieldE02CNDPXT.setString(newvalue);
  }

  /**
  * Get value of field E02CNDPXT as a String.
  */
  public String getE02CNDPXT()
  {
    return fieldE02CNDPXT.getString();
  }

  /**
  * Set numeric field E02CNDPXT using a BigDecimal value.
  */
  public void setE02CNDPXT(BigDecimal newvalue)
  {
    fieldE02CNDPXT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CNDPXT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CNDPXT()
  {
    return fieldE02CNDPXT.getBigDecimal();
  }

  /**
  * Set field E02CNDCCN using a String value.
  */
  public void setE02CNDCCN(String newvalue)
  {
    fieldE02CNDCCN.setString(newvalue);
  }

  /**
  * Get value of field E02CNDCCN as a String.
  */
  public String getE02CNDCCN()
  {
    return fieldE02CNDCCN.getString();
  }

  /**
  * Set numeric field E02CNDCCN using a BigDecimal value.
  */
  public void setE02CNDCCN(BigDecimal newvalue)
  {
    fieldE02CNDCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CNDCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CNDCCN()
  {
    return fieldE02CNDCCN.getBigDecimal();
  }

  /**
  * Set field E02CNDRUT using a String value.
  */
  public void setE02CNDRUT(String newvalue)
  {
    fieldE02CNDRUT.setString(newvalue);
  }

  /**
  * Get value of field E02CNDRUT as a String.
  */
  public String getE02CNDRUT()
  {
    return fieldE02CNDRUT.getString();
  }

  /**
  * Set field E02CNDBRN using a String value.
  */
  public void setE02CNDBRN(String newvalue)
  {
    fieldE02CNDBRN.setString(newvalue);
  }

  /**
  * Get value of field E02CNDBRN as a String.
  */
  public String getE02CNDBRN()
  {
    return fieldE02CNDBRN.getString();
  }

  /**
  * Set numeric field E02CNDBRN using a BigDecimal value.
  */
  public void setE02CNDBRN(BigDecimal newvalue)
  {
    fieldE02CNDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CNDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CNDBRN()
  {
    return fieldE02CNDBRN.getBigDecimal();
  }

  /**
  * Set field E02CNDBNK using a String value.
  */
  public void setE02CNDBNK(String newvalue)
  {
    fieldE02CNDBNK.setString(newvalue);
  }

  /**
  * Get value of field E02CNDBNK as a String.
  */
  public String getE02CNDBNK()
  {
    return fieldE02CNDBNK.getString();
  }

  /**
  * Set field E02CNDTYP using a String value.
  */
  public void setE02CNDTYP(String newvalue)
  {
    fieldE02CNDTYP.setString(newvalue);
  }

  /**
  * Get value of field E02CNDTYP as a String.
  */
  public String getE02CNDTYP()
  {
    return fieldE02CNDTYP.getString();
  }

  /**
  * Set field E02CNDSUP using a String value.
  */
  public void setE02CNDSUP(String newvalue)
  {
    fieldE02CNDSUP.setString(newvalue);
  }

  /**
  * Get value of field E02CNDSUP as a String.
  */
  public String getE02CNDSUP()
  {
    return fieldE02CNDSUP.getString();
  }

  /**
  * Set field E02OFNOPE using a String value.
  */
  public void setE02OFNOPE(String newvalue)
  {
    fieldE02OFNOPE.setString(newvalue);
  }

  /**
  * Get value of field E02OFNOPE as a String.
  */
  public String getE02OFNOPE()
  {
    return fieldE02OFNOPE.getString();
  }

}
