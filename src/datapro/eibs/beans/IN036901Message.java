package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from IN036901 physical file definition.
* 
* File level identifier is 1030213133409.
* Record format level identifier is 4C4E8D73D92E2.
*/

public class IN036901Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H69USERID",
                                     "H69OPECOD",
                                     "H69FLGMAS",
                                     "E69RATCY1",
                                     "E69RATCY2",
                                     "E69RATAMT"
                                   };
  final static String tnames[] = {
                                   "H69USERID",
                                   "H69OPECOD",
                                   "H69FLGMAS",
                                   "E69RATCY1",
                                   "E69RATCY2",
                                   "E69RATAMT"
                                 };
  final static String fid = "1030213133409";
  final static String rid = "4C4E8D73D92E2";
  final static String fmtname = "IN036901";
  final int FIELDCOUNT = 6;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH69USERID = null;
  private CharacterField fieldH69OPECOD = null;
  private CharacterField fieldH69FLGMAS = null;
  private CharacterField fieldE69RATCY1 = null;
  private CharacterField fieldE69RATCY2 = null;
  private DecimalField fieldE69RATAMT = null;

  /**
  * Constructor for IN036901Message.
  */
  public IN036901Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 38;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH69USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H69USERID");
    fields[1] = fieldH69OPECOD =
    new CharacterField(message, HEADERSIZE + 10, 4, "H69OPECOD");
    fields[2] = fieldH69FLGMAS =
    new CharacterField(message, HEADERSIZE + 14, 1, "H69FLGMAS");
    fields[3] = fieldE69RATCY1 =
    new CharacterField(message, HEADERSIZE + 15, 3, "E69RATCY1");
    fields[4] = fieldE69RATCY2 =
    new CharacterField(message, HEADERSIZE + 18, 3, "E69RATCY2");
    fields[5] = fieldE69RATAMT =
    new DecimalField(message, HEADERSIZE + 21, 17, 2, "E69RATAMT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H69USERID using a String value.
  */
  public void setH69USERID(String newvalue)
  {
    fieldH69USERID.setString(newvalue);
  }

  /**
  * Get value of field H69USERID as a String.
  */
  public String getH69USERID()
  {
    return fieldH69USERID.getString();
  }

  /**
  * Set field H69OPECOD using a String value.
  */
  public void setH69OPECOD(String newvalue)
  {
    fieldH69OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H69OPECOD as a String.
  */
  public String getH69OPECOD()
  {
    return fieldH69OPECOD.getString();
  }

  /**
  * Set field H69FLGMAS using a String value.
  */
  public void setH69FLGMAS(String newvalue)
  {
    fieldH69FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H69FLGMAS as a String.
  */
  public String getH69FLGMAS()
  {
    return fieldH69FLGMAS.getString();
  }

  /**
  * Set field E69RATCY1 using a String value.
  */
  public void setE69RATCY1(String newvalue)
  {
    fieldE69RATCY1.setString(newvalue);
  }

  /**
  * Get value of field E69RATCY1 as a String.
  */
  public String getE69RATCY1()
  {
    return fieldE69RATCY1.getString();
  }

  /**
  * Set field E69RATCY2 using a String value.
  */
  public void setE69RATCY2(String newvalue)
  {
    fieldE69RATCY2.setString(newvalue);
  }

  /**
  * Get value of field E69RATCY2 as a String.
  */
  public String getE69RATCY2()
  {
    return fieldE69RATCY2.getString();
  }

  /**
  * Set field E69RATAMT using a String value.
  */
  public void setE69RATAMT(String newvalue)
  {
    fieldE69RATAMT.setString(newvalue);
  }

  /**
  * Get value of field E69RATAMT as a String.
  */
  public String getE69RATAMT()
  {
    return fieldE69RATAMT.getString();
  }

  /**
  * Set numeric field E69RATAMT using a BigDecimal value.
  */
  public void setE69RATAMT(BigDecimal newvalue)
  {
    fieldE69RATAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E69RATAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE69RATAMT()
  {
    return fieldE69RATAMT.getBigDecimal();
  }

}
