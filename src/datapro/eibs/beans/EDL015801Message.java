package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL015801 physical file definition.
* 
* File level identifier is 1030414111958.
* Record format level identifier is 3D0380E50B238.
*/

public class EDL015801Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DLSACC",
                                     "E01DLSSEQ",
                                     "E01DLSPD1",
                                     "E01DLSPD2",
                                     "E01DLSPD3",
                                     "E01DLSTYP",
                                     "E01DLSAMT",
                                     "E01DLSNAR",
                                     "E01DLSOBK",
                                     "E01DLSOBR",
                                     "E01DLSOCY",
                                     "E01DLSOGL",
                                     "E01DLSOAC",
                                     "E01DLSIVP",
                                     "E01DLSIVB"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DLSACC",
                                   "E01DLSSEQ",
                                   "E01DLSPD1",
                                   "E01DLSPD2",
                                   "E01DLSPD3",
                                   "E01DLSTYP",
                                   "E01DLSAMT",
                                   "E01DLSNAR",
                                   "E01DLSOBK",
                                   "E01DLSOBR",
                                   "E01DLSOCY",
                                   "E01DLSOGL",
                                   "E01DLSOAC",
                                   "E01DLSIVP",
                                   "E01DLSIVB"
                                 };
  final static String fid = "1030414111958";
  final static String rid = "3D0380E50B238";
  final static String fmtname = "EDL015801";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01DLSACC = null;
  private DecimalField fieldE01DLSSEQ = null;
  private DecimalField fieldE01DLSPD1 = null;
  private DecimalField fieldE01DLSPD2 = null;
  private DecimalField fieldE01DLSPD3 = null;
  private CharacterField fieldE01DLSTYP = null;
  private DecimalField fieldE01DLSAMT = null;
  private CharacterField fieldE01DLSNAR = null;
  private CharacterField fieldE01DLSOBK = null;
  private DecimalField fieldE01DLSOBR = null;
  private CharacterField fieldE01DLSOCY = null;
  private DecimalField fieldE01DLSOGL = null;
  private DecimalField fieldE01DLSOAC = null;
  private DecimalField fieldE01DLSIVP = null;
  private DecimalField fieldE01DLSIVB = null;

  /**
  * Constructor for EDL015801Message.
  */
  public EDL015801Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 168;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DLSACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01DLSACC");
    fields[10] = fieldE01DLSSEQ =
    new DecimalField(message, HEADERSIZE + 55, 3, 0, "E01DLSSEQ");
    fields[11] = fieldE01DLSPD1 =
    new DecimalField(message, HEADERSIZE + 58, 3, 0, "E01DLSPD1");
    fields[12] = fieldE01DLSPD2 =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "E01DLSPD2");
    fields[13] = fieldE01DLSPD3 =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "E01DLSPD3");
    fields[14] = fieldE01DLSTYP =
    new CharacterField(message, HEADERSIZE + 67, 1, "E01DLSTYP");
    fields[15] = fieldE01DLSAMT =
    new DecimalField(message, HEADERSIZE + 68, 17, 2, "E01DLSAMT");
    fields[16] = fieldE01DLSNAR =
    new CharacterField(message, HEADERSIZE + 85, 20, "E01DLSNAR");
    fields[17] = fieldE01DLSOBK =
    new CharacterField(message, HEADERSIZE + 105, 2, "E01DLSOBK");
    fields[18] = fieldE01DLSOBR =
    new DecimalField(message, HEADERSIZE + 107, 4, 0, "E01DLSOBR");
    fields[19] = fieldE01DLSOCY =
    new CharacterField(message, HEADERSIZE + 111, 3, "E01DLSOCY");
    fields[20] = fieldE01DLSOGL =
    new DecimalField(message, HEADERSIZE + 114, 17, 0, "E01DLSOGL");
    fields[21] = fieldE01DLSOAC =
    new DecimalField(message, HEADERSIZE + 131, 13, 0, "E01DLSOAC");
    fields[22] = fieldE01DLSIVP =
    new DecimalField(message, HEADERSIZE + 144, 7, 3, "E01DLSIVP");
    fields[23] = fieldE01DLSIVB =
    new DecimalField(message, HEADERSIZE + 151, 17, 2, "E01DLSIVB");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DLSACC using a String value.
  */
  public void setE01DLSACC(String newvalue)
  {
    fieldE01DLSACC.setString(newvalue);
  }

  /**
  * Get value of field E01DLSACC as a String.
  */
  public String getE01DLSACC()
  {
    return fieldE01DLSACC.getString();
  }

  /**
  * Set numeric field E01DLSACC using a BigDecimal value.
  */
  public void setE01DLSACC(BigDecimal newvalue)
  {
    fieldE01DLSACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSACC()
  {
    return fieldE01DLSACC.getBigDecimal();
  }

  /**
  * Set field E01DLSSEQ using a String value.
  */
  public void setE01DLSSEQ(String newvalue)
  {
    fieldE01DLSSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01DLSSEQ as a String.
  */
  public String getE01DLSSEQ()
  {
    return fieldE01DLSSEQ.getString();
  }

  /**
  * Set numeric field E01DLSSEQ using a BigDecimal value.
  */
  public void setE01DLSSEQ(BigDecimal newvalue)
  {
    fieldE01DLSSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSSEQ()
  {
    return fieldE01DLSSEQ.getBigDecimal();
  }

  /**
  * Set field E01DLSPD1 using a String value.
  */
  public void setE01DLSPD1(String newvalue)
  {
    fieldE01DLSPD1.setString(newvalue);
  }

  /**
  * Get value of field E01DLSPD1 as a String.
  */
  public String getE01DLSPD1()
  {
    return fieldE01DLSPD1.getString();
  }

  /**
  * Set numeric field E01DLSPD1 using a BigDecimal value.
  */
  public void setE01DLSPD1(BigDecimal newvalue)
  {
    fieldE01DLSPD1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSPD1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSPD1()
  {
    return fieldE01DLSPD1.getBigDecimal();
  }

  /**
  * Set field E01DLSPD2 using a String value.
  */
  public void setE01DLSPD2(String newvalue)
  {
    fieldE01DLSPD2.setString(newvalue);
  }

  /**
  * Get value of field E01DLSPD2 as a String.
  */
  public String getE01DLSPD2()
  {
    return fieldE01DLSPD2.getString();
  }

  /**
  * Set numeric field E01DLSPD2 using a BigDecimal value.
  */
  public void setE01DLSPD2(BigDecimal newvalue)
  {
    fieldE01DLSPD2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSPD2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSPD2()
  {
    return fieldE01DLSPD2.getBigDecimal();
  }

  /**
  * Set field E01DLSPD3 using a String value.
  */
  public void setE01DLSPD3(String newvalue)
  {
    fieldE01DLSPD3.setString(newvalue);
  }

  /**
  * Get value of field E01DLSPD3 as a String.
  */
  public String getE01DLSPD3()
  {
    return fieldE01DLSPD3.getString();
  }

  /**
  * Set numeric field E01DLSPD3 using a BigDecimal value.
  */
  public void setE01DLSPD3(BigDecimal newvalue)
  {
    fieldE01DLSPD3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSPD3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSPD3()
  {
    return fieldE01DLSPD3.getBigDecimal();
  }

  /**
  * Set field E01DLSTYP using a String value.
  */
  public void setE01DLSTYP(String newvalue)
  {
    fieldE01DLSTYP.setString(newvalue);
  }

  /**
  * Get value of field E01DLSTYP as a String.
  */
  public String getE01DLSTYP()
  {
    return fieldE01DLSTYP.getString();
  }

  /**
  * Set field E01DLSAMT using a String value.
  */
  public void setE01DLSAMT(String newvalue)
  {
    fieldE01DLSAMT.setString(newvalue);
  }

  /**
  * Get value of field E01DLSAMT as a String.
  */
  public String getE01DLSAMT()
  {
    return fieldE01DLSAMT.getString();
  }

  /**
  * Set numeric field E01DLSAMT using a BigDecimal value.
  */
  public void setE01DLSAMT(BigDecimal newvalue)
  {
    fieldE01DLSAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSAMT()
  {
    return fieldE01DLSAMT.getBigDecimal();
  }

  /**
  * Set field E01DLSNAR using a String value.
  */
  public void setE01DLSNAR(String newvalue)
  {
    fieldE01DLSNAR.setString(newvalue);
  }

  /**
  * Get value of field E01DLSNAR as a String.
  */
  public String getE01DLSNAR()
  {
    return fieldE01DLSNAR.getString();
  }

  /**
  * Set field E01DLSOBK using a String value.
  */
  public void setE01DLSOBK(String newvalue)
  {
    fieldE01DLSOBK.setString(newvalue);
  }

  /**
  * Get value of field E01DLSOBK as a String.
  */
  public String getE01DLSOBK()
  {
    return fieldE01DLSOBK.getString();
  }

  /**
  * Set field E01DLSOBR using a String value.
  */
  public void setE01DLSOBR(String newvalue)
  {
    fieldE01DLSOBR.setString(newvalue);
  }

  /**
  * Get value of field E01DLSOBR as a String.
  */
  public String getE01DLSOBR()
  {
    return fieldE01DLSOBR.getString();
  }

  /**
  * Set numeric field E01DLSOBR using a BigDecimal value.
  */
  public void setE01DLSOBR(BigDecimal newvalue)
  {
    fieldE01DLSOBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSOBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSOBR()
  {
    return fieldE01DLSOBR.getBigDecimal();
  }

  /**
  * Set field E01DLSOCY using a String value.
  */
  public void setE01DLSOCY(String newvalue)
  {
    fieldE01DLSOCY.setString(newvalue);
  }

  /**
  * Get value of field E01DLSOCY as a String.
  */
  public String getE01DLSOCY()
  {
    return fieldE01DLSOCY.getString();
  }

  /**
  * Set field E01DLSOGL using a String value.
  */
  public void setE01DLSOGL(String newvalue)
  {
    fieldE01DLSOGL.setString(newvalue);
  }

  /**
  * Get value of field E01DLSOGL as a String.
  */
  public String getE01DLSOGL()
  {
    return fieldE01DLSOGL.getString();
  }

  /**
  * Set numeric field E01DLSOGL using a BigDecimal value.
  */
  public void setE01DLSOGL(BigDecimal newvalue)
  {
    fieldE01DLSOGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSOGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSOGL()
  {
    return fieldE01DLSOGL.getBigDecimal();
  }

  /**
  * Set field E01DLSOAC using a String value.
  */
  public void setE01DLSOAC(String newvalue)
  {
    fieldE01DLSOAC.setString(newvalue);
  }

  /**
  * Get value of field E01DLSOAC as a String.
  */
  public String getE01DLSOAC()
  {
    return fieldE01DLSOAC.getString();
  }

  /**
  * Set numeric field E01DLSOAC using a BigDecimal value.
  */
  public void setE01DLSOAC(BigDecimal newvalue)
  {
    fieldE01DLSOAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSOAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSOAC()
  {
    return fieldE01DLSOAC.getBigDecimal();
  }

  /**
  * Set field E01DLSIVP using a String value.
  */
  public void setE01DLSIVP(String newvalue)
  {
    fieldE01DLSIVP.setString(newvalue);
  }

  /**
  * Get value of field E01DLSIVP as a String.
  */
  public String getE01DLSIVP()
  {
    return fieldE01DLSIVP.getString();
  }

  /**
  * Set numeric field E01DLSIVP using a BigDecimal value.
  */
  public void setE01DLSIVP(BigDecimal newvalue)
  {
    fieldE01DLSIVP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSIVP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSIVP()
  {
    return fieldE01DLSIVP.getBigDecimal();
  }

  /**
  * Set field E01DLSIVB using a String value.
  */
  public void setE01DLSIVB(String newvalue)
  {
    fieldE01DLSIVB.setString(newvalue);
  }

  /**
  * Get value of field E01DLSIVB as a String.
  */
  public String getE01DLSIVB()
  {
    return fieldE01DLSIVB.getString();
  }

  /**
  * Set numeric field E01DLSIVB using a BigDecimal value.
  */
  public void setE01DLSIVB(BigDecimal newvalue)
  {
    fieldE01DLSIVB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLSIVB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLSIVB()
  {
    return fieldE01DLSIVB.getBigDecimal();
  }

}
