package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDEN011DS physical file definition.
* 
* File level identifier is 1050712170520.
* Record format level identifier is 4011DCE9FA0F0.
*/

public class EDEN011DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDTYP",
                                     "RWDNAM",
                                     "RWDCON",
                                     "RWDFRC",
                                     "SWDNAM",
                                     "SWDAD1",
                                     "SWDAD2",
                                     "SWDAD3",
                                     "SWDSTA",
                                     "SWDCCD",
                                     "SWDDTE",
                                     "SWDVOL",
                                     "SWDPAG",
                                     "SWDCOU",
                                     "SWDTYP",
                                     "SWDREM",
                                     "SWDCDS",
                                     "SWDTDS",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDTYP",
                                   "RWDNAM",
                                   "RWDCON",
                                   "RWDFRC",
                                   "SWDNAM",
                                   "SWDAD1",
                                   "SWDAD2",
                                   "SWDAD3",
                                   "SWDSTA",
                                   "SWDCCD",
                                   "SWDDTE",
                                   "SWDVOL",
                                   "SWDPAG",
                                   "SWDCOU",
                                   "SWDTYP",
                                   "SWDREM",
                                   "SWDCDS",
                                   "SWDTDS",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1050712170520";
  final static String rid = "4011DCE9FA0F0";
  final static String fmtname = "EDEN011DS";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private CharacterField fieldRWDNAM = null;
  private DecimalField fieldRWDCON = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDNAM = null;
  private CharacterField fieldSWDAD1 = null;
  private CharacterField fieldSWDAD2 = null;
  private CharacterField fieldSWDAD3 = null;
  private CharacterField fieldSWDSTA = null;
  private CharacterField fieldSWDCCD = null;
  private DecimalField fieldSWDDTE = null;
  private DecimalField fieldSWDVOL = null;
  private DecimalField fieldSWDPAG = null;
  private DecimalField fieldSWDCOU = null;
  private CharacterField fieldSWDTYP = null;
  private CharacterField fieldSWDREM = null;
  private CharacterField fieldSWDCDS = null;
  private CharacterField fieldSWDTDS = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EDEN011DSMessage.
  */
  public EDEN011DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 697;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
    fields[2] = fieldRWDNAM =
    new CharacterField(message, HEADERSIZE + 11, 140, "RWDNAM");
    fields[3] = fieldRWDCON =
    new DecimalField(message, HEADERSIZE + 151, 3, 0, "RWDCON");
    fields[4] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 154, 8, 0, "RWDFRC");
    fields[5] = fieldSWDNAM =
    new CharacterField(message, HEADERSIZE + 162, 140, "SWDNAM");
    fields[6] = fieldSWDAD1 =
    new CharacterField(message, HEADERSIZE + 302, 60, "SWDAD1");
    fields[7] = fieldSWDAD2 =
    new CharacterField(message, HEADERSIZE + 362, 60, "SWDAD2");
    fields[8] = fieldSWDAD3 =
    new CharacterField(message, HEADERSIZE + 422, 60, "SWDAD3");
    fields[9] = fieldSWDSTA =
    new CharacterField(message, HEADERSIZE + 482, 2, "SWDSTA");
    fields[10] = fieldSWDCCD =
    new CharacterField(message, HEADERSIZE + 484, 3, "SWDCCD");
    fields[11] = fieldSWDDTE =
    new DecimalField(message, HEADERSIZE + 487, 7, 0, "SWDDTE");
    fields[12] = fieldSWDVOL =
    new DecimalField(message, HEADERSIZE + 494, 3, 0, "SWDVOL");
    fields[13] = fieldSWDPAG =
    new DecimalField(message, HEADERSIZE + 497, 7, 0, "SWDPAG");
    fields[14] = fieldSWDCOU =
    new DecimalField(message, HEADERSIZE + 504, 7, 0, "SWDCOU");
    fields[15] = fieldSWDTYP =
    new CharacterField(message, HEADERSIZE + 511, 5, "SWDTYP");
    fields[16] = fieldSWDREM =
    new CharacterField(message, HEADERSIZE + 516, 112, "SWDREM");
    fields[17] = fieldSWDCDS =
    new CharacterField(message, HEADERSIZE + 628, 30, "SWDCDS");
    fields[18] = fieldSWDTDS =
    new CharacterField(message, HEADERSIZE + 658, 30, "SWDTDS");
    fields[19] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 688, 8, 0, "SWDREC");
    fields[20] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 696, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
    fieldRWDTYP.setString(newvalue);
  }

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
    return fieldRWDTYP.getString();
  }

  /**
  * Set field RWDNAM using a String value.
  */
  public void setRWDNAM(String newvalue)
  {
    fieldRWDNAM.setString(newvalue);
  }

  /**
  * Get value of field RWDNAM as a String.
  */
  public String getRWDNAM()
  {
    return fieldRWDNAM.getString();
  }

  /**
  * Set field RWDCON using a String value.
  */
  public void setRWDCON(String newvalue)
  {
    fieldRWDCON.setString(newvalue);
  }

  /**
  * Get value of field RWDCON as a String.
  */
  public String getRWDCON()
  {
    return fieldRWDCON.getString();
  }

  /**
  * Set numeric field RWDCON using a BigDecimal value.
  */
  public void setRWDCON(BigDecimal newvalue)
  {
    fieldRWDCON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDCON as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDCON()
  {
    return fieldRWDCON.getBigDecimal();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDNAM using a String value.
  */
  public void setSWDNAM(String newvalue)
  {
    fieldSWDNAM.setString(newvalue);
  }

  /**
  * Get value of field SWDNAM as a String.
  */
  public String getSWDNAM()
  {
    return fieldSWDNAM.getString();
  }

  /**
  * Set field SWDAD1 using a String value.
  */
  public void setSWDAD1(String newvalue)
  {
    fieldSWDAD1.setString(newvalue);
  }

  /**
  * Get value of field SWDAD1 as a String.
  */
  public String getSWDAD1()
  {
    return fieldSWDAD1.getString();
  }

  /**
  * Set field SWDAD2 using a String value.
  */
  public void setSWDAD2(String newvalue)
  {
    fieldSWDAD2.setString(newvalue);
  }

  /**
  * Get value of field SWDAD2 as a String.
  */
  public String getSWDAD2()
  {
    return fieldSWDAD2.getString();
  }

  /**
  * Set field SWDAD3 using a String value.
  */
  public void setSWDAD3(String newvalue)
  {
    fieldSWDAD3.setString(newvalue);
  }

  /**
  * Get value of field SWDAD3 as a String.
  */
  public String getSWDAD3()
  {
    return fieldSWDAD3.getString();
  }

  /**
  * Set field SWDSTA using a String value.
  */
  public void setSWDSTA(String newvalue)
  {
    fieldSWDSTA.setString(newvalue);
  }

  /**
  * Get value of field SWDSTA as a String.
  */
  public String getSWDSTA()
  {
    return fieldSWDSTA.getString();
  }

  /**
  * Set field SWDCCD using a String value.
  */
  public void setSWDCCD(String newvalue)
  {
    fieldSWDCCD.setString(newvalue);
  }

  /**
  * Get value of field SWDCCD as a String.
  */
  public String getSWDCCD()
  {
    return fieldSWDCCD.getString();
  }

  /**
  * Set field SWDDTE using a String value.
  */
  public void setSWDDTE(String newvalue)
  {
    fieldSWDDTE.setString(newvalue);
  }

  /**
  * Get value of field SWDDTE as a String.
  */
  public String getSWDDTE()
  {
    return fieldSWDDTE.getString();
  }

  /**
  * Set numeric field SWDDTE using a BigDecimal value.
  */
  public void setSWDDTE(BigDecimal newvalue)
  {
    fieldSWDDTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDDTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDTE()
  {
    return fieldSWDDTE.getBigDecimal();
  }

  /**
  * Set field SWDVOL using a String value.
  */
  public void setSWDVOL(String newvalue)
  {
    fieldSWDVOL.setString(newvalue);
  }

  /**
  * Get value of field SWDVOL as a String.
  */
  public String getSWDVOL()
  {
    return fieldSWDVOL.getString();
  }

  /**
  * Set numeric field SWDVOL using a BigDecimal value.
  */
  public void setSWDVOL(BigDecimal newvalue)
  {
    fieldSWDVOL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDVOL as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDVOL()
  {
    return fieldSWDVOL.getBigDecimal();
  }

  /**
  * Set field SWDPAG using a String value.
  */
  public void setSWDPAG(String newvalue)
  {
    fieldSWDPAG.setString(newvalue);
  }

  /**
  * Get value of field SWDPAG as a String.
  */
  public String getSWDPAG()
  {
    return fieldSWDPAG.getString();
  }

  /**
  * Set numeric field SWDPAG using a BigDecimal value.
  */
  public void setSWDPAG(BigDecimal newvalue)
  {
    fieldSWDPAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDPAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDPAG()
  {
    return fieldSWDPAG.getBigDecimal();
  }

  /**
  * Set field SWDCOU using a String value.
  */
  public void setSWDCOU(String newvalue)
  {
    fieldSWDCOU.setString(newvalue);
  }

  /**
  * Get value of field SWDCOU as a String.
  */
  public String getSWDCOU()
  {
    return fieldSWDCOU.getString();
  }

  /**
  * Set numeric field SWDCOU using a BigDecimal value.
  */
  public void setSWDCOU(BigDecimal newvalue)
  {
    fieldSWDCOU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCOU as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCOU()
  {
    return fieldSWDCOU.getBigDecimal();
  }

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
    fieldSWDTYP.setString(newvalue);
  }

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
    return fieldSWDTYP.getString();
  }

  /**
  * Set field SWDREM using a String value.
  */
  public void setSWDREM(String newvalue)
  {
    fieldSWDREM.setString(newvalue);
  }

  /**
  * Get value of field SWDREM as a String.
  */
  public String getSWDREM()
  {
    return fieldSWDREM.getString();
  }

  /**
  * Set field SWDCDS using a String value.
  */
  public void setSWDCDS(String newvalue)
  {
    fieldSWDCDS.setString(newvalue);
  }

  /**
  * Get value of field SWDCDS as a String.
  */
  public String getSWDCDS()
  {
    return fieldSWDCDS.getString();
  }

  /**
  * Set field SWDTDS using a String value.
  */
  public void setSWDTDS(String newvalue)
  {
    fieldSWDTDS.setString(newvalue);
  }

  /**
  * Get value of field SWDTDS as a String.
  */
  public String getSWDTDS()
  {
    return fieldSWDTDS.getString();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
