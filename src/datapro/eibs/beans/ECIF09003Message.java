package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECIF09003 physical file definition.
* 
* File level identifier is 1050328133500.
* Record format level identifier is 50C3F1AE30A5F.
*/

public class ECIF09003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03INQBNK",
                                     "E03INQBNN",
                                     "E03INQRDY",
                                     "E03INQRDM",
                                     "E03INQOFC",
                                     "E03INQOFN",
                                     "E03INQPRD",
                                     "E03INQPRS",
                                     "E03INQQTY",
                                     "E03INQPRB",
                                     "E03INQINB",
                                     "E03INQPIB",
                                     "E03INQHAB",
                                     "E03INQCLS"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03INQBNK",
                                   "E03INQBNN",
                                   "E03INQRDY",
                                   "E03INQRDM",
                                   "E03INQOFC",
                                   "E03INQOFN",
                                   "E03INQPRD",
                                   "E03INQPRS",
                                   "E03INQQTY",
                                   "E03INQPRB",
                                   "E03INQINB",
                                   "E03INQPIB",
                                   "E03INQHAB",
                                   "E03INQCLS"
                                 };
  final static String fid = "1050328133500";
  final static String rid = "50C3F1AE30A5F";
  final static String fmtname = "ECIF09003";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03INQBNK = null;
  private CharacterField fieldE03INQBNN = null;
  private DecimalField fieldE03INQRDY = null;
  private DecimalField fieldE03INQRDM = null;
  private CharacterField fieldE03INQOFC = null;
  private CharacterField fieldE03INQOFN = null;
  private CharacterField fieldE03INQPRD = null;
  private CharacterField fieldE03INQPRS = null;
  private DecimalField fieldE03INQQTY = null;
  private DecimalField fieldE03INQPRB = null;
  private DecimalField fieldE03INQINB = null;
  private DecimalField fieldE03INQPIB = null;
  private DecimalField fieldE03INQHAB = null;
  private CharacterField fieldE03INQCLS = null;

  /**
  * Constructor for ECIF09003Message.
  */
  public ECIF09003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 253;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03INQBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E03INQBNK");
    fields[10] = fieldE03INQBNN =
    new CharacterField(message, HEADERSIZE + 44, 35, "E03INQBNN");
    fields[11] = fieldE03INQRDY =
    new DecimalField(message, HEADERSIZE + 79, 5, 0, "E03INQRDY");
    fields[12] = fieldE03INQRDM =
    new DecimalField(message, HEADERSIZE + 84, 3, 0, "E03INQRDM");
    fields[13] = fieldE03INQOFC =
    new CharacterField(message, HEADERSIZE + 87, 4, "E03INQOFC");
    fields[14] = fieldE03INQOFN =
    new CharacterField(message, HEADERSIZE + 91, 35, "E03INQOFN");
    fields[15] = fieldE03INQPRD =
    new CharacterField(message, HEADERSIZE + 126, 4, "E03INQPRD");
    fields[16] = fieldE03INQPRS =
    new CharacterField(message, HEADERSIZE + 130, 45, "E03INQPRS");
    fields[17] = fieldE03INQQTY =
    new DecimalField(message, HEADERSIZE + 175, 8, 0, "E03INQQTY");
    fields[18] = fieldE03INQPRB =
    new DecimalField(message, HEADERSIZE + 183, 17, 2, "E03INQPRB");
    fields[19] = fieldE03INQINB =
    new DecimalField(message, HEADERSIZE + 200, 17, 2, "E03INQINB");
    fields[20] = fieldE03INQPIB =
    new DecimalField(message, HEADERSIZE + 217, 17, 2, "E03INQPIB");
    fields[21] = fieldE03INQHAB =
    new DecimalField(message, HEADERSIZE + 234, 17, 2, "E03INQHAB");
    fields[22] = fieldE03INQCLS =
    new CharacterField(message, HEADERSIZE + 251, 2, "E03INQCLS");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03INQBNK using a String value.
  */
  public void setE03INQBNK(String newvalue)
  {
    fieldE03INQBNK.setString(newvalue);
  }

  /**
  * Get value of field E03INQBNK as a String.
  */
  public String getE03INQBNK()
  {
    return fieldE03INQBNK.getString();
  }

  /**
  * Set field E03INQBNN using a String value.
  */
  public void setE03INQBNN(String newvalue)
  {
    fieldE03INQBNN.setString(newvalue);
  }

  /**
  * Get value of field E03INQBNN as a String.
  */
  public String getE03INQBNN()
  {
    return fieldE03INQBNN.getString();
  }

  /**
  * Set field E03INQRDY using a String value.
  */
  public void setE03INQRDY(String newvalue)
  {
    fieldE03INQRDY.setString(newvalue);
  }

  /**
  * Get value of field E03INQRDY as a String.
  */
  public String getE03INQRDY()
  {
    return fieldE03INQRDY.getString();
  }

  /**
  * Set numeric field E03INQRDY using a BigDecimal value.
  */
  public void setE03INQRDY(BigDecimal newvalue)
  {
    fieldE03INQRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQRDY()
  {
    return fieldE03INQRDY.getBigDecimal();
  }

  /**
  * Set field E03INQRDM using a String value.
  */
  public void setE03INQRDM(String newvalue)
  {
    fieldE03INQRDM.setString(newvalue);
  }

  /**
  * Get value of field E03INQRDM as a String.
  */
  public String getE03INQRDM()
  {
    return fieldE03INQRDM.getString();
  }

  /**
  * Set numeric field E03INQRDM using a BigDecimal value.
  */
  public void setE03INQRDM(BigDecimal newvalue)
  {
    fieldE03INQRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQRDM()
  {
    return fieldE03INQRDM.getBigDecimal();
  }

  /**
  * Set field E03INQOFC using a String value.
  */
  public void setE03INQOFC(String newvalue)
  {
    fieldE03INQOFC.setString(newvalue);
  }

  /**
  * Get value of field E03INQOFC as a String.
  */
  public String getE03INQOFC()
  {
    return fieldE03INQOFC.getString();
  }

  /**
  * Set field E03INQOFN using a String value.
  */
  public void setE03INQOFN(String newvalue)
  {
    fieldE03INQOFN.setString(newvalue);
  }

  /**
  * Get value of field E03INQOFN as a String.
  */
  public String getE03INQOFN()
  {
    return fieldE03INQOFN.getString();
  }

  /**
  * Set field E03INQPRD using a String value.
  */
  public void setE03INQPRD(String newvalue)
  {
    fieldE03INQPRD.setString(newvalue);
  }

  /**
  * Get value of field E03INQPRD as a String.
  */
  public String getE03INQPRD()
  {
    return fieldE03INQPRD.getString();
  }

  /**
  * Set field E03INQPRS using a String value.
  */
  public void setE03INQPRS(String newvalue)
  {
    fieldE03INQPRS.setString(newvalue);
  }

  /**
  * Get value of field E03INQPRS as a String.
  */
  public String getE03INQPRS()
  {
    return fieldE03INQPRS.getString();
  }

  /**
  * Set field E03INQQTY using a String value.
  */
  public void setE03INQQTY(String newvalue)
  {
    fieldE03INQQTY.setString(newvalue);
  }

  /**
  * Get value of field E03INQQTY as a String.
  */
  public String getE03INQQTY()
  {
    return fieldE03INQQTY.getString();
  }

  /**
  * Set numeric field E03INQQTY using a BigDecimal value.
  */
  public void setE03INQQTY(BigDecimal newvalue)
  {
    fieldE03INQQTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQQTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQQTY()
  {
    return fieldE03INQQTY.getBigDecimal();
  }

  /**
  * Set field E03INQPRB using a String value.
  */
  public void setE03INQPRB(String newvalue)
  {
    fieldE03INQPRB.setString(newvalue);
  }

  /**
  * Get value of field E03INQPRB as a String.
  */
  public String getE03INQPRB()
  {
    return fieldE03INQPRB.getString();
  }

  /**
  * Set numeric field E03INQPRB using a BigDecimal value.
  */
  public void setE03INQPRB(BigDecimal newvalue)
  {
    fieldE03INQPRB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQPRB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQPRB()
  {
    return fieldE03INQPRB.getBigDecimal();
  }

  /**
  * Set field E03INQINB using a String value.
  */
  public void setE03INQINB(String newvalue)
  {
    fieldE03INQINB.setString(newvalue);
  }

  /**
  * Get value of field E03INQINB as a String.
  */
  public String getE03INQINB()
  {
    return fieldE03INQINB.getString();
  }

  /**
  * Set numeric field E03INQINB using a BigDecimal value.
  */
  public void setE03INQINB(BigDecimal newvalue)
  {
    fieldE03INQINB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQINB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQINB()
  {
    return fieldE03INQINB.getBigDecimal();
  }

  /**
  * Set field E03INQPIB using a String value.
  */
  public void setE03INQPIB(String newvalue)
  {
    fieldE03INQPIB.setString(newvalue);
  }

  /**
  * Get value of field E03INQPIB as a String.
  */
  public String getE03INQPIB()
  {
    return fieldE03INQPIB.getString();
  }

  /**
  * Set numeric field E03INQPIB using a BigDecimal value.
  */
  public void setE03INQPIB(BigDecimal newvalue)
  {
    fieldE03INQPIB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQPIB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQPIB()
  {
    return fieldE03INQPIB.getBigDecimal();
  }

  /**
  * Set field E03INQHAB using a String value.
  */
  public void setE03INQHAB(String newvalue)
  {
    fieldE03INQHAB.setString(newvalue);
  }

  /**
  * Get value of field E03INQHAB as a String.
  */
  public String getE03INQHAB()
  {
    return fieldE03INQHAB.getString();
  }

  /**
  * Set numeric field E03INQHAB using a BigDecimal value.
  */
  public void setE03INQHAB(BigDecimal newvalue)
  {
    fieldE03INQHAB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INQHAB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INQHAB()
  {
    return fieldE03INQHAB.getBigDecimal();
  }

  /**
  * Set field E03INQCLS using a String value.
  */
  public void setE03INQCLS(String newvalue)
  {
    fieldE03INQCLS.setString(newvalue);
  }

  /**
  * Get value of field E03INQCLS as a String.
  */
  public String getE03INQCLS()
  {
    return fieldE03INQCLS.getString();
  }

}
