package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPR012002 physical file definition.
* 
* File level identifier is 1060808112113.
* Record format level identifier is 45EB3620AB4B3.
*/

public class EPR012002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CUTDTY",
                                     "E02CUTDTM",
                                     "E02CUTDTD",
                                     "E02CUTTIM",
                                     "E02CUTMPG",
                                     "E02PRISID",
                                     "E02PRINUM",
                                     "E02ACTION",
                                     "E02MSGTXT"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CUTDTY",
                                   "E02CUTDTM",
                                   "E02CUTDTD",
                                   "E02CUTTIM",
                                   "E02CUTMPG",
                                   "E02PRISID",
                                   "E02PRINUM",
                                   "E02ACTION",
                                   "E02MSGTXT"
                                 };
  final static String fid = "1060808112113";
  final static String rid = "45EB3620AB4B3";
  final static String fmtname = "EPR012002";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02CUTDTY = null;
  private DecimalField fieldE02CUTDTM = null;
  private DecimalField fieldE02CUTDTD = null;
  private DecimalField fieldE02CUTTIM = null;
  private DecimalField fieldE02CUTMPG = null;
  private CharacterField fieldE02PRISID = null;
  private DecimalField fieldE02PRINUM = null;
  private CharacterField fieldE02ACTION = null;
  private CharacterField fieldE02MSGTXT = null;

  /**
  * Constructor for EPR012002Message.
  */
  public EPR012002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1087;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CUTDTY =
    new DecimalField(message, HEADERSIZE + 42, 3, 0, "E02CUTDTY");
    fields[10] = fieldE02CUTDTM =
    new DecimalField(message, HEADERSIZE + 45, 3, 0, "E02CUTDTM");
    fields[11] = fieldE02CUTDTD =
    new DecimalField(message, HEADERSIZE + 48, 3, 0, "E02CUTDTD");
    fields[12] = fieldE02CUTTIM =
    new DecimalField(message, HEADERSIZE + 51, 7, 0, "E02CUTTIM");
    fields[13] = fieldE02CUTMPG =
    new DecimalField(message, HEADERSIZE + 58, 3, 0, "E02CUTMPG");
    fields[14] = fieldE02PRISID =
    new CharacterField(message, HEADERSIZE + 61, 12, "E02PRISID");
    fields[15] = fieldE02PRINUM =
    new DecimalField(message, HEADERSIZE + 73, 13, 0, "E02PRINUM");
    fields[16] = fieldE02ACTION =
    new CharacterField(message, HEADERSIZE + 86, 1, "E02ACTION");
    fields[17] = fieldE02MSGTXT =
    new CharacterField(message, HEADERSIZE + 87, 1000, "E02MSGTXT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CUTDTY using a String value.
  */
  public void setE02CUTDTY(String newvalue)
  {
    fieldE02CUTDTY.setString(newvalue);
  }

  /**
  * Get value of field E02CUTDTY as a String.
  */
  public String getE02CUTDTY()
  {
    return fieldE02CUTDTY.getString();
  }

  /**
  * Set numeric field E02CUTDTY using a BigDecimal value.
  */
  public void setE02CUTDTY(BigDecimal newvalue)
  {
    fieldE02CUTDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUTDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUTDTY()
  {
    return fieldE02CUTDTY.getBigDecimal();
  }

  /**
  * Set field E02CUTDTM using a String value.
  */
  public void setE02CUTDTM(String newvalue)
  {
    fieldE02CUTDTM.setString(newvalue);
  }

  /**
  * Get value of field E02CUTDTM as a String.
  */
  public String getE02CUTDTM()
  {
    return fieldE02CUTDTM.getString();
  }

  /**
  * Set numeric field E02CUTDTM using a BigDecimal value.
  */
  public void setE02CUTDTM(BigDecimal newvalue)
  {
    fieldE02CUTDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUTDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUTDTM()
  {
    return fieldE02CUTDTM.getBigDecimal();
  }

  /**
  * Set field E02CUTDTD using a String value.
  */
  public void setE02CUTDTD(String newvalue)
  {
    fieldE02CUTDTD.setString(newvalue);
  }

  /**
  * Get value of field E02CUTDTD as a String.
  */
  public String getE02CUTDTD()
  {
    return fieldE02CUTDTD.getString();
  }

  /**
  * Set numeric field E02CUTDTD using a BigDecimal value.
  */
  public void setE02CUTDTD(BigDecimal newvalue)
  {
    fieldE02CUTDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUTDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUTDTD()
  {
    return fieldE02CUTDTD.getBigDecimal();
  }

  /**
  * Set field E02CUTTIM using a String value.
  */
  public void setE02CUTTIM(String newvalue)
  {
    fieldE02CUTTIM.setString(newvalue);
  }

  /**
  * Get value of field E02CUTTIM as a String.
  */
  public String getE02CUTTIM()
  {
    return fieldE02CUTTIM.getString();
  }

  /**
  * Set numeric field E02CUTTIM using a BigDecimal value.
  */
  public void setE02CUTTIM(BigDecimal newvalue)
  {
    fieldE02CUTTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUTTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUTTIM()
  {
    return fieldE02CUTTIM.getBigDecimal();
  }

  /**
  * Set field E02CUTMPG using a String value.
  */
  public void setE02CUTMPG(String newvalue)
  {
    fieldE02CUTMPG.setString(newvalue);
  }

  /**
  * Get value of field E02CUTMPG as a String.
  */
  public String getE02CUTMPG()
  {
    return fieldE02CUTMPG.getString();
  }

  /**
  * Set numeric field E02CUTMPG using a BigDecimal value.
  */
  public void setE02CUTMPG(BigDecimal newvalue)
  {
    fieldE02CUTMPG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CUTMPG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CUTMPG()
  {
    return fieldE02CUTMPG.getBigDecimal();
  }

  /**
  * Set field E02PRISID using a String value.
  */
  public void setE02PRISID(String newvalue)
  {
    fieldE02PRISID.setString(newvalue);
  }

  /**
  * Get value of field E02PRISID as a String.
  */
  public String getE02PRISID()
  {
    return fieldE02PRISID.getString();
  }

  /**
  * Set field E02PRINUM using a String value.
  */
  public void setE02PRINUM(String newvalue)
  {
    fieldE02PRINUM.setString(newvalue);
  }

  /**
  * Get value of field E02PRINUM as a String.
  */
  public String getE02PRINUM()
  {
    return fieldE02PRINUM.getString();
  }

  /**
  * Set numeric field E02PRINUM using a BigDecimal value.
  */
  public void setE02PRINUM(BigDecimal newvalue)
  {
    fieldE02PRINUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PRINUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PRINUM()
  {
    return fieldE02PRINUM.getBigDecimal();
  }

  /**
  * Set field E02ACTION using a String value.
  */
  public void setE02ACTION(String newvalue)
  {
    fieldE02ACTION.setString(newvalue);
  }

  /**
  * Get value of field E02ACTION as a String.
  */
  public String getE02ACTION()
  {
    return fieldE02ACTION.getString();
  }

  /**
  * Set field E02MSGTXT using a String value.
  */
  public void setE02MSGTXT(String newvalue)
  {
    fieldE02MSGTXT.setString(newvalue);
  }

  /**
  * Get value of field E02MSGTXT as a String.
  */
  public String getE02MSGTXT()
  {
    return fieldE02MSGTXT.getString();
  }

}
