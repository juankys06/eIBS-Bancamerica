package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD000022 physical file definition.
* 
* File level identifier is 1030129195632.
* Record format level identifier is 30591AFDA4E4F.
*/

public class ESD000022Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H22USR",
                                     "H22PGM",
                                     "H22TIM",
                                     "H22SCR",
                                     "H22OPE",
                                     "H22MAS",
                                     "H22WK1",
                                     "H22WK2",
                                     "H22WK3",
                                     "E22ACC",
                                     "E22LNE",
                                     "E22TYP",
                                     "E22NRO",
                                     "E22SEQ",
                                     "E22DSC",
                                     "E22F01",
                                     "E22RCN"
                                   };
  final static String tnames[] = {
                                   "H22USR",
                                   "H22PGM",
                                   "H22TIM",
                                   "H22SCR",
                                   "H22OPE",
                                   "H22MAS",
                                   "H22WK1",
                                   "H22WK2",
                                   "H22WK3",
                                   "E22ACC",
                                   "E22LNE",
                                   "E22TYP",
                                   "E22NRO",
                                   "E22SEQ",
                                   "E22DSC",
                                   "E22F01",
                                   "E22RCN"
                                 };
  final static String fid = "1030129195632";
  final static String rid = "30591AFDA4E4F";
  final static String fmtname = "ESD000022";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH22USR = null;
  private CharacterField fieldH22PGM = null;
  private CharacterField fieldH22TIM = null;
  private CharacterField fieldH22SCR = null;
  private CharacterField fieldH22OPE = null;
  private CharacterField fieldH22MAS = null;
  private CharacterField fieldH22WK1 = null;
  private CharacterField fieldH22WK2 = null;
  private CharacterField fieldH22WK3 = null;
  private DecimalField fieldE22ACC = null;
  private DecimalField fieldE22LNE = null;
  private CharacterField fieldE22TYP = null;
  private DecimalField fieldE22NRO = null;
  private DecimalField fieldE22SEQ = null;
  private CharacterField fieldE22DSC = null;
  private CharacterField fieldE22F01 = null;
  private DecimalField fieldE22RCN = null;

  /**
  * Constructor for ESD000022Message.
  */
  public ESD000022Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 161;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH22USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H22USR");
    fields[1] = fieldH22PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H22PGM");
    fields[2] = fieldH22TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H22TIM");
    fields[3] = fieldH22SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H22SCR");
    fields[4] = fieldH22OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H22OPE");
    fields[5] = fieldH22MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H22MAS");
    fields[6] = fieldH22WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H22WK1");
    fields[7] = fieldH22WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H22WK2");
    fields[8] = fieldH22WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H22WK3");
    fields[9] = fieldE22ACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E22ACC");
    fields[10] = fieldE22LNE =
    new DecimalField(message, HEADERSIZE + 55, 5, 0, "E22LNE");
    fields[11] = fieldE22TYP =
    new CharacterField(message, HEADERSIZE + 60, 1, "E22TYP");
    fields[12] = fieldE22NRO =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "E22NRO");
    fields[13] = fieldE22SEQ =
    new DecimalField(message, HEADERSIZE + 64, 4, 0, "E22SEQ");
    fields[14] = fieldE22DSC =
    new CharacterField(message, HEADERSIZE + 68, 80, "E22DSC");
    fields[15] = fieldE22F01 =
    new CharacterField(message, HEADERSIZE + 148, 3, "E22F01");
    fields[16] = fieldE22RCN =
    new DecimalField(message, HEADERSIZE + 151, 10, 0, "E22RCN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H22USR using a String value.
  */
  public void setH22USR(String newvalue)
  {
    fieldH22USR.setString(newvalue);
  }

  /**
  * Get value of field H22USR as a String.
  */
  public String getH22USR()
  {
    return fieldH22USR.getString();
  }

  /**
  * Set field H22PGM using a String value.
  */
  public void setH22PGM(String newvalue)
  {
    fieldH22PGM.setString(newvalue);
  }

  /**
  * Get value of field H22PGM as a String.
  */
  public String getH22PGM()
  {
    return fieldH22PGM.getString();
  }

  /**
  * Set field H22TIM using a String value.
  */
  public void setH22TIM(String newvalue)
  {
    fieldH22TIM.setString(newvalue);
  }

  /**
  * Get value of field H22TIM as a String.
  */
  public String getH22TIM()
  {
    return fieldH22TIM.getString();
  }

  /**
  * Set field H22SCR using a String value.
  */
  public void setH22SCR(String newvalue)
  {
    fieldH22SCR.setString(newvalue);
  }

  /**
  * Get value of field H22SCR as a String.
  */
  public String getH22SCR()
  {
    return fieldH22SCR.getString();
  }

  /**
  * Set field H22OPE using a String value.
  */
  public void setH22OPE(String newvalue)
  {
    fieldH22OPE.setString(newvalue);
  }

  /**
  * Get value of field H22OPE as a String.
  */
  public String getH22OPE()
  {
    return fieldH22OPE.getString();
  }

  /**
  * Set field H22MAS using a String value.
  */
  public void setH22MAS(String newvalue)
  {
    fieldH22MAS.setString(newvalue);
  }

  /**
  * Get value of field H22MAS as a String.
  */
  public String getH22MAS()
  {
    return fieldH22MAS.getString();
  }

  /**
  * Set field H22WK1 using a String value.
  */
  public void setH22WK1(String newvalue)
  {
    fieldH22WK1.setString(newvalue);
  }

  /**
  * Get value of field H22WK1 as a String.
  */
  public String getH22WK1()
  {
    return fieldH22WK1.getString();
  }

  /**
  * Set field H22WK2 using a String value.
  */
  public void setH22WK2(String newvalue)
  {
    fieldH22WK2.setString(newvalue);
  }

  /**
  * Get value of field H22WK2 as a String.
  */
  public String getH22WK2()
  {
    return fieldH22WK2.getString();
  }

  /**
  * Set field H22WK3 using a String value.
  */
  public void setH22WK3(String newvalue)
  {
    fieldH22WK3.setString(newvalue);
  }

  /**
  * Get value of field H22WK3 as a String.
  */
  public String getH22WK3()
  {
    return fieldH22WK3.getString();
  }

  /**
  * Set field E22ACC using a String value.
  */
  public void setE22ACC(String newvalue)
  {
    fieldE22ACC.setString(newvalue);
  }

  /**
  * Get value of field E22ACC as a String.
  */
  public String getE22ACC()
  {
    return fieldE22ACC.getString();
  }

  /**
  * Set numeric field E22ACC using a BigDecimal value.
  */
  public void setE22ACC(BigDecimal newvalue)
  {
    fieldE22ACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E22ACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE22ACC()
  {
    return fieldE22ACC.getBigDecimal();
  }

  /**
  * Set field E22LNE using a String value.
  */
  public void setE22LNE(String newvalue)
  {
    fieldE22LNE.setString(newvalue);
  }

  /**
  * Get value of field E22LNE as a String.
  */
  public String getE22LNE()
  {
    return fieldE22LNE.getString();
  }

  /**
  * Set numeric field E22LNE using a BigDecimal value.
  */
  public void setE22LNE(BigDecimal newvalue)
  {
    fieldE22LNE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E22LNE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE22LNE()
  {
    return fieldE22LNE.getBigDecimal();
  }

  /**
  * Set field E22TYP using a String value.
  */
  public void setE22TYP(String newvalue)
  {
    fieldE22TYP.setString(newvalue);
  }

  /**
  * Get value of field E22TYP as a String.
  */
  public String getE22TYP()
  {
    return fieldE22TYP.getString();
  }

  /**
  * Set field E22NRO using a String value.
  */
  public void setE22NRO(String newvalue)
  {
    fieldE22NRO.setString(newvalue);
  }

  /**
  * Get value of field E22NRO as a String.
  */
  public String getE22NRO()
  {
    return fieldE22NRO.getString();
  }

  /**
  * Set numeric field E22NRO using a BigDecimal value.
  */
  public void setE22NRO(BigDecimal newvalue)
  {
    fieldE22NRO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E22NRO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE22NRO()
  {
    return fieldE22NRO.getBigDecimal();
  }

  /**
  * Set field E22SEQ using a String value.
  */
  public void setE22SEQ(String newvalue)
  {
    fieldE22SEQ.setString(newvalue);
  }

  /**
  * Get value of field E22SEQ as a String.
  */
  public String getE22SEQ()
  {
    return fieldE22SEQ.getString();
  }

  /**
  * Set numeric field E22SEQ using a BigDecimal value.
  */
  public void setE22SEQ(BigDecimal newvalue)
  {
    fieldE22SEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E22SEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE22SEQ()
  {
    return fieldE22SEQ.getBigDecimal();
  }

  /**
  * Set field E22DSC using a String value.
  */
  public void setE22DSC(String newvalue)
  {
    fieldE22DSC.setString(newvalue);
  }

  /**
  * Get value of field E22DSC as a String.
  */
  public String getE22DSC()
  {
    return fieldE22DSC.getString();
  }

  /**
  * Set field E22F01 using a String value.
  */
  public void setE22F01(String newvalue)
  {
    fieldE22F01.setString(newvalue);
  }

  /**
  * Get value of field E22F01 as a String.
  */
  public String getE22F01()
  {
    return fieldE22F01.getString();
  }

  /**
  * Set field E22RCN using a String value.
  */
  public void setE22RCN(String newvalue)
  {
    fieldE22RCN.setString(newvalue);
  }

  /**
  * Get value of field E22RCN as a String.
  */
  public String getE22RCN()
  {
    return fieldE22RCN.getString();
  }

  /**
  * Set numeric field E22RCN using a BigDecimal value.
  */
  public void setE22RCN(BigDecimal newvalue)
  {
    fieldE22RCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E22RCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE22RCN()
  {
    return fieldE22RCN.getBigDecimal();
  }

}
