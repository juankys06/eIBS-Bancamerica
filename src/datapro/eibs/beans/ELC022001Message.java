package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELC022001 physical file definition.
* 
* File level identifier is 1090611201614.
* Record format level identifier is 4B993CBDC3257.
*/

public class ELC022001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01LCMBNK",
                                     "E01LCIACC",
                                     "E01LCIDNO",
                                     "E01LCICCY",
                                     "E01LCIAMN",
                                     "E01LCMATY",
                                     "E01LCMTYP",
                                     "E01LCMORF",
                                     "E01LCMTRF",
                                     "E01LCICUN",
                                     "E01CUSNA1",
                                     "E01LCMBN1",
                                     "E01LCISTA",
                                     "E01STATUS",
                                     "E01LCISMT",
                                     "E01LCIRID",
                                     "E01LCIOPR",
                                     "E01LCIOPT",
                                     "E01DSCOPT",
                                     "E01LCISTS"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01LCMBNK",
                                   "E01LCIACC",
                                   "E01LCIDNO",
                                   "E01LCICCY",
                                   "E01LCIAMN",
                                   "E01LCMATY",
                                   "E01LCMTYP",
                                   "E01LCMORF",
                                   "E01LCMTRF",
                                   "E01LCICUN",
                                   "E01CUSNA1",
                                   "E01LCMBN1",
                                   "E01LCISTA",
                                   "E01STATUS",
                                   "E01LCISMT",
                                   "E01LCIRID",
                                   "E01LCIOPR",
                                   "E01LCIOPT",
                                   "E01DSCOPT",
                                   "E01LCISTS"
                                 };
  final static String fid = "1090611201614";
  final static String rid = "4B993CBDC3257";
  final static String fmtname = "ELC022001";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01LCMBNK = null;
  private DecimalField fieldE01LCIACC = null;
  private DecimalField fieldE01LCIDNO = null;
  private CharacterField fieldE01LCICCY = null;
  private DecimalField fieldE01LCIAMN = null;
  private CharacterField fieldE01LCMATY = null;
  private CharacterField fieldE01LCMTYP = null;
  private CharacterField fieldE01LCMORF = null;
  private CharacterField fieldE01LCMTRF = null;
  private DecimalField fieldE01LCICUN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01LCMBN1 = null;
  private CharacterField fieldE01LCISTA = null;
  private CharacterField fieldE01STATUS = null;
  private CharacterField fieldE01LCISMT = null;
  private CharacterField fieldE01LCIRID = null;
  private CharacterField fieldE01LCIOPR = null;
  private CharacterField fieldE01LCIOPT = null;
  private CharacterField fieldE01DSCOPT = null;
  private CharacterField fieldE01LCISTS = null;

  /**
  * Constructor for ELC022001Message.
  */
  public ELC022001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 260;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01LCMBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01LCMBNK");
    fields[10] = fieldE01LCIACC =
    new DecimalField(message, HEADERSIZE + 44, 13, 0, "E01LCIACC");
    fields[11] = fieldE01LCIDNO =
    new DecimalField(message, HEADERSIZE + 57, 3, 0, "E01LCIDNO");
    fields[12] = fieldE01LCICCY =
    new CharacterField(message, HEADERSIZE + 60, 3, "E01LCICCY");
    fields[13] = fieldE01LCIAMN =
    new DecimalField(message, HEADERSIZE + 63, 17, 2, "E01LCIAMN");
    fields[14] = fieldE01LCMATY =
    new CharacterField(message, HEADERSIZE + 80, 3, "E01LCMATY");
    fields[15] = fieldE01LCMTYP =
    new CharacterField(message, HEADERSIZE + 83, 1, "E01LCMTYP");
    fields[16] = fieldE01LCMORF =
    new CharacterField(message, HEADERSIZE + 84, 16, "E01LCMORF");
    fields[17] = fieldE01LCMTRF =
    new CharacterField(message, HEADERSIZE + 100, 16, "E01LCMTRF");
    fields[18] = fieldE01LCICUN =
    new DecimalField(message, HEADERSIZE + 116, 10, 0, "E01LCICUN");
    fields[19] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 126, 45, "E01CUSNA1");
    fields[20] = fieldE01LCMBN1 =
    new CharacterField(message, HEADERSIZE + 171, 35, "E01LCMBN1");
    fields[21] = fieldE01LCISTA =
    new CharacterField(message, HEADERSIZE + 206, 1, "E01LCISTA");
    fields[22] = fieldE01STATUS =
    new CharacterField(message, HEADERSIZE + 207, 20, "E01STATUS");
    fields[23] = fieldE01LCISMT =
    new CharacterField(message, HEADERSIZE + 227, 3, "E01LCISMT");
    fields[24] = fieldE01LCIRID =
    new CharacterField(message, HEADERSIZE + 230, 12, "E01LCIRID");
    fields[25] = fieldE01LCIOPR =
    new CharacterField(message, HEADERSIZE + 242, 10, "E01LCIOPR");
    fields[26] = fieldE01LCIOPT =
    new CharacterField(message, HEADERSIZE + 252, 1, "E01LCIOPT");
    fields[27] = fieldE01DSCOPT =
    new CharacterField(message, HEADERSIZE + 253, 6, "E01DSCOPT");
    fields[28] = fieldE01LCISTS =
    new CharacterField(message, HEADERSIZE + 259, 1, "E01LCISTS");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01LCMBNK using a String value.
  */
  public void setE01LCMBNK(String newvalue)
  {
    fieldE01LCMBNK.setString(newvalue);
  }

  /**
  * Get value of field E01LCMBNK as a String.
  */
  public String getE01LCMBNK()
  {
    return fieldE01LCMBNK.getString();
  }

  /**
  * Set field E01LCIACC using a String value.
  */
  public void setE01LCIACC(String newvalue)
  {
    fieldE01LCIACC.setString(newvalue);
  }

  /**
  * Get value of field E01LCIACC as a String.
  */
  public String getE01LCIACC()
  {
    return fieldE01LCIACC.getString();
  }

  /**
  * Set numeric field E01LCIACC using a BigDecimal value.
  */
  public void setE01LCIACC(BigDecimal newvalue)
  {
    fieldE01LCIACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LCIACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LCIACC()
  {
    return fieldE01LCIACC.getBigDecimal();
  }

  /**
  * Set field E01LCIDNO using a String value.
  */
  public void setE01LCIDNO(String newvalue)
  {
    fieldE01LCIDNO.setString(newvalue);
  }

  /**
  * Get value of field E01LCIDNO as a String.
  */
  public String getE01LCIDNO()
  {
    return fieldE01LCIDNO.getString();
  }

  /**
  * Set numeric field E01LCIDNO using a BigDecimal value.
  */
  public void setE01LCIDNO(BigDecimal newvalue)
  {
    fieldE01LCIDNO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LCIDNO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LCIDNO()
  {
    return fieldE01LCIDNO.getBigDecimal();
  }

  /**
  * Set field E01LCICCY using a String value.
  */
  public void setE01LCICCY(String newvalue)
  {
    fieldE01LCICCY.setString(newvalue);
  }

  /**
  * Get value of field E01LCICCY as a String.
  */
  public String getE01LCICCY()
  {
    return fieldE01LCICCY.getString();
  }

  /**
  * Set field E01LCIAMN using a String value.
  */
  public void setE01LCIAMN(String newvalue)
  {
    fieldE01LCIAMN.setString(newvalue);
  }

  /**
  * Get value of field E01LCIAMN as a String.
  */
  public String getE01LCIAMN()
  {
    return fieldE01LCIAMN.getString();
  }

  /**
  * Set numeric field E01LCIAMN using a BigDecimal value.
  */
  public void setE01LCIAMN(BigDecimal newvalue)
  {
    fieldE01LCIAMN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LCIAMN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LCIAMN()
  {
    return fieldE01LCIAMN.getBigDecimal();
  }

  /**
  * Set field E01LCMATY using a String value.
  */
  public void setE01LCMATY(String newvalue)
  {
    fieldE01LCMATY.setString(newvalue);
  }

  /**
  * Get value of field E01LCMATY as a String.
  */
  public String getE01LCMATY()
  {
    return fieldE01LCMATY.getString();
  }

  /**
  * Set field E01LCMTYP using a String value.
  */
  public void setE01LCMTYP(String newvalue)
  {
    fieldE01LCMTYP.setString(newvalue);
  }

  /**
  * Get value of field E01LCMTYP as a String.
  */
  public String getE01LCMTYP()
  {
    return fieldE01LCMTYP.getString();
  }

  /**
  * Set field E01LCMORF using a String value.
  */
  public void setE01LCMORF(String newvalue)
  {
    fieldE01LCMORF.setString(newvalue);
  }

  /**
  * Get value of field E01LCMORF as a String.
  */
  public String getE01LCMORF()
  {
    return fieldE01LCMORF.getString();
  }

  /**
  * Set field E01LCMTRF using a String value.
  */
  public void setE01LCMTRF(String newvalue)
  {
    fieldE01LCMTRF.setString(newvalue);
  }

  /**
  * Get value of field E01LCMTRF as a String.
  */
  public String getE01LCMTRF()
  {
    return fieldE01LCMTRF.getString();
  }

  /**
  * Set field E01LCICUN using a String value.
  */
  public void setE01LCICUN(String newvalue)
  {
    fieldE01LCICUN.setString(newvalue);
  }

  /**
  * Get value of field E01LCICUN as a String.
  */
  public String getE01LCICUN()
  {
    return fieldE01LCICUN.getString();
  }

  /**
  * Set numeric field E01LCICUN using a BigDecimal value.
  */
  public void setE01LCICUN(BigDecimal newvalue)
  {
    fieldE01LCICUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LCICUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LCICUN()
  {
    return fieldE01LCICUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01LCMBN1 using a String value.
  */
  public void setE01LCMBN1(String newvalue)
  {
    fieldE01LCMBN1.setString(newvalue);
  }

  /**
  * Get value of field E01LCMBN1 as a String.
  */
  public String getE01LCMBN1()
  {
    return fieldE01LCMBN1.getString();
  }

  /**
  * Set field E01LCISTA using a String value.
  */
  public void setE01LCISTA(String newvalue)
  {
    fieldE01LCISTA.setString(newvalue);
  }

  /**
  * Get value of field E01LCISTA as a String.
  */
  public String getE01LCISTA()
  {
    return fieldE01LCISTA.getString();
  }

  /**
  * Set field E01STATUS using a String value.
  */
  public void setE01STATUS(String newvalue)
  {
    fieldE01STATUS.setString(newvalue);
  }

  /**
  * Get value of field E01STATUS as a String.
  */
  public String getE01STATUS()
  {
    return fieldE01STATUS.getString();
  }

  /**
  * Set field E01LCISMT using a String value.
  */
  public void setE01LCISMT(String newvalue)
  {
    fieldE01LCISMT.setString(newvalue);
  }

  /**
  * Get value of field E01LCISMT as a String.
  */
  public String getE01LCISMT()
  {
    return fieldE01LCISMT.getString();
  }

  /**
  * Set field E01LCIRID using a String value.
  */
  public void setE01LCIRID(String newvalue)
  {
    fieldE01LCIRID.setString(newvalue);
  }

  /**
  * Get value of field E01LCIRID as a String.
  */
  public String getE01LCIRID()
  {
    return fieldE01LCIRID.getString();
  }

  /**
  * Set field E01LCIOPR using a String value.
  */
  public void setE01LCIOPR(String newvalue)
  {
    fieldE01LCIOPR.setString(newvalue);
  }

  /**
  * Get value of field E01LCIOPR as a String.
  */
  public String getE01LCIOPR()
  {
    return fieldE01LCIOPR.getString();
  }

  /**
  * Set field E01LCIOPT using a String value.
  */
  public void setE01LCIOPT(String newvalue)
  {
    fieldE01LCIOPT.setString(newvalue);
  }

  /**
  * Get value of field E01LCIOPT as a String.
  */
  public String getE01LCIOPT()
  {
    return fieldE01LCIOPT.getString();
  }

  /**
  * Set field E01DSCOPT using a String value.
  */
  public void setE01DSCOPT(String newvalue)
  {
    fieldE01DSCOPT.setString(newvalue);
  }

  /**
  * Get value of field E01DSCOPT as a String.
  */
  public String getE01DSCOPT()
  {
    return fieldE01DSCOPT.getString();
  }

  /**
  * Set field E01LCISTS using a String value.
  */
  public void setE01LCISTS(String newvalue)
  {
    fieldE01LCISTS.setString(newvalue);
  }

  /**
  * Get value of field E01LCISTS as a String.
  */
  public String getE01LCISTS()
  {
    return fieldE01LCISTS.getString();
  }

}
