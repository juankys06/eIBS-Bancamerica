package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELEHDR physical file definition.
* 
* File level identifier is 1030121191938.
* Record format level identifier is 527B93C3E7C36.
*/

public class ELEHDRMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "USERID",
                                     "PROGRM",
                                     "TIMSYS",
                                     "SCRCOD",
                                     "OPECOD",
                                     "FLGMAS",
                                     "FLGWK1",
                                     "FLGWK2",
                                     "FLGWK3"
                                   };
  final static String tnames[] = {
                                   "USERID",
                                   "PROGRM",
                                   "TIMSYS",
                                   "SCRCOD",
                                   "OPECOD",
                                   "FLGMAS",
                                   "FLGWK1",
                                   "FLGWK2",
                                   "FLGWK3"
                                 };
  final static String fid = "1030121191938";
  final static String rid = "527B93C3E7C36";
  final static String fmtname = "ELEHDR";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldUSERID = null;
  private CharacterField fieldPROGRM = null;
  private CharacterField fieldTIMSYS = null;
  private CharacterField fieldSCRCOD = null;
  private CharacterField fieldOPECOD = null;
  private CharacterField fieldFLGMAS = null;
  private CharacterField fieldFLGWK1 = null;
  private CharacterField fieldFLGWK2 = null;
  private CharacterField fieldFLGWK3 = null;

  /**
  * Constructor for ELEHDRMessage.
  */
  public ELEHDRMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 42;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldUSERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "USERID");
    fields[1] = fieldPROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "PROGRM");
    fields[2] = fieldTIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "TIMSYS");
    fields[3] = fieldSCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "SCRCOD");
    fields[4] = fieldOPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "OPECOD");
    fields[5] = fieldFLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "FLGMAS");
    fields[6] = fieldFLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "FLGWK1");
    fields[7] = fieldFLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "FLGWK2");
    fields[8] = fieldFLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "FLGWK3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field USERID using a String value.
  */
  public void setUSERID(String newvalue)
  {
    fieldUSERID.setString(newvalue);
  }

  /**
  * Get value of field USERID as a String.
  */
  public String getUSERID()
  {
    return fieldUSERID.getString();
  }

  /**
  * Set field PROGRM using a String value.
  */
  public void setPROGRM(String newvalue)
  {
    fieldPROGRM.setString(newvalue);
  }

  /**
  * Get value of field PROGRM as a String.
  */
  public String getPROGRM()
  {
    return fieldPROGRM.getString();
  }

  /**
  * Set field TIMSYS using a String value.
  */
  public void setTIMSYS(String newvalue)
  {
    fieldTIMSYS.setString(newvalue);
  }

  /**
  * Get value of field TIMSYS as a String.
  */
  public String getTIMSYS()
  {
    return fieldTIMSYS.getString();
  }

  /**
  * Set field SCRCOD using a String value.
  */
  public void setSCRCOD(String newvalue)
  {
    fieldSCRCOD.setString(newvalue);
  }

  /**
  * Get value of field SCRCOD as a String.
  */
  public String getSCRCOD()
  {
    return fieldSCRCOD.getString();
  }

  /**
  * Set field OPECOD using a String value.
  */
  public void setOPECOD(String newvalue)
  {
    fieldOPECOD.setString(newvalue);
  }

  /**
  * Get value of field OPECOD as a String.
  */
  public String getOPECOD()
  {
    return fieldOPECOD.getString();
  }

  /**
  * Set field FLGMAS using a String value.
  */
  public void setFLGMAS(String newvalue)
  {
    fieldFLGMAS.setString(newvalue);
  }

  /**
  * Get value of field FLGMAS as a String.
  */
  public String getFLGMAS()
  {
    return fieldFLGMAS.getString();
  }

  /**
  * Set field FLGWK1 using a String value.
  */
  public void setFLGWK1(String newvalue)
  {
    fieldFLGWK1.setString(newvalue);
  }

  /**
  * Get value of field FLGWK1 as a String.
  */
  public String getFLGWK1()
  {
    return fieldFLGWK1.getString();
  }

  /**
  * Set field FLGWK2 using a String value.
  */
  public void setFLGWK2(String newvalue)
  {
    fieldFLGWK2.setString(newvalue);
  }

  /**
  * Get value of field FLGWK2 as a String.
  */
  public String getFLGWK2()
  {
    return fieldFLGWK2.getString();
  }

  /**
  * Set field FLGWK3 using a String value.
  */
  public void setFLGWK3(String newvalue)
  {
    fieldFLGWK3.setString(newvalue);
  }

  /**
  * Get value of field FLGWK3 as a String.
  */
  public String getFLGWK3()
  {
    return fieldFLGWK3.getString();
  }

}
