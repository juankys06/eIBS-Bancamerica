package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD043902 physical file definition.
* 
* File level identifier is 1021008114054.
* Record format level identifier is 551B770BD55DA.
*/

public class EDD043902Message extends MessageRecord
{
  final int FIELDCOUNT = 15;
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02CLSACC = null;
  private DecimalField fieldE02INVACC = null;
  private DecimalField fieldE02INVAMT = null;
  private DecimalField fieldE02INVTRM = null;
  private CharacterField fieldE02INVTRC = null;
  private DecimalField fieldE02INVMAT = null;

  /**
  * Constructor for EDD043902Message.
  */
  public EDD043902Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 98;
    fileid = "1021008114054";
    recordid = "551B770BD55DA";
    message = new byte[getByteLength()];
    formatname = "EDD043902";
    fieldnames = new String[FIELDCOUNT];
    tagnames = new String[FIELDCOUNT];
    fields = new MessageField[FIELDCOUNT];

    fieldnames[0] = "H02USERID";
    tagnames[0] = "H02USERID";
    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fieldnames[1] = "H02PROGRM";
    tagnames[1] = "H02PROGRM";
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fieldnames[2] = "H02TIMSYS";
    tagnames[2] = "H02TIMSYS";
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fieldnames[3] = "H02SCRCOD";
    tagnames[3] = "H02SCRCOD";
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fieldnames[4] = "H02OPECOD";
    tagnames[4] = "H02OPECOD";
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fieldnames[5] = "H02FLGMAS";
    tagnames[5] = "H02FLGMAS";
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fieldnames[6] = "H02FLGWK1";
    tagnames[6] = "H02FLGWK1";
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fieldnames[7] = "H02FLGWK2";
    tagnames[7] = "H02FLGWK2";
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fieldnames[8] = "H02FLGWK3";
    tagnames[8] = "H02FLGWK3";
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fieldnames[9] = "E02CLSACC";
    tagnames[9] = "E02CLSACC";
    fields[9] = fieldE02CLSACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02CLSACC");
    fieldnames[10] = "E02INVACC";
    tagnames[10] = "E02INVACC";
    fields[10] = fieldE02INVACC =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E02INVACC");
    fieldnames[11] = "E02INVAMT";
    tagnames[11] = "E02INVAMT";
    fields[11] = fieldE02INVAMT =
    new DecimalField(message, HEADERSIZE + 68, 17, 2, "E02INVAMT");
    fieldnames[12] = "E02INVTRM";
    tagnames[12] = "E02INVTRM";
    fields[12] = fieldE02INVTRM =
    new DecimalField(message, HEADERSIZE + 85, 5, 0, "E02INVTRM");
    fieldnames[13] = "E02INVTRC";
    tagnames[13] = "E02INVTRC";
    fields[13] = fieldE02INVTRC =
    new CharacterField(message, HEADERSIZE + 90, 1, "E02INVTRC");
    fieldnames[14] = "E02INVMAT";
    tagnames[14] = "E02INVMAT";
    fields[14] = fieldE02INVMAT =
    new DecimalField(message, HEADERSIZE + 91, 7, 0, "E02INVMAT");
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CLSACC using a String value.
  */
  public void setE02CLSACC(String newvalue)
  {
    fieldE02CLSACC.setString(newvalue);
  }

  /**
  * Get value of field E02CLSACC as a String.
  */
  public String getE02CLSACC()
  {
    return fieldE02CLSACC.getString();
  }

  /**
  * Set numeric field E02CLSACC using a BigDecimal value.
  */
  public void setE02CLSACC(BigDecimal newvalue)
  {
    fieldE02CLSACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CLSACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CLSACC()
  {
    return fieldE02CLSACC.getBigDecimal();
  }

  /**
  * Set field E02INVACC using a String value.
  */
  public void setE02INVACC(String newvalue)
  {
    fieldE02INVACC.setString(newvalue);
  }

  /**
  * Get value of field E02INVACC as a String.
  */
  public String getE02INVACC()
  {
    return fieldE02INVACC.getString();
  }

  /**
  * Set numeric field E02INVACC using a BigDecimal value.
  */
  public void setE02INVACC(BigDecimal newvalue)
  {
    fieldE02INVACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INVACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INVACC()
  {
    return fieldE02INVACC.getBigDecimal();
  }

  /**
  * Set field E02INVAMT using a String value.
  */
  public void setE02INVAMT(String newvalue)
  {
    fieldE02INVAMT.setString(newvalue);
  }

  /**
  * Get value of field E02INVAMT as a String.
  */
  public String getE02INVAMT()
  {
    return fieldE02INVAMT.getString();
  }

  /**
  * Set numeric field E02INVAMT using a BigDecimal value.
  */
  public void setE02INVAMT(BigDecimal newvalue)
  {
    fieldE02INVAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INVAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INVAMT()
  {
    return fieldE02INVAMT.getBigDecimal();
  }

  /**
  * Set field E02INVTRM using a String value.
  */
  public void setE02INVTRM(String newvalue)
  {
    fieldE02INVTRM.setString(newvalue);
  }

  /**
  * Get value of field E02INVTRM as a String.
  */
  public String getE02INVTRM()
  {
    return fieldE02INVTRM.getString();
  }

  /**
  * Set numeric field E02INVTRM using a BigDecimal value.
  */
  public void setE02INVTRM(BigDecimal newvalue)
  {
    fieldE02INVTRM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INVTRM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INVTRM()
  {
    return fieldE02INVTRM.getBigDecimal();
  }

  /**
  * Set field E02INVTRC using a String value.
  */
  public void setE02INVTRC(String newvalue)
  {
    fieldE02INVTRC.setString(newvalue);
  }

  /**
  * Get value of field E02INVTRC as a String.
  */
  public String getE02INVTRC()
  {
    return fieldE02INVTRC.getString();
  }

  /**
  * Set field E02INVMAT using a String value.
  */
  public void setE02INVMAT(String newvalue)
  {
    fieldE02INVMAT.setString(newvalue);
  }

  /**
  * Get value of field E02INVMAT as a String.
  */
  public String getE02INVMAT()
  {
    return fieldE02INVMAT.getString();
  }

  /**
  * Set numeric field E02INVMAT using a BigDecimal value.
  */
  public void setE02INVMAT(BigDecimal newvalue)
  {
    fieldE02INVMAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INVMAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INVMAT()
  {
    return fieldE02INVMAT.getBigDecimal();
  }

}
