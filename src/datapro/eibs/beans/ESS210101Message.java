package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS210101 physical file definition.
* 
* File level identifier is 1091216154035.
* Record format level identifier is 3AE502F73A920.
*/

public class ESS210101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USR",
                                     "H01PGM",
                                     "H01TIM",
                                     "H01SCR",
                                     "H01OPE",
                                     "H01MAS",
                                     "E01ACCSTS",
                                     "E01CCRSTS",
                                     "E01CCDSC",
                                     "E01CCMODE",
                                     "E01DATA1",
                                     "E01DATA2",
                                     "E01DATA3",
                                     "E01DATA4",
                                     "E01DATN1",
                                     "E01DATN2",
                                     "E01DATN3",
                                     "E01DATD1",
                                     "E01DATD2",
                                     "E01DATD3"
                                   };
  final static String tnames[] = {
                                   "H01USR",
                                   "H01PGM",
                                   "H01TIM",
                                   "H01SCR",
                                   "H01OPE",
                                   "H01MAS",
                                   "E01ACCSTS",
                                   "E01CCRSTS",
                                   "E01CCDSC",
                                   "E01CCMODE",
                                   "E01DATA1",
                                   "E01DATA2",
                                   "E01DATA3",
                                   "E01DATA4",
                                   "E01DATN1",
                                   "E01DATN2",
                                   "E01DATN3",
                                   "E01DATD1",
                                   "E01DATD2",
                                   "E01DATD3"
                                 };
  final static String fid = "1091216154035";
  final static String rid = "3AE502F73A920";
  final static String fmtname = "ESS210101";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USR = null;
  private CharacterField fieldH01PGM = null;
  private CharacterField fieldH01TIM = null;
  private CharacterField fieldH01SCR = null;
  private CharacterField fieldH01OPE = null;
  private CharacterField fieldH01MAS = null;
  private CharacterField fieldE01ACCSTS = null;
  private CharacterField fieldE01CCRSTS = null;
  private CharacterField fieldE01CCDSC = null;
  private CharacterField fieldE01CCMODE = null;
  private CharacterField fieldE01DATA1 = null;
  private CharacterField fieldE01DATA2 = null;
  private CharacterField fieldE01DATA3 = null;
  private CharacterField fieldE01DATA4 = null;
  private DecimalField fieldE01DATN1 = null;
  private DecimalField fieldE01DATN2 = null;
  private DecimalField fieldE01DATN3 = null;
  private DecimalField fieldE01DATD1 = null;
  private DecimalField fieldE01DATD2 = null;
  private DecimalField fieldE01DATD3 = null;

  /**
  * Constructor for ESS210101Message.
  */
  public ESS210101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 278;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USR");
    fields[1] = fieldH01PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PGM");
    fields[2] = fieldH01TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIM");
    fields[3] = fieldH01SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCR");
    fields[4] = fieldH01OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPE");
    fields[5] = fieldH01MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01MAS");
    fields[6] = fieldE01ACCSTS =
    new CharacterField(message, HEADERSIZE + 39, 2, "E01ACCSTS");
    fields[7] = fieldE01CCRSTS =
    new CharacterField(message, HEADERSIZE + 41, 2, "E01CCRSTS");
    fields[8] = fieldE01CCDSC =
    new CharacterField(message, HEADERSIZE + 43, 30, "E01CCDSC");
    fields[9] = fieldE01CCMODE =
    new CharacterField(message, HEADERSIZE + 73, 1, "E01CCMODE");
    fields[10] = fieldE01DATA1 =
    new CharacterField(message, HEADERSIZE + 74, 30, "E01DATA1");
    fields[11] = fieldE01DATA2 =
    new CharacterField(message, HEADERSIZE + 104, 30, "E01DATA2");
    fields[12] = fieldE01DATA3 =
    new CharacterField(message, HEADERSIZE + 134, 30, "E01DATA3");
    fields[13] = fieldE01DATA4 =
    new CharacterField(message, HEADERSIZE + 164, 30, "E01DATA4");
    fields[14] = fieldE01DATN1 =
    new DecimalField(message, HEADERSIZE + 194, 11, 0, "E01DATN1");
    fields[15] = fieldE01DATN2 =
    new DecimalField(message, HEADERSIZE + 205, 11, 0, "E01DATN2");
    fields[16] = fieldE01DATN3 =
    new DecimalField(message, HEADERSIZE + 216, 11, 0, "E01DATN3");
    fields[17] = fieldE01DATD1 =
    new DecimalField(message, HEADERSIZE + 227, 17, 2, "E01DATD1");
    fields[18] = fieldE01DATD2 =
    new DecimalField(message, HEADERSIZE + 244, 17, 2, "E01DATD2");
    fields[19] = fieldE01DATD3 =
    new DecimalField(message, HEADERSIZE + 261, 17, 2, "E01DATD3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USR using a String value.
  */
  public void setH01USR(String newvalue)
  {
    fieldH01USR.setString(newvalue);
  }

  /**
  * Get value of field H01USR as a String.
  */
  public String getH01USR()
  {
    return fieldH01USR.getString();
  }

  /**
  * Set field H01PGM using a String value.
  */
  public void setH01PGM(String newvalue)
  {
    fieldH01PGM.setString(newvalue);
  }

  /**
  * Get value of field H01PGM as a String.
  */
  public String getH01PGM()
  {
    return fieldH01PGM.getString();
  }

  /**
  * Set field H01TIM using a String value.
  */
  public void setH01TIM(String newvalue)
  {
    fieldH01TIM.setString(newvalue);
  }

  /**
  * Get value of field H01TIM as a String.
  */
  public String getH01TIM()
  {
    return fieldH01TIM.getString();
  }

  /**
  * Set field H01SCR using a String value.
  */
  public void setH01SCR(String newvalue)
  {
    fieldH01SCR.setString(newvalue);
  }

  /**
  * Get value of field H01SCR as a String.
  */
  public String getH01SCR()
  {
    return fieldH01SCR.getString();
  }

  /**
  * Set field H01OPE using a String value.
  */
  public void setH01OPE(String newvalue)
  {
    fieldH01OPE.setString(newvalue);
  }

  /**
  * Get value of field H01OPE as a String.
  */
  public String getH01OPE()
  {
    return fieldH01OPE.getString();
  }

  /**
  * Set field H01MAS using a String value.
  */
  public void setH01MAS(String newvalue)
  {
    fieldH01MAS.setString(newvalue);
  }

  /**
  * Get value of field H01MAS as a String.
  */
  public String getH01MAS()
  {
    return fieldH01MAS.getString();
  }

  /**
  * Set field E01ACCSTS using a String value.
  */
  public void setE01ACCSTS(String newvalue)
  {
    fieldE01ACCSTS.setString(newvalue);
  }

  /**
  * Get value of field E01ACCSTS as a String.
  */
  public String getE01ACCSTS()
  {
    return fieldE01ACCSTS.getString();
  }

  /**
  * Set field E01CCRSTS using a String value.
  */
  public void setE01CCRSTS(String newvalue)
  {
    fieldE01CCRSTS.setString(newvalue);
  }

  /**
  * Get value of field E01CCRSTS as a String.
  */
  public String getE01CCRSTS()
  {
    return fieldE01CCRSTS.getString();
  }

  /**
  * Set field E01CCDSC using a String value.
  */
  public void setE01CCDSC(String newvalue)
  {
    fieldE01CCDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CCDSC as a String.
  */
  public String getE01CCDSC()
  {
    return fieldE01CCDSC.getString();
  }

  /**
  * Set field E01CCMODE using a String value.
  */
  public void setE01CCMODE(String newvalue)
  {
    fieldE01CCMODE.setString(newvalue);
  }

  /**
  * Get value of field E01CCMODE as a String.
  */
  public String getE01CCMODE()
  {
    return fieldE01CCMODE.getString();
  }

  /**
  * Set field E01DATA1 using a String value.
  */
  public void setE01DATA1(String newvalue)
  {
    fieldE01DATA1.setString(newvalue);
  }

  /**
  * Get value of field E01DATA1 as a String.
  */
  public String getE01DATA1()
  {
    return fieldE01DATA1.getString();
  }

  /**
  * Set field E01DATA2 using a String value.
  */
  public void setE01DATA2(String newvalue)
  {
    fieldE01DATA2.setString(newvalue);
  }

  /**
  * Get value of field E01DATA2 as a String.
  */
  public String getE01DATA2()
  {
    return fieldE01DATA2.getString();
  }

  /**
  * Set field E01DATA3 using a String value.
  */
  public void setE01DATA3(String newvalue)
  {
    fieldE01DATA3.setString(newvalue);
  }

  /**
  * Get value of field E01DATA3 as a String.
  */
  public String getE01DATA3()
  {
    return fieldE01DATA3.getString();
  }

  /**
  * Set field E01DATA4 using a String value.
  */
  public void setE01DATA4(String newvalue)
  {
    fieldE01DATA4.setString(newvalue);
  }

  /**
  * Get value of field E01DATA4 as a String.
  */
  public String getE01DATA4()
  {
    return fieldE01DATA4.getString();
  }

  /**
  * Set field E01DATN1 using a String value.
  */
  public void setE01DATN1(String newvalue)
  {
    fieldE01DATN1.setString(newvalue);
  }

  /**
  * Get value of field E01DATN1 as a String.
  */
  public String getE01DATN1()
  {
    return fieldE01DATN1.getString();
  }

  /**
  * Set numeric field E01DATN1 using a BigDecimal value.
  */
  public void setE01DATN1(BigDecimal newvalue)
  {
    fieldE01DATN1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATN1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATN1()
  {
    return fieldE01DATN1.getBigDecimal();
  }

  /**
  * Set field E01DATN2 using a String value.
  */
  public void setE01DATN2(String newvalue)
  {
    fieldE01DATN2.setString(newvalue);
  }

  /**
  * Get value of field E01DATN2 as a String.
  */
  public String getE01DATN2()
  {
    return fieldE01DATN2.getString();
  }

  /**
  * Set numeric field E01DATN2 using a BigDecimal value.
  */
  public void setE01DATN2(BigDecimal newvalue)
  {
    fieldE01DATN2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATN2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATN2()
  {
    return fieldE01DATN2.getBigDecimal();
  }

  /**
  * Set field E01DATN3 using a String value.
  */
  public void setE01DATN3(String newvalue)
  {
    fieldE01DATN3.setString(newvalue);
  }

  /**
  * Get value of field E01DATN3 as a String.
  */
  public String getE01DATN3()
  {
    return fieldE01DATN3.getString();
  }

  /**
  * Set numeric field E01DATN3 using a BigDecimal value.
  */
  public void setE01DATN3(BigDecimal newvalue)
  {
    fieldE01DATN3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATN3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATN3()
  {
    return fieldE01DATN3.getBigDecimal();
  }

  /**
  * Set field E01DATD1 using a String value.
  */
  public void setE01DATD1(String newvalue)
  {
    fieldE01DATD1.setString(newvalue);
  }

  /**
  * Get value of field E01DATD1 as a String.
  */
  public String getE01DATD1()
  {
    return fieldE01DATD1.getString();
  }

  /**
  * Set numeric field E01DATD1 using a BigDecimal value.
  */
  public void setE01DATD1(BigDecimal newvalue)
  {
    fieldE01DATD1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATD1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATD1()
  {
    return fieldE01DATD1.getBigDecimal();
  }

  /**
  * Set field E01DATD2 using a String value.
  */
  public void setE01DATD2(String newvalue)
  {
    fieldE01DATD2.setString(newvalue);
  }

  /**
  * Get value of field E01DATD2 as a String.
  */
  public String getE01DATD2()
  {
    return fieldE01DATD2.getString();
  }

  /**
  * Set numeric field E01DATD2 using a BigDecimal value.
  */
  public void setE01DATD2(BigDecimal newvalue)
  {
    fieldE01DATD2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATD2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATD2()
  {
    return fieldE01DATD2.getBigDecimal();
  }

  /**
  * Set field E01DATD3 using a String value.
  */
  public void setE01DATD3(String newvalue)
  {
    fieldE01DATD3.setString(newvalue);
  }

  /**
  * Get value of field E01DATD3 as a String.
  */
  public String getE01DATD3()
  {
    return fieldE01DATD3.getString();
  }

  /**
  * Set numeric field E01DATD3 using a BigDecimal value.
  */
  public void setE01DATD3(BigDecimal newvalue)
  {
    fieldE01DATD3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATD3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATD3()
  {
    return fieldE01DATD3.getBigDecimal();
  }

}
