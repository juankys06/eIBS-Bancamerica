package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0160DS physical file definition.
* 
* File level identifier is 1030121192030.
* Record format level identifier is 2C7CA7207957D.
*/

public class EWD0160DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDUSR",
                                     "EWDTYP",
                                     "EWDRUS",
                                     "EWDRNM",
                                     "EWDSUC",
                                     "EWDEML",
                                     "EWDPHN",
                                     "EWDPXT",
                                     "EWDSEG",
                                     "EWDTAT",
                                     "EWDAPL",
                                     "EWDLNA",
                                     "EWDALM",
                                     "EWDANG",
                                     "EWDRMK",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDUSR",
                                   "EWDTYP",
                                   "EWDRUS",
                                   "EWDRNM",
                                   "EWDSUC",
                                   "EWDEML",
                                   "EWDPHN",
                                   "EWDPXT",
                                   "EWDSEG",
                                   "EWDTAT",
                                   "EWDAPL",
                                   "EWDLNA",
                                   "EWDALM",
                                   "EWDANG",
                                   "EWDRMK",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192030";
  final static String rid = "2C7CA7207957D";
  final static String fmtname = "EWD0160DS";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDUSR = null;
  private CharacterField fieldEWDTYP = null;
  private CharacterField fieldEWDRUS = null;
  private CharacterField fieldEWDRNM = null;
  private CharacterField fieldEWDSUC = null;
  private CharacterField fieldEWDEML = null;
  private DecimalField fieldEWDPHN = null;
  private DecimalField fieldEWDPXT = null;
  private CharacterField fieldEWDSEG = null;
  private CharacterField fieldEWDTAT = null;
  private CharacterField fieldEWDAPL = null;
  private CharacterField fieldEWDLNA = null;
  private DecimalField fieldEWDALM = null;
  private DecimalField fieldEWDANG = null;
  private CharacterField fieldEWDRMK = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0160DSMessage.
  */
  public EWD0160DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 177;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "EWDUSR");
    fields[1] = fieldEWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "EWDTYP");
    fields[2] = fieldEWDRUS =
    new CharacterField(message, HEADERSIZE + 11, 10, "EWDRUS");
    fields[3] = fieldEWDRNM =
    new CharacterField(message, HEADERSIZE + 21, 35, "EWDRNM");
    fields[4] = fieldEWDSUC =
    new CharacterField(message, HEADERSIZE + 56, 4, "EWDSUC");
    fields[5] = fieldEWDEML =
    new CharacterField(message, HEADERSIZE + 60, 40, "EWDEML");
    fields[6] = fieldEWDPHN =
    new DecimalField(message, HEADERSIZE + 100, 12, 0, "EWDPHN");
    fields[7] = fieldEWDPXT =
    new DecimalField(message, HEADERSIZE + 112, 5, 0, "EWDPXT");
    fields[8] = fieldEWDSEG =
    new CharacterField(message, HEADERSIZE + 117, 4, "EWDSEG");
    fields[9] = fieldEWDTAT =
    new CharacterField(message, HEADERSIZE + 121, 1, "EWDTAT");
    fields[10] = fieldEWDAPL =
    new CharacterField(message, HEADERSIZE + 122, 4, "EWDAPL");
    fields[11] = fieldEWDLNA =
    new CharacterField(message, HEADERSIZE + 126, 1, "EWDLNA");
    fields[12] = fieldEWDALM =
    new DecimalField(message, HEADERSIZE + 127, 17, 2, "EWDALM");
    fields[13] = fieldEWDANG =
    new DecimalField(message, HEADERSIZE + 144, 17, 2, "EWDANG");
    fields[14] = fieldEWDRMK =
    new CharacterField(message, HEADERSIZE + 161, 15, "EWDRMK");
    fields[15] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 176, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDUSR using a String value.
  */
  public void setEWDUSR(String newvalue)
  {
    fieldEWDUSR.setString(newvalue);
  }

  /**
  * Get value of field EWDUSR as a String.
  */
  public String getEWDUSR()
  {
    return fieldEWDUSR.getString();
  }

  /**
  * Set field EWDTYP using a String value.
  */
  public void setEWDTYP(String newvalue)
  {
    fieldEWDTYP.setString(newvalue);
  }

  /**
  * Get value of field EWDTYP as a String.
  */
  public String getEWDTYP()
  {
    return fieldEWDTYP.getString();
  }

  /**
  * Set field EWDRUS using a String value.
  */
  public void setEWDRUS(String newvalue)
  {
    fieldEWDRUS.setString(newvalue);
  }

  /**
  * Get value of field EWDRUS as a String.
  */
  public String getEWDRUS()
  {
    return fieldEWDRUS.getString();
  }

  /**
  * Set field EWDRNM using a String value.
  */
  public void setEWDRNM(String newvalue)
  {
    fieldEWDRNM.setString(newvalue);
  }

  /**
  * Get value of field EWDRNM as a String.
  */
  public String getEWDRNM()
  {
    return fieldEWDRNM.getString();
  }

  /**
  * Set field EWDSUC using a String value.
  */
  public void setEWDSUC(String newvalue)
  {
    fieldEWDSUC.setString(newvalue);
  }

  /**
  * Get value of field EWDSUC as a String.
  */
  public String getEWDSUC()
  {
    return fieldEWDSUC.getString();
  }

  /**
  * Set field EWDEML using a String value.
  */
  public void setEWDEML(String newvalue)
  {
    fieldEWDEML.setString(newvalue);
  }

  /**
  * Get value of field EWDEML as a String.
  */
  public String getEWDEML()
  {
    return fieldEWDEML.getString();
  }

  /**
  * Set field EWDPHN using a String value.
  */
  public void setEWDPHN(String newvalue)
  {
    fieldEWDPHN.setString(newvalue);
  }

  /**
  * Get value of field EWDPHN as a String.
  */
  public String getEWDPHN()
  {
    return fieldEWDPHN.getString();
  }

  /**
  * Set numeric field EWDPHN using a BigDecimal value.
  */
  public void setEWDPHN(BigDecimal newvalue)
  {
    fieldEWDPHN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDPHN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDPHN()
  {
    return fieldEWDPHN.getBigDecimal();
  }

  /**
  * Set field EWDPXT using a String value.
  */
  public void setEWDPXT(String newvalue)
  {
    fieldEWDPXT.setString(newvalue);
  }

  /**
  * Get value of field EWDPXT as a String.
  */
  public String getEWDPXT()
  {
    return fieldEWDPXT.getString();
  }

  /**
  * Set numeric field EWDPXT using a BigDecimal value.
  */
  public void setEWDPXT(BigDecimal newvalue)
  {
    fieldEWDPXT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDPXT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDPXT()
  {
    return fieldEWDPXT.getBigDecimal();
  }

  /**
  * Set field EWDSEG using a String value.
  */
  public void setEWDSEG(String newvalue)
  {
    fieldEWDSEG.setString(newvalue);
  }

  /**
  * Get value of field EWDSEG as a String.
  */
  public String getEWDSEG()
  {
    return fieldEWDSEG.getString();
  }

  /**
  * Set field EWDTAT using a String value.
  */
  public void setEWDTAT(String newvalue)
  {
    fieldEWDTAT.setString(newvalue);
  }

  /**
  * Get value of field EWDTAT as a String.
  */
  public String getEWDTAT()
  {
    return fieldEWDTAT.getString();
  }

  /**
  * Set field EWDAPL using a String value.
  */
  public void setEWDAPL(String newvalue)
  {
    fieldEWDAPL.setString(newvalue);
  }

  /**
  * Get value of field EWDAPL as a String.
  */
  public String getEWDAPL()
  {
    return fieldEWDAPL.getString();
  }

  /**
  * Set field EWDLNA using a String value.
  */
  public void setEWDLNA(String newvalue)
  {
    fieldEWDLNA.setString(newvalue);
  }

  /**
  * Get value of field EWDLNA as a String.
  */
  public String getEWDLNA()
  {
    return fieldEWDLNA.getString();
  }

  /**
  * Set field EWDALM using a String value.
  */
  public void setEWDALM(String newvalue)
  {
    fieldEWDALM.setString(newvalue);
  }

  /**
  * Get value of field EWDALM as a String.
  */
  public String getEWDALM()
  {
    return fieldEWDALM.getString();
  }

  /**
  * Set numeric field EWDALM using a BigDecimal value.
  */
  public void setEWDALM(BigDecimal newvalue)
  {
    fieldEWDALM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDALM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDALM()
  {
    return fieldEWDALM.getBigDecimal();
  }

  /**
  * Set field EWDANG using a String value.
  */
  public void setEWDANG(String newvalue)
  {
    fieldEWDANG.setString(newvalue);
  }

  /**
  * Get value of field EWDANG as a String.
  */
  public String getEWDANG()
  {
    return fieldEWDANG.getString();
  }

  /**
  * Set numeric field EWDANG using a BigDecimal value.
  */
  public void setEWDANG(BigDecimal newvalue)
  {
    fieldEWDANG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDANG as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDANG()
  {
    return fieldEWDANG.getBigDecimal();
  }

  /**
  * Set field EWDRMK using a String value.
  */
  public void setEWDRMK(String newvalue)
  {
    fieldEWDRMK.setString(newvalue);
  }

  /**
  * Get value of field EWDRMK as a String.
  */
  public String getEWDRMK()
  {
    return fieldEWDRMK.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
