package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFE013001 physical file definition.
* 
* File level identifier is 1081121123137.
* Record format level identifier is 35C28C0687F58.
*/

public class EFE013001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01SWDDID",
                                     "E01SWDREF",
                                     "E01SWDCCY",
                                     "E01SWDACD",
                                     "E01SWDTYP",
                                     "E01SWDSBT",
                                     "E01SWDVAL",
                                     "E01SWDCUN",
                                     "E01SWDAMN",
                                     "E01SWDRA1",
                                     "E01SWDDSC",
                                     "E02ACTION",
                                     "E02MSGTXT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01SWDDID",
                                   "E01SWDREF",
                                   "E01SWDCCY",
                                   "E01SWDACD",
                                   "E01SWDTYP",
                                   "E01SWDSBT",
                                   "E01SWDVAL",
                                   "E01SWDCUN",
                                   "E01SWDAMN",
                                   "E01SWDRA1",
                                   "E01SWDDSC",
                                   "E02ACTION",
                                   "E02MSGTXT"
                                 };
  final static String fid = "1081121123137";
  final static String rid = "35C28C0687F58";
  final static String fmtname = "EFE013001";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01SWDDID = null;
  private CharacterField fieldE01SWDREF = null;
  private CharacterField fieldE01SWDCCY = null;
  private CharacterField fieldE01SWDACD = null;
  private CharacterField fieldE01SWDTYP = null;
  private CharacterField fieldE01SWDSBT = null;
  private DecimalField fieldE01SWDVAL = null;
  private DecimalField fieldE01SWDCUN = null;
  private DecimalField fieldE01SWDAMN = null;
  private DecimalField fieldE01SWDRA1 = null;
  private CharacterField fieldE01SWDDSC = null;
  private CharacterField fieldE02ACTION = null;
  private CharacterField fieldE02MSGTXT = null;

  /**
  * Constructor for EFE013001Message.
  */
  public EFE013001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1155;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01SWDDID =
    new CharacterField(message, HEADERSIZE + 42, 10, "E01SWDDID");
    fields[10] = fieldE01SWDREF =
    new CharacterField(message, HEADERSIZE + 52, 12, "E01SWDREF");
    fields[11] = fieldE01SWDCCY =
    new CharacterField(message, HEADERSIZE + 64, 3, "E01SWDCCY");
    fields[12] = fieldE01SWDACD =
    new CharacterField(message, HEADERSIZE + 67, 2, "E01SWDACD");
    fields[13] = fieldE01SWDTYP =
    new CharacterField(message, HEADERSIZE + 69, 4, "E01SWDTYP");
    fields[14] = fieldE01SWDSBT =
    new CharacterField(message, HEADERSIZE + 73, 4, "E01SWDSBT");
    fields[15] = fieldE01SWDVAL =
    new DecimalField(message, HEADERSIZE + 77, 7, 0, "E01SWDVAL");
    fields[16] = fieldE01SWDCUN =
    new DecimalField(message, HEADERSIZE + 84, 10, 0, "E01SWDCUN");
    fields[17] = fieldE01SWDAMN =
    new DecimalField(message, HEADERSIZE + 94, 17, 2, "E01SWDAMN");
    fields[18] = fieldE01SWDRA1 =
    new DecimalField(message, HEADERSIZE + 111, 13, 6, "E01SWDRA1");
    fields[19] = fieldE01SWDDSC =
    new CharacterField(message, HEADERSIZE + 124, 30, "E01SWDDSC");
    fields[20] = fieldE02ACTION =
    new CharacterField(message, HEADERSIZE + 154, 1, "E02ACTION");
    fields[21] = fieldE02MSGTXT =
    new CharacterField(message, HEADERSIZE + 155, 1000, "E02MSGTXT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01SWDDID using a String value.
  */
  public void setE01SWDDID(String newvalue)
  {
    fieldE01SWDDID.setString(newvalue);
  }

  /**
  * Get value of field E01SWDDID as a String.
  */
  public String getE01SWDDID()
  {
    return fieldE01SWDDID.getString();
  }

  /**
  * Set field E01SWDREF using a String value.
  */
  public void setE01SWDREF(String newvalue)
  {
    fieldE01SWDREF.setString(newvalue);
  }

  /**
  * Get value of field E01SWDREF as a String.
  */
  public String getE01SWDREF()
  {
    return fieldE01SWDREF.getString();
  }

  /**
  * Set field E01SWDCCY using a String value.
  */
  public void setE01SWDCCY(String newvalue)
  {
    fieldE01SWDCCY.setString(newvalue);
  }

  /**
  * Get value of field E01SWDCCY as a String.
  */
  public String getE01SWDCCY()
  {
    return fieldE01SWDCCY.getString();
  }

  /**
  * Set field E01SWDACD using a String value.
  */
  public void setE01SWDACD(String newvalue)
  {
    fieldE01SWDACD.setString(newvalue);
  }

  /**
  * Get value of field E01SWDACD as a String.
  */
  public String getE01SWDACD()
  {
    return fieldE01SWDACD.getString();
  }

  /**
  * Set field E01SWDTYP using a String value.
  */
  public void setE01SWDTYP(String newvalue)
  {
    fieldE01SWDTYP.setString(newvalue);
  }

  /**
  * Get value of field E01SWDTYP as a String.
  */
  public String getE01SWDTYP()
  {
    return fieldE01SWDTYP.getString();
  }

  /**
  * Set field E01SWDSBT using a String value.
  */
  public void setE01SWDSBT(String newvalue)
  {
    fieldE01SWDSBT.setString(newvalue);
  }

  /**
  * Get value of field E01SWDSBT as a String.
  */
  public String getE01SWDSBT()
  {
    return fieldE01SWDSBT.getString();
  }

  /**
  * Set field E01SWDVAL using a String value.
  */
  public void setE01SWDVAL(String newvalue)
  {
    fieldE01SWDVAL.setString(newvalue);
  }

  /**
  * Get value of field E01SWDVAL as a String.
  */
  public String getE01SWDVAL()
  {
    return fieldE01SWDVAL.getString();
  }

  /**
  * Set numeric field E01SWDVAL using a BigDecimal value.
  */
  public void setE01SWDVAL(BigDecimal newvalue)
  {
    fieldE01SWDVAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SWDVAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SWDVAL()
  {
    return fieldE01SWDVAL.getBigDecimal();
  }

  /**
  * Set field E01SWDCUN using a String value.
  */
  public void setE01SWDCUN(String newvalue)
  {
    fieldE01SWDCUN.setString(newvalue);
  }

  /**
  * Get value of field E01SWDCUN as a String.
  */
  public String getE01SWDCUN()
  {
    return fieldE01SWDCUN.getString();
  }

  /**
  * Set numeric field E01SWDCUN using a BigDecimal value.
  */
  public void setE01SWDCUN(BigDecimal newvalue)
  {
    fieldE01SWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SWDCUN()
  {
    return fieldE01SWDCUN.getBigDecimal();
  }

  /**
  * Set field E01SWDAMN using a String value.
  */
  public void setE01SWDAMN(String newvalue)
  {
    fieldE01SWDAMN.setString(newvalue);
  }

  /**
  * Get value of field E01SWDAMN as a String.
  */
  public String getE01SWDAMN()
  {
    return fieldE01SWDAMN.getString();
  }

  /**
  * Set numeric field E01SWDAMN using a BigDecimal value.
  */
  public void setE01SWDAMN(BigDecimal newvalue)
  {
    fieldE01SWDAMN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SWDAMN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SWDAMN()
  {
    return fieldE01SWDAMN.getBigDecimal();
  }

  /**
  * Set field E01SWDRA1 using a String value.
  */
  public void setE01SWDRA1(String newvalue)
  {
    fieldE01SWDRA1.setString(newvalue);
  }

  /**
  * Get value of field E01SWDRA1 as a String.
  */
  public String getE01SWDRA1()
  {
    return fieldE01SWDRA1.getString();
  }

  /**
  * Set numeric field E01SWDRA1 using a BigDecimal value.
  */
  public void setE01SWDRA1(BigDecimal newvalue)
  {
    fieldE01SWDRA1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SWDRA1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SWDRA1()
  {
    return fieldE01SWDRA1.getBigDecimal();
  }

  /**
  * Set field E01SWDDSC using a String value.
  */
  public void setE01SWDDSC(String newvalue)
  {
    fieldE01SWDDSC.setString(newvalue);
  }

  /**
  * Get value of field E01SWDDSC as a String.
  */
  public String getE01SWDDSC()
  {
    return fieldE01SWDDSC.getString();
  }

  /**
  * Set field E02ACTION using a String value.
  */
  public void setE02ACTION(String newvalue)
  {
    fieldE02ACTION.setString(newvalue);
  }

  /**
  * Get value of field E02ACTION as a String.
  */
  public String getE02ACTION()
  {
    return fieldE02ACTION.getString();
  }

  /**
  * Set field E02MSGTXT using a String value.
  */
  public void setE02MSGTXT(String newvalue)
  {
    fieldE02MSGTXT.setString(newvalue);
  }

  /**
  * Get value of field E02MSGTXT as a String.
  */
  public String getE02MSGTXT()
  {
    return fieldE02MSGTXT.getString();
  }

}
