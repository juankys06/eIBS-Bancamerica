package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRMLDMDS physical file definition.
* 
* File level identifier is 1060822183803.
* Record format level identifier is 4C10595619E7F.
*/

public class EFRMLDMDSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "LDMMOT",
                                     "LDMUSO",
                                     "LDMVOL",
                                     "LDMDEP",
                                     "LDMPMD",
                                     "LDMTRF",
                                     "LDMCN1",
                                     "LDMCN2",
                                     "LDMCN3",
                                     "LDMCN4",
                                     "LDMUC1",
                                     "LDMUC2",
                                     "LDMFL1",
                                     "LDMFL2",
                                     "LDMAM1",
                                     "LDMAM2"
                                   };
  final static String tnames[] = {
                                   "LDMMOT",
                                   "LDMUSO",
                                   "LDMVOL",
                                   "LDMDEP",
                                   "LDMPMD",
                                   "LDMTRF",
                                   "LDMCN1",
                                   "LDMCN2",
                                   "LDMCN3",
                                   "LDMCN4",
                                   "LDMUC1",
                                   "LDMUC2",
                                   "LDMFL1",
                                   "LDMFL2",
                                   "LDMAM1",
                                   "LDMAM2"
                                 };
  final static String fid = "1060822183803";
  final static String rid = "4C10595619E7F";
  final static String fmtname = "EFRMLDMDS";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldLDMMOT = null;
  private CharacterField fieldLDMUSO = null;
  private DecimalField fieldLDMVOL = null;
  private DecimalField fieldLDMDEP = null;
  private DecimalField fieldLDMPMD = null;
  private CharacterField fieldLDMTRF = null;
  private CharacterField fieldLDMCN1 = null;
  private CharacterField fieldLDMCN2 = null;
  private CharacterField fieldLDMCN3 = null;
  private CharacterField fieldLDMCN4 = null;
  private CharacterField fieldLDMUC1 = null;
  private CharacterField fieldLDMUC2 = null;
  private CharacterField fieldLDMFL1 = null;
  private CharacterField fieldLDMFL2 = null;
  private DecimalField fieldLDMAM1 = null;
  private DecimalField fieldLDMAM2 = null;

  /**
  * Constructor for EFRMLDMDSMessage.
  */
  public EFRMLDMDSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 114;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldLDMMOT =
    new CharacterField(message, HEADERSIZE + 0, 4, "LDMMOT");
    fields[1] = fieldLDMUSO =
    new CharacterField(message, HEADERSIZE + 4, 4, "LDMUSO");
    fields[2] = fieldLDMVOL =
    new DecimalField(message, HEADERSIZE + 8, 17, 2, "LDMVOL");
    fields[3] = fieldLDMDEP =
    new DecimalField(message, HEADERSIZE + 25, 17, 2, "LDMDEP");
    fields[4] = fieldLDMPMD =
    new DecimalField(message, HEADERSIZE + 42, 11, 6, "LDMPMD");
    fields[5] = fieldLDMTRF =
    new CharacterField(message, HEADERSIZE + 53, 1, "LDMTRF");
    fields[6] = fieldLDMCN1 =
    new CharacterField(message, HEADERSIZE + 54, 4, "LDMCN1");
    fields[7] = fieldLDMCN2 =
    new CharacterField(message, HEADERSIZE + 58, 4, "LDMCN2");
    fields[8] = fieldLDMCN3 =
    new CharacterField(message, HEADERSIZE + 62, 4, "LDMCN3");
    fields[9] = fieldLDMCN4 =
    new CharacterField(message, HEADERSIZE + 66, 4, "LDMCN4");
    fields[10] = fieldLDMUC1 =
    new CharacterField(message, HEADERSIZE + 70, 4, "LDMUC1");
    fields[11] = fieldLDMUC2 =
    new CharacterField(message, HEADERSIZE + 74, 4, "LDMUC2");
    fields[12] = fieldLDMFL1 =
    new CharacterField(message, HEADERSIZE + 78, 1, "LDMFL1");
    fields[13] = fieldLDMFL2 =
    new CharacterField(message, HEADERSIZE + 79, 1, "LDMFL2");
    fields[14] = fieldLDMAM1 =
    new DecimalField(message, HEADERSIZE + 80, 17, 2, "LDMAM1");
    fields[15] = fieldLDMAM2 =
    new DecimalField(message, HEADERSIZE + 97, 17, 2, "LDMAM2");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field LDMMOT using a String value.
  */
  public void setLDMMOT(String newvalue)
  {
    fieldLDMMOT.setString(newvalue);
  }

  /**
  * Get value of field LDMMOT as a String.
  */
  public String getLDMMOT()
  {
    return fieldLDMMOT.getString();
  }

  /**
  * Set field LDMUSO using a String value.
  */
  public void setLDMUSO(String newvalue)
  {
    fieldLDMUSO.setString(newvalue);
  }

  /**
  * Get value of field LDMUSO as a String.
  */
  public String getLDMUSO()
  {
    return fieldLDMUSO.getString();
  }

  /**
  * Set field LDMVOL using a String value.
  */
  public void setLDMVOL(String newvalue)
  {
    fieldLDMVOL.setString(newvalue);
  }

  /**
  * Get value of field LDMVOL as a String.
  */
  public String getLDMVOL()
  {
    return fieldLDMVOL.getString();
  }

  /**
  * Set numeric field LDMVOL using a BigDecimal value.
  */
  public void setLDMVOL(BigDecimal newvalue)
  {
    fieldLDMVOL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LDMVOL as a BigDecimal.
  */
  public BigDecimal getBigDecimalLDMVOL()
  {
    return fieldLDMVOL.getBigDecimal();
  }

  /**
  * Set field LDMDEP using a String value.
  */
  public void setLDMDEP(String newvalue)
  {
    fieldLDMDEP.setString(newvalue);
  }

  /**
  * Get value of field LDMDEP as a String.
  */
  public String getLDMDEP()
  {
    return fieldLDMDEP.getString();
  }

  /**
  * Set numeric field LDMDEP using a BigDecimal value.
  */
  public void setLDMDEP(BigDecimal newvalue)
  {
    fieldLDMDEP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LDMDEP as a BigDecimal.
  */
  public BigDecimal getBigDecimalLDMDEP()
  {
    return fieldLDMDEP.getBigDecimal();
  }

  /**
  * Set field LDMPMD using a String value.
  */
  public void setLDMPMD(String newvalue)
  {
    fieldLDMPMD.setString(newvalue);
  }

  /**
  * Get value of field LDMPMD as a String.
  */
  public String getLDMPMD()
  {
    return fieldLDMPMD.getString();
  }

  /**
  * Set numeric field LDMPMD using a BigDecimal value.
  */
  public void setLDMPMD(BigDecimal newvalue)
  {
    fieldLDMPMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LDMPMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalLDMPMD()
  {
    return fieldLDMPMD.getBigDecimal();
  }

  /**
  * Set field LDMTRF using a String value.
  */
  public void setLDMTRF(String newvalue)
  {
    fieldLDMTRF.setString(newvalue);
  }

  /**
  * Get value of field LDMTRF as a String.
  */
  public String getLDMTRF()
  {
    return fieldLDMTRF.getString();
  }

  /**
  * Set field LDMCN1 using a String value.
  */
  public void setLDMCN1(String newvalue)
  {
    fieldLDMCN1.setString(newvalue);
  }

  /**
  * Get value of field LDMCN1 as a String.
  */
  public String getLDMCN1()
  {
    return fieldLDMCN1.getString();
  }

  /**
  * Set field LDMCN2 using a String value.
  */
  public void setLDMCN2(String newvalue)
  {
    fieldLDMCN2.setString(newvalue);
  }

  /**
  * Get value of field LDMCN2 as a String.
  */
  public String getLDMCN2()
  {
    return fieldLDMCN2.getString();
  }

  /**
  * Set field LDMCN3 using a String value.
  */
  public void setLDMCN3(String newvalue)
  {
    fieldLDMCN3.setString(newvalue);
  }

  /**
  * Get value of field LDMCN3 as a String.
  */
  public String getLDMCN3()
  {
    return fieldLDMCN3.getString();
  }

  /**
  * Set field LDMCN4 using a String value.
  */
  public void setLDMCN4(String newvalue)
  {
    fieldLDMCN4.setString(newvalue);
  }

  /**
  * Get value of field LDMCN4 as a String.
  */
  public String getLDMCN4()
  {
    return fieldLDMCN4.getString();
  }

  /**
  * Set field LDMUC1 using a String value.
  */
  public void setLDMUC1(String newvalue)
  {
    fieldLDMUC1.setString(newvalue);
  }

  /**
  * Get value of field LDMUC1 as a String.
  */
  public String getLDMUC1()
  {
    return fieldLDMUC1.getString();
  }

  /**
  * Set field LDMUC2 using a String value.
  */
  public void setLDMUC2(String newvalue)
  {
    fieldLDMUC2.setString(newvalue);
  }

  /**
  * Get value of field LDMUC2 as a String.
  */
  public String getLDMUC2()
  {
    return fieldLDMUC2.getString();
  }

  /**
  * Set field LDMFL1 using a String value.
  */
  public void setLDMFL1(String newvalue)
  {
    fieldLDMFL1.setString(newvalue);
  }

  /**
  * Get value of field LDMFL1 as a String.
  */
  public String getLDMFL1()
  {
    return fieldLDMFL1.getString();
  }

  /**
  * Set field LDMFL2 using a String value.
  */
  public void setLDMFL2(String newvalue)
  {
    fieldLDMFL2.setString(newvalue);
  }

  /**
  * Get value of field LDMFL2 as a String.
  */
  public String getLDMFL2()
  {
    return fieldLDMFL2.getString();
  }

  /**
  * Set field LDMAM1 using a String value.
  */
  public void setLDMAM1(String newvalue)
  {
    fieldLDMAM1.setString(newvalue);
  }

  /**
  * Get value of field LDMAM1 as a String.
  */
  public String getLDMAM1()
  {
    return fieldLDMAM1.getString();
  }

  /**
  * Set numeric field LDMAM1 using a BigDecimal value.
  */
  public void setLDMAM1(BigDecimal newvalue)
  {
    fieldLDMAM1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LDMAM1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalLDMAM1()
  {
    return fieldLDMAM1.getBigDecimal();
  }

  /**
  * Set field LDMAM2 using a String value.
  */
  public void setLDMAM2(String newvalue)
  {
    fieldLDMAM2.setString(newvalue);
  }

  /**
  * Get value of field LDMAM2 as a String.
  */
  public String getLDMAM2()
  {
    return fieldLDMAM2.getString();
  }

  /**
  * Set numeric field LDMAM2 using a BigDecimal value.
  */
  public void setLDMAM2(BigDecimal newvalue)
  {
    fieldLDMAM2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LDMAM2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalLDMAM2()
  {
    return fieldLDMAM2.getBigDecimal();
  }

}
