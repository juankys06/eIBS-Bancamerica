package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD117001 physical file definition.
* 
* File level identifier is 1031107142717.
* Record format level identifier is 498E8E6CFE754.
*/

public class EDD117001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ACMATY",
                                     "E01DESTYP",
                                     "E01ACMUC3",
                                     "E01DESUCS",
                                     "E01ACMBRN",
                                     "E01DESBRN",
                                     "E01PAGOGL",
                                     "E01PAGOCN",
                                     "E01CANRSN",
                                     "E01CANDSC",
                                     "E01ACMREF",
                                     "E01ACCCKF"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ACMATY",
                                   "E01DESTYP",
                                   "E01ACMUC3",
                                   "E01DESUCS",
                                   "E01ACMBRN",
                                   "E01DESBRN",
                                   "E01PAGOGL",
                                   "E01PAGOCN",
                                   "E01CANRSN",
                                   "E01CANDSC",
                                   "E01ACMREF",
                                   "E01ACCCKF"
                                 };
  final static String fid = "1031107142717";
  final static String rid = "498E8E6CFE754";
  final static String fmtname = "EDD117001";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01ACMATY = null;
  private CharacterField fieldE01DESTYP = null;
  private CharacterField fieldE01ACMUC3 = null;
  private CharacterField fieldE01DESUCS = null;
  private DecimalField fieldE01ACMBRN = null;
  private CharacterField fieldE01DESBRN = null;
  private DecimalField fieldE01PAGOGL = null;
  private DecimalField fieldE01PAGOCN = null;
  private CharacterField fieldE01CANRSN = null;
  private CharacterField fieldE01CANDSC = null;
  private CharacterField fieldE01ACMREF = null;
  private CharacterField fieldE01ACCCKF = null;

  /**
  * Constructor for EDD117001Message.
  */
  public EDD117001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 247;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ACMATY =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01ACMATY");
    fields[10] = fieldE01DESTYP =
    new CharacterField(message, HEADERSIZE + 46, 35, "E01DESTYP");
    fields[11] = fieldE01ACMUC3 =
    new CharacterField(message, HEADERSIZE + 81, 4, "E01ACMUC3");
    fields[12] = fieldE01DESUCS =
    new CharacterField(message, HEADERSIZE + 85, 35, "E01DESUCS");
    fields[13] = fieldE01ACMBRN =
    new DecimalField(message, HEADERSIZE + 120, 4, 0, "E01ACMBRN");
    fields[14] = fieldE01DESBRN =
    new CharacterField(message, HEADERSIZE + 124, 35, "E01DESBRN");
    fields[15] = fieldE01PAGOGL =
    new DecimalField(message, HEADERSIZE + 159, 17, 0, "E01PAGOGL");
    fields[16] = fieldE01PAGOCN =
    new DecimalField(message, HEADERSIZE + 176, 9, 0, "E01PAGOCN");
    fields[17] = fieldE01CANRSN =
    new CharacterField(message, HEADERSIZE + 185, 4, "E01CANRSN");
    fields[18] = fieldE01CANDSC =
    new CharacterField(message, HEADERSIZE + 189, 35, "E01CANDSC");
    fields[19] = fieldE01ACMREF =
    new CharacterField(message, HEADERSIZE + 224, 22, "E01ACMREF");
    fields[20] = fieldE01ACCCKF =
    new CharacterField(message, HEADERSIZE + 246, 1, "E01ACCCKF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ACMATY using a String value.
  */
  public void setE01ACMATY(String newvalue)
  {
    fieldE01ACMATY.setString(newvalue);
  }

  /**
  * Get value of field E01ACMATY as a String.
  */
  public String getE01ACMATY()
  {
    return fieldE01ACMATY.getString();
  }

  /**
  * Set field E01DESTYP using a String value.
  */
  public void setE01DESTYP(String newvalue)
  {
    fieldE01DESTYP.setString(newvalue);
  }

  /**
  * Get value of field E01DESTYP as a String.
  */
  public String getE01DESTYP()
  {
    return fieldE01DESTYP.getString();
  }

  /**
  * Set field E01ACMUC3 using a String value.
  */
  public void setE01ACMUC3(String newvalue)
  {
    fieldE01ACMUC3.setString(newvalue);
  }

  /**
  * Get value of field E01ACMUC3 as a String.
  */
  public String getE01ACMUC3()
  {
    return fieldE01ACMUC3.getString();
  }

  /**
  * Set field E01DESUCS using a String value.
  */
  public void setE01DESUCS(String newvalue)
  {
    fieldE01DESUCS.setString(newvalue);
  }

  /**
  * Get value of field E01DESUCS as a String.
  */
  public String getE01DESUCS()
  {
    return fieldE01DESUCS.getString();
  }

  /**
  * Set field E01ACMBRN using a String value.
  */
  public void setE01ACMBRN(String newvalue)
  {
    fieldE01ACMBRN.setString(newvalue);
  }

  /**
  * Get value of field E01ACMBRN as a String.
  */
  public String getE01ACMBRN()
  {
    return fieldE01ACMBRN.getString();
  }

  /**
  * Set numeric field E01ACMBRN using a BigDecimal value.
  */
  public void setE01ACMBRN(BigDecimal newvalue)
  {
    fieldE01ACMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACMBRN()
  {
    return fieldE01ACMBRN.getBigDecimal();
  }

  /**
  * Set field E01DESBRN using a String value.
  */
  public void setE01DESBRN(String newvalue)
  {
    fieldE01DESBRN.setString(newvalue);
  }

  /**
  * Get value of field E01DESBRN as a String.
  */
  public String getE01DESBRN()
  {
    return fieldE01DESBRN.getString();
  }

  /**
  * Set field E01PAGOGL using a String value.
  */
  public void setE01PAGOGL(String newvalue)
  {
    fieldE01PAGOGL.setString(newvalue);
  }

  /**
  * Get value of field E01PAGOGL as a String.
  */
  public String getE01PAGOGL()
  {
    return fieldE01PAGOGL.getString();
  }

  /**
  * Set numeric field E01PAGOGL using a BigDecimal value.
  */
  public void setE01PAGOGL(BigDecimal newvalue)
  {
    fieldE01PAGOGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PAGOGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PAGOGL()
  {
    return fieldE01PAGOGL.getBigDecimal();
  }

  /**
  * Set field E01PAGOCN using a String value.
  */
  public void setE01PAGOCN(String newvalue)
  {
    fieldE01PAGOCN.setString(newvalue);
  }

  /**
  * Get value of field E01PAGOCN as a String.
  */
  public String getE01PAGOCN()
  {
    return fieldE01PAGOCN.getString();
  }

  /**
  * Set numeric field E01PAGOCN using a BigDecimal value.
  */
  public void setE01PAGOCN(BigDecimal newvalue)
  {
    fieldE01PAGOCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PAGOCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PAGOCN()
  {
    return fieldE01PAGOCN.getBigDecimal();
  }

  /**
  * Set field E01CANRSN using a String value.
  */
  public void setE01CANRSN(String newvalue)
  {
    fieldE01CANRSN.setString(newvalue);
  }

  /**
  * Get value of field E01CANRSN as a String.
  */
  public String getE01CANRSN()
  {
    return fieldE01CANRSN.getString();
  }

  /**
  * Set field E01CANDSC using a String value.
  */
  public void setE01CANDSC(String newvalue)
  {
    fieldE01CANDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CANDSC as a String.
  */
  public String getE01CANDSC()
  {
    return fieldE01CANDSC.getString();
  }

  /**
  * Set field E01ACMREF using a String value.
  */
  public void setE01ACMREF(String newvalue)
  {
    fieldE01ACMREF.setString(newvalue);
  }

  /**
  * Get value of field E01ACMREF as a String.
  */
  public String getE01ACMREF()
  {
    return fieldE01ACMREF.getString();
  }

  /**
  * Set field E01ACCCKF using a String value.
  */
  public void setE01ACCCKF(String newvalue)
  {
    fieldE01ACCCKF.setString(newvalue);
  }

  /**
  * Get value of field E01ACCCKF as a String.
  */
  public String getE01ACCCKF()
  {
    return fieldE01ACCCKF.getString();
  }

}
