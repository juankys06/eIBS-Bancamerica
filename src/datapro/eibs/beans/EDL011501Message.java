package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL011501 physical file definition.
* 
* File level identifier is 1060822183719.
* Record format level identifier is 361F1D603F435.
*/

public class EDL011501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DEAACC",
                                     "E01DEAACD",
                                     "E01DEACUN",
                                     "E01CUSNA1",
                                     "E01DEAMVL",
                                     "E01DEANWV",
                                     "E01DEAREF",
                                     "E01DEAUC6",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DEAACC",
                                   "E01DEAACD",
                                   "E01DEACUN",
                                   "E01CUSNA1",
                                   "E01DEAMVL",
                                   "E01DEANWV",
                                   "E01DEAREF",
                                   "E01DEAUC6",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1060822183719";
  final static String rid = "361F1D603F435";
  final static String fmtname = "EDL011501";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01DEAACC = null;
  private CharacterField fieldE01DEAACD = null;
  private DecimalField fieldE01DEACUN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private DecimalField fieldE01DEAMVL = null;
  private DecimalField fieldE01DEANWV = null;
  private CharacterField fieldE01DEAREF = null;
  private CharacterField fieldE01DEAUC6 = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EDL011501Message.
  */
  public EDL011501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 159;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01DEAACC");
    fields[10] = fieldE01DEAACD =
    new CharacterField(message, HEADERSIZE + 55, 2, "E01DEAACD");
    fields[11] = fieldE01DEACUN =
    new DecimalField(message, HEADERSIZE + 57, 10, 0, "E01DEACUN");
    fields[12] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 67, 45, "E01CUSNA1");
    fields[13] = fieldE01DEAMVL =
    new DecimalField(message, HEADERSIZE + 112, 11, 6, "E01DEAMVL");
    fields[14] = fieldE01DEANWV =
    new DecimalField(message, HEADERSIZE + 123, 11, 6, "E01DEANWV");
    fields[15] = fieldE01DEAREF =
    new CharacterField(message, HEADERSIZE + 134, 12, "E01DEAREF");
    fields[16] = fieldE01DEAUC6 =
    new CharacterField(message, HEADERSIZE + 146, 4, "E01DEAUC6");
    fields[17] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 150, 8, 0, "E01NUMREC");
    fields[18] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 158, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DEAACC using a String value.
  */
  public void setE01DEAACC(String newvalue)
  {
    fieldE01DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E01DEAACC as a String.
  */
  public String getE01DEAACC()
  {
    return fieldE01DEAACC.getString();
  }

  /**
  * Set numeric field E01DEAACC using a BigDecimal value.
  */
  public void setE01DEAACC(BigDecimal newvalue)
  {
    fieldE01DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEAACC()
  {
    return fieldE01DEAACC.getBigDecimal();
  }

  /**
  * Set field E01DEAACD using a String value.
  */
  public void setE01DEAACD(String newvalue)
  {
    fieldE01DEAACD.setString(newvalue);
  }

  /**
  * Get value of field E01DEAACD as a String.
  */
  public String getE01DEAACD()
  {
    return fieldE01DEAACD.getString();
  }

  /**
  * Set field E01DEACUN using a String value.
  */
  public void setE01DEACUN(String newvalue)
  {
    fieldE01DEACUN.setString(newvalue);
  }

  /**
  * Get value of field E01DEACUN as a String.
  */
  public String getE01DEACUN()
  {
    return fieldE01DEACUN.getString();
  }

  /**
  * Set numeric field E01DEACUN using a BigDecimal value.
  */
  public void setE01DEACUN(BigDecimal newvalue)
  {
    fieldE01DEACUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEACUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEACUN()
  {
    return fieldE01DEACUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01DEAMVL using a String value.
  */
  public void setE01DEAMVL(String newvalue)
  {
    fieldE01DEAMVL.setString(newvalue);
  }

  /**
  * Get value of field E01DEAMVL as a String.
  */
  public String getE01DEAMVL()
  {
    return fieldE01DEAMVL.getString();
  }

  /**
  * Set numeric field E01DEAMVL using a BigDecimal value.
  */
  public void setE01DEAMVL(BigDecimal newvalue)
  {
    fieldE01DEAMVL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEAMVL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEAMVL()
  {
    return fieldE01DEAMVL.getBigDecimal();
  }

  /**
  * Set field E01DEANWV using a String value.
  */
  public void setE01DEANWV(String newvalue)
  {
    fieldE01DEANWV.setString(newvalue);
  }

  /**
  * Get value of field E01DEANWV as a String.
  */
  public String getE01DEANWV()
  {
    return fieldE01DEANWV.getString();
  }

  /**
  * Set numeric field E01DEANWV using a BigDecimal value.
  */
  public void setE01DEANWV(BigDecimal newvalue)
  {
    fieldE01DEANWV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEANWV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEANWV()
  {
    return fieldE01DEANWV.getBigDecimal();
  }

  /**
  * Set field E01DEAREF using a String value.
  */
  public void setE01DEAREF(String newvalue)
  {
    fieldE01DEAREF.setString(newvalue);
  }

  /**
  * Get value of field E01DEAREF as a String.
  */
  public String getE01DEAREF()
  {
    return fieldE01DEAREF.getString();
  }

  /**
  * Set field E01DEAUC6 using a String value.
  */
  public void setE01DEAUC6(String newvalue)
  {
    fieldE01DEAUC6.setString(newvalue);
  }

  /**
  * Get value of field E01DEAUC6 as a String.
  */
  public String getE01DEAUC6()
  {
    return fieldE01DEAUC6.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
