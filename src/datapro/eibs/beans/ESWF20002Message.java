package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESWF20002 physical file definition.
* 
* File level identifier is 1030130210657.
* Record format level identifier is 4820DF8CEC940.
*/

public class ESWF20002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "ESW2USR",
                                     "ESW2SWI",
                                     "ESW2REF",
                                     "ESW2FTM",
                                     "ESW2DT1",
                                     "ESW2DT2",
                                     "ESW2DT3",
                                     "ESW2REC"
                                   };
  final static String tnames[] = {
                                   "ESW2USR",
                                   "ESW2SWI",
                                   "ESW2REF",
                                   "ESW2FTM",
                                   "ESW2DT1",
                                   "ESW2DT2",
                                   "ESW2DT3",
                                   "ESW2REC"
                                 };
  final static String fid = "1030130210657";
  final static String rid = "4820DF8CEC940";
  final static String fmtname = "ESWF20002";
  final int FIELDCOUNT = 8;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldESW2USR = null;
  private CharacterField fieldESW2SWI = null;
  private CharacterField fieldESW2REF = null;
  private DecimalField fieldESW2FTM = null;
  private DecimalField fieldESW2DT1 = null;
  private DecimalField fieldESW2DT2 = null;
  private DecimalField fieldESW2DT3 = null;
  private CharacterField fieldESW2REC = null;

  /**
  * Constructor for ESWF20002Message.
  */
  public ESWF20002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1801;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldESW2USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "ESW2USR");
    fields[1] = fieldESW2SWI =
    new CharacterField(message, HEADERSIZE + 10, 12, "ESW2SWI");
    fields[2] = fieldESW2REF =
    new CharacterField(message, HEADERSIZE + 22, 16, "ESW2REF");
    fields[3] = fieldESW2FTM =
    new DecimalField(message, HEADERSIZE + 38, 4, 0, "ESW2FTM");
    fields[4] = fieldESW2DT1 =
    new DecimalField(message, HEADERSIZE + 42, 3, 0, "ESW2DT1");
    fields[5] = fieldESW2DT2 =
    new DecimalField(message, HEADERSIZE + 45, 3, 0, "ESW2DT2");
    fields[6] = fieldESW2DT3 =
    new DecimalField(message, HEADERSIZE + 48, 3, 0, "ESW2DT3");
    fields[7] = fieldESW2REC =
    new CharacterField(message, HEADERSIZE + 51, 1750, "ESW2REC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field ESW2USR using a String value.
  */
  public void setESW2USR(String newvalue)
  {
    fieldESW2USR.setString(newvalue);
  }

  /**
  * Get value of field ESW2USR as a String.
  */
  public String getESW2USR()
  {
    return fieldESW2USR.getString();
  }

  /**
  * Set field ESW2SWI using a String value.
  */
  public void setESW2SWI(String newvalue)
  {
    fieldESW2SWI.setString(newvalue);
  }

  /**
  * Get value of field ESW2SWI as a String.
  */
  public String getESW2SWI()
  {
    return fieldESW2SWI.getString();
  }

  /**
  * Set field ESW2REF using a String value.
  */
  public void setESW2REF(String newvalue)
  {
    fieldESW2REF.setString(newvalue);
  }

  /**
  * Get value of field ESW2REF as a String.
  */
  public String getESW2REF()
  {
    return fieldESW2REF.getString();
  }

  /**
  * Set field ESW2FTM using a String value.
  */
  public void setESW2FTM(String newvalue)
  {
    fieldESW2FTM.setString(newvalue);
  }

  /**
  * Get value of field ESW2FTM as a String.
  */
  public String getESW2FTM()
  {
    return fieldESW2FTM.getString();
  }

  /**
  * Set numeric field ESW2FTM using a BigDecimal value.
  */
  public void setESW2FTM(BigDecimal newvalue)
  {
    fieldESW2FTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW2FTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW2FTM()
  {
    return fieldESW2FTM.getBigDecimal();
  }

  /**
  * Set field ESW2DT1 using a String value.
  */
  public void setESW2DT1(String newvalue)
  {
    fieldESW2DT1.setString(newvalue);
  }

  /**
  * Get value of field ESW2DT1 as a String.
  */
  public String getESW2DT1()
  {
    return fieldESW2DT1.getString();
  }

  /**
  * Set numeric field ESW2DT1 using a BigDecimal value.
  */
  public void setESW2DT1(BigDecimal newvalue)
  {
    fieldESW2DT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW2DT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW2DT1()
  {
    return fieldESW2DT1.getBigDecimal();
  }

  /**
  * Set field ESW2DT2 using a String value.
  */
  public void setESW2DT2(String newvalue)
  {
    fieldESW2DT2.setString(newvalue);
  }

  /**
  * Get value of field ESW2DT2 as a String.
  */
  public String getESW2DT2()
  {
    return fieldESW2DT2.getString();
  }

  /**
  * Set numeric field ESW2DT2 using a BigDecimal value.
  */
  public void setESW2DT2(BigDecimal newvalue)
  {
    fieldESW2DT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW2DT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW2DT2()
  {
    return fieldESW2DT2.getBigDecimal();
  }

  /**
  * Set field ESW2DT3 using a String value.
  */
  public void setESW2DT3(String newvalue)
  {
    fieldESW2DT3.setString(newvalue);
  }

  /**
  * Get value of field ESW2DT3 as a String.
  */
  public String getESW2DT3()
  {
    return fieldESW2DT3.getString();
  }

  /**
  * Set numeric field ESW2DT3 using a BigDecimal value.
  */
  public void setESW2DT3(BigDecimal newvalue)
  {
    fieldESW2DT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESW2DT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalESW2DT3()
  {
    return fieldESW2DT3.getBigDecimal();
  }

  /**
  * Set field ESW2REC using a String value.
  */
  public void setESW2REC(String newvalue)
  {
    fieldESW2REC.setString(newvalue);
  }

  /**
  * Get value of field ESW2REC as a String.
  */
  public String getESW2REC()
  {
    return fieldESW2REC.getString();
  }

}
