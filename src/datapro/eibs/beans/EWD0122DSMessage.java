package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0122DS physical file definition.
* 
* File level identifier is 1030121192027.
* Record format level identifier is 455593D5F827B.
*/

public class EWD0122DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDUSR",
                                     "EWDNME",
                                     "EWDIDN",
                                     "EWDEML",
                                     "EWDPHN",
                                     "EWDPXT",
                                     "EWDAPL",
                                     "EWDDSN",
                                     "EWDLNA",
                                     "EWDTAT",
                                     "EWDCCY",
                                     "EWDALM",
                                     "EWDANG",
                                     "EWDGRE",
                                     "EWDNUE",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDUSR",
                                   "EWDNME",
                                   "EWDIDN",
                                   "EWDEML",
                                   "EWDPHN",
                                   "EWDPXT",
                                   "EWDAPL",
                                   "EWDDSN",
                                   "EWDLNA",
                                   "EWDTAT",
                                   "EWDCCY",
                                   "EWDALM",
                                   "EWDANG",
                                   "EWDGRE",
                                   "EWDNUE",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192027";
  final static String rid = "455593D5F827B";
  final static String fmtname = "EWD0122DS";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDUSR = null;
  private CharacterField fieldEWDNME = null;
  private CharacterField fieldEWDIDN = null;
  private CharacterField fieldEWDEML = null;
  private DecimalField fieldEWDPHN = null;
  private DecimalField fieldEWDPXT = null;
  private CharacterField fieldEWDAPL = null;
  private CharacterField fieldEWDDSN = null;
  private CharacterField fieldEWDLNA = null;
  private CharacterField fieldEWDTAT = null;
  private CharacterField fieldEWDCCY = null;
  private DecimalField fieldEWDALM = null;
  private DecimalField fieldEWDANG = null;
  private DecimalField fieldEWDGRE = null;
  private DecimalField fieldEWDNUE = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0122DSMessage.
  */
  public EWD0122DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 220;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "EWDUSR");
    fields[1] = fieldEWDNME =
    new CharacterField(message, HEADERSIZE + 10, 45, "EWDNME");
    fields[2] = fieldEWDIDN =
    new CharacterField(message, HEADERSIZE + 55, 15, "EWDIDN");
    fields[3] = fieldEWDEML =
    new CharacterField(message, HEADERSIZE + 70, 40, "EWDEML");
    fields[4] = fieldEWDPHN =
    new DecimalField(message, HEADERSIZE + 110, 12, 0, "EWDPHN");
    fields[5] = fieldEWDPXT =
    new DecimalField(message, HEADERSIZE + 122, 5, 0, "EWDPXT");
    fields[6] = fieldEWDAPL =
    new CharacterField(message, HEADERSIZE + 127, 4, "EWDAPL");
    fields[7] = fieldEWDDSN =
    new CharacterField(message, HEADERSIZE + 131, 35, "EWDDSN");
    fields[8] = fieldEWDLNA =
    new CharacterField(message, HEADERSIZE + 166, 1, "EWDLNA");
    fields[9] = fieldEWDTAT =
    new CharacterField(message, HEADERSIZE + 167, 1, "EWDTAT");
    fields[10] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 168, 3, "EWDCCY");
    fields[11] = fieldEWDALM =
    new DecimalField(message, HEADERSIZE + 171, 17, 2, "EWDALM");
    fields[12] = fieldEWDANG =
    new DecimalField(message, HEADERSIZE + 188, 17, 2, "EWDANG");
    fields[13] = fieldEWDGRE =
    new DecimalField(message, HEADERSIZE + 205, 3, 0, "EWDGRE");
    fields[14] = fieldEWDNUE =
    new DecimalField(message, HEADERSIZE + 208, 3, 0, "EWDNUE");
    fields[15] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 211, 8, 0, "EWDREC");
    fields[16] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 219, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDUSR using a String value.
  */
  public void setEWDUSR(String newvalue)
  {
    fieldEWDUSR.setString(newvalue);
  }

  /**
  * Get value of field EWDUSR as a String.
  */
  public String getEWDUSR()
  {
    return fieldEWDUSR.getString();
  }

  /**
  * Set field EWDNME using a String value.
  */
  public void setEWDNME(String newvalue)
  {
    fieldEWDNME.setString(newvalue);
  }

  /**
  * Get value of field EWDNME as a String.
  */
  public String getEWDNME()
  {
    return fieldEWDNME.getString();
  }

  /**
  * Set field EWDIDN using a String value.
  */
  public void setEWDIDN(String newvalue)
  {
    fieldEWDIDN.setString(newvalue);
  }

  /**
  * Get value of field EWDIDN as a String.
  */
  public String getEWDIDN()
  {
    return fieldEWDIDN.getString();
  }

  /**
  * Set field EWDEML using a String value.
  */
  public void setEWDEML(String newvalue)
  {
    fieldEWDEML.setString(newvalue);
  }

  /**
  * Get value of field EWDEML as a String.
  */
  public String getEWDEML()
  {
    return fieldEWDEML.getString();
  }

  /**
  * Set field EWDPHN using a String value.
  */
  public void setEWDPHN(String newvalue)
  {
    fieldEWDPHN.setString(newvalue);
  }

  /**
  * Get value of field EWDPHN as a String.
  */
  public String getEWDPHN()
  {
    return fieldEWDPHN.getString();
  }

  /**
  * Set numeric field EWDPHN using a BigDecimal value.
  */
  public void setEWDPHN(BigDecimal newvalue)
  {
    fieldEWDPHN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDPHN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDPHN()
  {
    return fieldEWDPHN.getBigDecimal();
  }

  /**
  * Set field EWDPXT using a String value.
  */
  public void setEWDPXT(String newvalue)
  {
    fieldEWDPXT.setString(newvalue);
  }

  /**
  * Get value of field EWDPXT as a String.
  */
  public String getEWDPXT()
  {
    return fieldEWDPXT.getString();
  }

  /**
  * Set numeric field EWDPXT using a BigDecimal value.
  */
  public void setEWDPXT(BigDecimal newvalue)
  {
    fieldEWDPXT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDPXT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDPXT()
  {
    return fieldEWDPXT.getBigDecimal();
  }

  /**
  * Set field EWDAPL using a String value.
  */
  public void setEWDAPL(String newvalue)
  {
    fieldEWDAPL.setString(newvalue);
  }

  /**
  * Get value of field EWDAPL as a String.
  */
  public String getEWDAPL()
  {
    return fieldEWDAPL.getString();
  }

  /**
  * Set field EWDDSN using a String value.
  */
  public void setEWDDSN(String newvalue)
  {
    fieldEWDDSN.setString(newvalue);
  }

  /**
  * Get value of field EWDDSN as a String.
  */
  public String getEWDDSN()
  {
    return fieldEWDDSN.getString();
  }

  /**
  * Set field EWDLNA using a String value.
  */
  public void setEWDLNA(String newvalue)
  {
    fieldEWDLNA.setString(newvalue);
  }

  /**
  * Get value of field EWDLNA as a String.
  */
  public String getEWDLNA()
  {
    return fieldEWDLNA.getString();
  }

  /**
  * Set field EWDTAT using a String value.
  */
  public void setEWDTAT(String newvalue)
  {
    fieldEWDTAT.setString(newvalue);
  }

  /**
  * Get value of field EWDTAT as a String.
  */
  public String getEWDTAT()
  {
    return fieldEWDTAT.getString();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDALM using a String value.
  */
  public void setEWDALM(String newvalue)
  {
    fieldEWDALM.setString(newvalue);
  }

  /**
  * Get value of field EWDALM as a String.
  */
  public String getEWDALM()
  {
    return fieldEWDALM.getString();
  }

  /**
  * Set numeric field EWDALM using a BigDecimal value.
  */
  public void setEWDALM(BigDecimal newvalue)
  {
    fieldEWDALM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDALM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDALM()
  {
    return fieldEWDALM.getBigDecimal();
  }

  /**
  * Set field EWDANG using a String value.
  */
  public void setEWDANG(String newvalue)
  {
    fieldEWDANG.setString(newvalue);
  }

  /**
  * Get value of field EWDANG as a String.
  */
  public String getEWDANG()
  {
    return fieldEWDANG.getString();
  }

  /**
  * Set numeric field EWDANG using a BigDecimal value.
  */
  public void setEWDANG(BigDecimal newvalue)
  {
    fieldEWDANG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDANG as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDANG()
  {
    return fieldEWDANG.getBigDecimal();
  }

  /**
  * Set field EWDGRE using a String value.
  */
  public void setEWDGRE(String newvalue)
  {
    fieldEWDGRE.setString(newvalue);
  }

  /**
  * Get value of field EWDGRE as a String.
  */
  public String getEWDGRE()
  {
    return fieldEWDGRE.getString();
  }

  /**
  * Set numeric field EWDGRE using a BigDecimal value.
  */
  public void setEWDGRE(BigDecimal newvalue)
  {
    fieldEWDGRE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDGRE as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDGRE()
  {
    return fieldEWDGRE.getBigDecimal();
  }

  /**
  * Set field EWDNUE using a String value.
  */
  public void setEWDNUE(String newvalue)
  {
    fieldEWDNUE.setString(newvalue);
  }

  /**
  * Get value of field EWDNUE as a String.
  */
  public String getEWDNUE()
  {
    return fieldEWDNUE.getString();
  }

  /**
  * Set numeric field EWDNUE using a BigDecimal value.
  */
  public void setEWDNUE(BigDecimal newvalue)
  {
    fieldEWDNUE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDNUE as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDNUE()
  {
    return fieldEWDNUE.getBigDecimal();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
