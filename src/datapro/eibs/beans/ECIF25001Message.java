package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECIF25001 physical file definition.
* 
* File level identifier is 1030922183116.
* Record format level identifier is 43379B5820C19.
*/

public class ECIF25001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ACCNUM",
                                     "E01SELYAR",
                                     "E01SELMTH",
                                     "E01MTHLET",
                                     "E01MTHNUM",
                                     "E01YEARNU",
                                     "E01AVERAG",
                                     "E01BALANC",
                                     "E01BALMIN",
                                     "E01INTERE",
                                     "E01COSOPE",
                                     "E01COSFON",
                                     "E01OTHAMT",
                                     "E01RTEINT",
                                     "E01NUMDEB",
                                     "E01NUMCRE",
                                     "E01NUMCHK",
                                     "E01NUMDEP",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ACCNUM",
                                   "E01SELYAR",
                                   "E01SELMTH",
                                   "E01MTHLET",
                                   "E01MTHNUM",
                                   "E01YEARNU",
                                   "E01AVERAG",
                                   "E01BALANC",
                                   "E01BALMIN",
                                   "E01INTERE",
                                   "E01COSOPE",
                                   "E01COSFON",
                                   "E01OTHAMT",
                                   "E01RTEINT",
                                   "E01NUMDEB",
                                   "E01NUMCRE",
                                   "E01NUMCHK",
                                   "E01NUMDEP",
                                   "E01INDOPE"
                                 };
  final static String fid = "1030922183116";
  final static String rid = "43379B5820C19";
  final static String fmtname = "ECIF25001";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01ACCNUM = null;
  private DecimalField fieldE01SELYAR = null;
  private DecimalField fieldE01SELMTH = null;
  private CharacterField fieldE01MTHLET = null;
  private DecimalField fieldE01MTHNUM = null;
  private DecimalField fieldE01YEARNU = null;
  private DecimalField fieldE01AVERAG = null;
  private DecimalField fieldE01BALANC = null;
  private DecimalField fieldE01BALMIN = null;
  private DecimalField fieldE01INTERE = null;
  private DecimalField fieldE01COSOPE = null;
  private DecimalField fieldE01COSFON = null;
  private DecimalField fieldE01OTHAMT = null;
  private DecimalField fieldE01RTEINT = null;
  private DecimalField fieldE01NUMDEB = null;
  private DecimalField fieldE01NUMCRE = null;
  private DecimalField fieldE01NUMCHK = null;
  private DecimalField fieldE01NUMDEP = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ECIF25001Message.
  */
  public ECIF25001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 225;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ACCNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01ACCNUM");
    fields[10] = fieldE01SELYAR =
    new DecimalField(message, HEADERSIZE + 55, 3, 0, "E01SELYAR");
    fields[11] = fieldE01SELMTH =
    new DecimalField(message, HEADERSIZE + 58, 3, 0, "E01SELMTH");
    fields[12] = fieldE01MTHLET =
    new CharacterField(message, HEADERSIZE + 61, 3, "E01MTHLET");
    fields[13] = fieldE01MTHNUM =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "E01MTHNUM");
    fields[14] = fieldE01YEARNU =
    new DecimalField(message, HEADERSIZE + 67, 3, 0, "E01YEARNU");
    fields[15] = fieldE01AVERAG =
    new DecimalField(message, HEADERSIZE + 70, 17, 2, "E01AVERAG");
    fields[16] = fieldE01BALANC =
    new DecimalField(message, HEADERSIZE + 87, 17, 2, "E01BALANC");
    fields[17] = fieldE01BALMIN =
    new DecimalField(message, HEADERSIZE + 104, 17, 2, "E01BALMIN");
    fields[18] = fieldE01INTERE =
    new DecimalField(message, HEADERSIZE + 121, 17, 2, "E01INTERE");
    fields[19] = fieldE01COSOPE =
    new DecimalField(message, HEADERSIZE + 138, 17, 2, "E01COSOPE");
    fields[20] = fieldE01COSFON =
    new DecimalField(message, HEADERSIZE + 155, 17, 2, "E01COSFON");
    fields[21] = fieldE01OTHAMT =
    new DecimalField(message, HEADERSIZE + 172, 17, 2, "E01OTHAMT");
    fields[22] = fieldE01RTEINT =
    new DecimalField(message, HEADERSIZE + 189, 11, 6, "E01RTEINT");
    fields[23] = fieldE01NUMDEB =
    new DecimalField(message, HEADERSIZE + 200, 6, 0, "E01NUMDEB");
    fields[24] = fieldE01NUMCRE =
    new DecimalField(message, HEADERSIZE + 206, 6, 0, "E01NUMCRE");
    fields[25] = fieldE01NUMCHK =
    new DecimalField(message, HEADERSIZE + 212, 6, 0, "E01NUMCHK");
    fields[26] = fieldE01NUMDEP =
    new DecimalField(message, HEADERSIZE + 218, 6, 0, "E01NUMDEP");
    fields[27] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 224, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ACCNUM using a String value.
  */
  public void setE01ACCNUM(String newvalue)
  {
    fieldE01ACCNUM.setString(newvalue);
  }

  /**
  * Get value of field E01ACCNUM as a String.
  */
  public String getE01ACCNUM()
  {
    return fieldE01ACCNUM.getString();
  }

  /**
  * Set numeric field E01ACCNUM using a BigDecimal value.
  */
  public void setE01ACCNUM(BigDecimal newvalue)
  {
    fieldE01ACCNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACCNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACCNUM()
  {
    return fieldE01ACCNUM.getBigDecimal();
  }

  /**
  * Set field E01SELYAR using a String value.
  */
  public void setE01SELYAR(String newvalue)
  {
    fieldE01SELYAR.setString(newvalue);
  }

  /**
  * Get value of field E01SELYAR as a String.
  */
  public String getE01SELYAR()
  {
    return fieldE01SELYAR.getString();
  }

  /**
  * Set numeric field E01SELYAR using a BigDecimal value.
  */
  public void setE01SELYAR(BigDecimal newvalue)
  {
    fieldE01SELYAR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SELYAR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SELYAR()
  {
    return fieldE01SELYAR.getBigDecimal();
  }

  /**
  * Set field E01SELMTH using a String value.
  */
  public void setE01SELMTH(String newvalue)
  {
    fieldE01SELMTH.setString(newvalue);
  }

  /**
  * Get value of field E01SELMTH as a String.
  */
  public String getE01SELMTH()
  {
    return fieldE01SELMTH.getString();
  }

  /**
  * Set numeric field E01SELMTH using a BigDecimal value.
  */
  public void setE01SELMTH(BigDecimal newvalue)
  {
    fieldE01SELMTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SELMTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SELMTH()
  {
    return fieldE01SELMTH.getBigDecimal();
  }

  /**
  * Set field E01MTHLET using a String value.
  */
  public void setE01MTHLET(String newvalue)
  {
    fieldE01MTHLET.setString(newvalue);
  }

  /**
  * Get value of field E01MTHLET as a String.
  */
  public String getE01MTHLET()
  {
    return fieldE01MTHLET.getString();
  }

  /**
  * Set field E01MTHNUM using a String value.
  */
  public void setE01MTHNUM(String newvalue)
  {
    fieldE01MTHNUM.setString(newvalue);
  }

  /**
  * Get value of field E01MTHNUM as a String.
  */
  public String getE01MTHNUM()
  {
    return fieldE01MTHNUM.getString();
  }

  /**
  * Set numeric field E01MTHNUM using a BigDecimal value.
  */
  public void setE01MTHNUM(BigDecimal newvalue)
  {
    fieldE01MTHNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MTHNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MTHNUM()
  {
    return fieldE01MTHNUM.getBigDecimal();
  }

  /**
  * Set field E01YEARNU using a String value.
  */
  public void setE01YEARNU(String newvalue)
  {
    fieldE01YEARNU.setString(newvalue);
  }

  /**
  * Get value of field E01YEARNU as a String.
  */
  public String getE01YEARNU()
  {
    return fieldE01YEARNU.getString();
  }

  /**
  * Set numeric field E01YEARNU using a BigDecimal value.
  */
  public void setE01YEARNU(BigDecimal newvalue)
  {
    fieldE01YEARNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01YEARNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01YEARNU()
  {
    return fieldE01YEARNU.getBigDecimal();
  }

  /**
  * Set field E01AVERAG using a String value.
  */
  public void setE01AVERAG(String newvalue)
  {
    fieldE01AVERAG.setString(newvalue);
  }

  /**
  * Get value of field E01AVERAG as a String.
  */
  public String getE01AVERAG()
  {
    return fieldE01AVERAG.getString();
  }

  /**
  * Set numeric field E01AVERAG using a BigDecimal value.
  */
  public void setE01AVERAG(BigDecimal newvalue)
  {
    fieldE01AVERAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AVERAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AVERAG()
  {
    return fieldE01AVERAG.getBigDecimal();
  }

  /**
  * Set field E01BALANC using a String value.
  */
  public void setE01BALANC(String newvalue)
  {
    fieldE01BALANC.setString(newvalue);
  }

  /**
  * Get value of field E01BALANC as a String.
  */
  public String getE01BALANC()
  {
    return fieldE01BALANC.getString();
  }

  /**
  * Set numeric field E01BALANC using a BigDecimal value.
  */
  public void setE01BALANC(BigDecimal newvalue)
  {
    fieldE01BALANC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BALANC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BALANC()
  {
    return fieldE01BALANC.getBigDecimal();
  }

  /**
  * Set field E01BALMIN using a String value.
  */
  public void setE01BALMIN(String newvalue)
  {
    fieldE01BALMIN.setString(newvalue);
  }

  /**
  * Get value of field E01BALMIN as a String.
  */
  public String getE01BALMIN()
  {
    return fieldE01BALMIN.getString();
  }

  /**
  * Set numeric field E01BALMIN using a BigDecimal value.
  */
  public void setE01BALMIN(BigDecimal newvalue)
  {
    fieldE01BALMIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BALMIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BALMIN()
  {
    return fieldE01BALMIN.getBigDecimal();
  }

  /**
  * Set field E01INTERE using a String value.
  */
  public void setE01INTERE(String newvalue)
  {
    fieldE01INTERE.setString(newvalue);
  }

  /**
  * Get value of field E01INTERE as a String.
  */
  public String getE01INTERE()
  {
    return fieldE01INTERE.getString();
  }

  /**
  * Set numeric field E01INTERE using a BigDecimal value.
  */
  public void setE01INTERE(BigDecimal newvalue)
  {
    fieldE01INTERE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INTERE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INTERE()
  {
    return fieldE01INTERE.getBigDecimal();
  }

  /**
  * Set field E01COSOPE using a String value.
  */
  public void setE01COSOPE(String newvalue)
  {
    fieldE01COSOPE.setString(newvalue);
  }

  /**
  * Get value of field E01COSOPE as a String.
  */
  public String getE01COSOPE()
  {
    return fieldE01COSOPE.getString();
  }

  /**
  * Set numeric field E01COSOPE using a BigDecimal value.
  */
  public void setE01COSOPE(BigDecimal newvalue)
  {
    fieldE01COSOPE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01COSOPE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01COSOPE()
  {
    return fieldE01COSOPE.getBigDecimal();
  }

  /**
  * Set field E01COSFON using a String value.
  */
  public void setE01COSFON(String newvalue)
  {
    fieldE01COSFON.setString(newvalue);
  }

  /**
  * Get value of field E01COSFON as a String.
  */
  public String getE01COSFON()
  {
    return fieldE01COSFON.getString();
  }

  /**
  * Set numeric field E01COSFON using a BigDecimal value.
  */
  public void setE01COSFON(BigDecimal newvalue)
  {
    fieldE01COSFON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01COSFON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01COSFON()
  {
    return fieldE01COSFON.getBigDecimal();
  }

  /**
  * Set field E01OTHAMT using a String value.
  */
  public void setE01OTHAMT(String newvalue)
  {
    fieldE01OTHAMT.setString(newvalue);
  }

  /**
  * Get value of field E01OTHAMT as a String.
  */
  public String getE01OTHAMT()
  {
    return fieldE01OTHAMT.getString();
  }

  /**
  * Set numeric field E01OTHAMT using a BigDecimal value.
  */
  public void setE01OTHAMT(BigDecimal newvalue)
  {
    fieldE01OTHAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OTHAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OTHAMT()
  {
    return fieldE01OTHAMT.getBigDecimal();
  }

  /**
  * Set field E01RTEINT using a String value.
  */
  public void setE01RTEINT(String newvalue)
  {
    fieldE01RTEINT.setString(newvalue);
  }

  /**
  * Get value of field E01RTEINT as a String.
  */
  public String getE01RTEINT()
  {
    return fieldE01RTEINT.getString();
  }

  /**
  * Set numeric field E01RTEINT using a BigDecimal value.
  */
  public void setE01RTEINT(BigDecimal newvalue)
  {
    fieldE01RTEINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RTEINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RTEINT()
  {
    return fieldE01RTEINT.getBigDecimal();
  }

  /**
  * Set field E01NUMDEB using a String value.
  */
  public void setE01NUMDEB(String newvalue)
  {
    fieldE01NUMDEB.setString(newvalue);
  }

  /**
  * Get value of field E01NUMDEB as a String.
  */
  public String getE01NUMDEB()
  {
    return fieldE01NUMDEB.getString();
  }

  /**
  * Set numeric field E01NUMDEB using a BigDecimal value.
  */
  public void setE01NUMDEB(BigDecimal newvalue)
  {
    fieldE01NUMDEB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMDEB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMDEB()
  {
    return fieldE01NUMDEB.getBigDecimal();
  }

  /**
  * Set field E01NUMCRE using a String value.
  */
  public void setE01NUMCRE(String newvalue)
  {
    fieldE01NUMCRE.setString(newvalue);
  }

  /**
  * Get value of field E01NUMCRE as a String.
  */
  public String getE01NUMCRE()
  {
    return fieldE01NUMCRE.getString();
  }

  /**
  * Set numeric field E01NUMCRE using a BigDecimal value.
  */
  public void setE01NUMCRE(BigDecimal newvalue)
  {
    fieldE01NUMCRE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMCRE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMCRE()
  {
    return fieldE01NUMCRE.getBigDecimal();
  }

  /**
  * Set field E01NUMCHK using a String value.
  */
  public void setE01NUMCHK(String newvalue)
  {
    fieldE01NUMCHK.setString(newvalue);
  }

  /**
  * Get value of field E01NUMCHK as a String.
  */
  public String getE01NUMCHK()
  {
    return fieldE01NUMCHK.getString();
  }

  /**
  * Set numeric field E01NUMCHK using a BigDecimal value.
  */
  public void setE01NUMCHK(BigDecimal newvalue)
  {
    fieldE01NUMCHK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMCHK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMCHK()
  {
    return fieldE01NUMCHK.getBigDecimal();
  }

  /**
  * Set field E01NUMDEP using a String value.
  */
  public void setE01NUMDEP(String newvalue)
  {
    fieldE01NUMDEP.setString(newvalue);
  }

  /**
  * Get value of field E01NUMDEP as a String.
  */
  public String getE01NUMDEP()
  {
    return fieldE01NUMDEP.getString();
  }

  /**
  * Set numeric field E01NUMDEP using a BigDecimal value.
  */
  public void setE01NUMDEP(BigDecimal newvalue)
  {
    fieldE01NUMDEP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMDEP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMDEP()
  {
    return fieldE01NUMDEP.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
