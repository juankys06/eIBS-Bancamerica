package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPC030001 physical file definition.
* 
* File level identifier is 1080220203738.
* Record format level identifier is 5073BDED7A88B.
*/

public class EPC030001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PCBACC",
                                     "E01PCBNUM",
                                     "E01PCBCFL",
                                     "E01PCBRCD",
                                     "E01PCBCUN",
                                     "E01PCBVLC",
                                     "E01PCBVLM",
                                     "E01PCBVLD",
                                     "E01PCBVLY",
                                     "E01PCBRDC",
                                     "E01PCBRDM",
                                     "E01PCBRDD",
                                     "E01PCBRDY",
                                     "E01PCBAMT",
                                     "E01PCBPPR",
                                     "E01PCBEAM",
                                     "E01PCBEPR",
                                     "E01PCBXAM",
                                     "E01PCBXPR",
                                     "E01PCBUSR",
                                     "D01PCMCUN",
                                     "D01PCMPRO",
                                     "F01PCBACC",
                                     "F01PCBNUM",
                                     "F01PCBCFL",
                                     "F01PCBRCD",
                                     "F01PCBCUN",
                                     "F01PCBVLC",
                                     "F01PCBVLM",
                                     "F01PCBVLD",
                                     "F01PCBVLY",
                                     "F01PCBRDC",
                                     "F01PCBRDM",
                                     "F01PCBRDD",
                                     "F01PCBRDY",
                                     "F01PCBAMT",
                                     "F01PCBPPR",
                                     "F01PCBEAM",
                                     "F01PCBEPR",
                                     "F01PCBXAM",
                                     "F01PCBXPR",
                                     "F01PCBUSR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PCBACC",
                                   "E01PCBNUM",
                                   "E01PCBCFL",
                                   "E01PCBRCD",
                                   "E01PCBCUN",
                                   "E01PCBVLC",
                                   "E01PCBVLM",
                                   "E01PCBVLD",
                                   "E01PCBVLY",
                                   "E01PCBRDC",
                                   "E01PCBRDM",
                                   "E01PCBRDD",
                                   "E01PCBRDY",
                                   "E01PCBAMT",
                                   "E01PCBPPR",
                                   "E01PCBEAM",
                                   "E01PCBEPR",
                                   "E01PCBXAM",
                                   "E01PCBXPR",
                                   "E01PCBUSR",
                                   "D01PCMCUN",
                                   "D01PCMPRO",
                                   "F01PCBACC",
                                   "F01PCBNUM",
                                   "F01PCBCFL",
                                   "F01PCBRCD",
                                   "F01PCBCUN",
                                   "F01PCBVLC",
                                   "F01PCBVLM",
                                   "F01PCBVLD",
                                   "F01PCBVLY",
                                   "F01PCBRDC",
                                   "F01PCBRDM",
                                   "F01PCBRDD",
                                   "F01PCBRDY",
                                   "F01PCBAMT",
                                   "F01PCBPPR",
                                   "F01PCBEAM",
                                   "F01PCBEPR",
                                   "F01PCBXAM",
                                   "F01PCBXPR",
                                   "F01PCBUSR"
                                 };
  final static String fid = "1080220203738";
  final static String rid = "5073BDED7A88B";
  final static String fmtname = "EPC030001";
  final int FIELDCOUNT = 51;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PCBACC = null;
  private DecimalField fieldE01PCBNUM = null;
  private CharacterField fieldE01PCBCFL = null;
  private CharacterField fieldE01PCBRCD = null;
  private DecimalField fieldE01PCBCUN = null;
  private DecimalField fieldE01PCBVLC = null;
  private DecimalField fieldE01PCBVLM = null;
  private DecimalField fieldE01PCBVLD = null;
  private DecimalField fieldE01PCBVLY = null;
  private DecimalField fieldE01PCBRDC = null;
  private DecimalField fieldE01PCBRDM = null;
  private DecimalField fieldE01PCBRDD = null;
  private DecimalField fieldE01PCBRDY = null;
  private DecimalField fieldE01PCBAMT = null;
  private DecimalField fieldE01PCBPPR = null;
  private DecimalField fieldE01PCBEAM = null;
  private DecimalField fieldE01PCBEPR = null;
  private DecimalField fieldE01PCBXAM = null;
  private DecimalField fieldE01PCBXPR = null;
  private CharacterField fieldE01PCBUSR = null;
  private CharacterField fieldD01PCMCUN = null;
  private CharacterField fieldD01PCMPRO = null;
  private CharacterField fieldF01PCBACC = null;
  private CharacterField fieldF01PCBNUM = null;
  private CharacterField fieldF01PCBCFL = null;
  private CharacterField fieldF01PCBRCD = null;
  private CharacterField fieldF01PCBCUN = null;
  private CharacterField fieldF01PCBVLC = null;
  private CharacterField fieldF01PCBVLM = null;
  private CharacterField fieldF01PCBVLD = null;
  private CharacterField fieldF01PCBVLY = null;
  private CharacterField fieldF01PCBRDC = null;
  private CharacterField fieldF01PCBRDM = null;
  private CharacterField fieldF01PCBRDD = null;
  private CharacterField fieldF01PCBRDY = null;
  private CharacterField fieldF01PCBAMT = null;
  private CharacterField fieldF01PCBPPR = null;
  private CharacterField fieldF01PCBEAM = null;
  private CharacterField fieldF01PCBEPR = null;
  private CharacterField fieldF01PCBXAM = null;
  private CharacterField fieldF01PCBXPR = null;
  private CharacterField fieldF01PCBUSR = null;

  /**
  * Constructor for EPC030001Message.
  */
  public EPC030001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 319;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PCBACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01PCBACC");
    fields[10] = fieldE01PCBNUM =
    new DecimalField(message, HEADERSIZE + 55, 5, 0, "E01PCBNUM");
    fields[11] = fieldE01PCBCFL =
    new CharacterField(message, HEADERSIZE + 60, 2, "E01PCBCFL");
    fields[12] = fieldE01PCBRCD =
    new CharacterField(message, HEADERSIZE + 62, 4, "E01PCBRCD");
    fields[13] = fieldE01PCBCUN =
    new DecimalField(message, HEADERSIZE + 66, 10, 0, "E01PCBCUN");
    fields[14] = fieldE01PCBVLC =
    new DecimalField(message, HEADERSIZE + 76, 2, 0, "E01PCBVLC");
    fields[15] = fieldE01PCBVLM =
    new DecimalField(message, HEADERSIZE + 78, 3, 0, "E01PCBVLM");
    fields[16] = fieldE01PCBVLD =
    new DecimalField(message, HEADERSIZE + 81, 3, 0, "E01PCBVLD");
    fields[17] = fieldE01PCBVLY =
    new DecimalField(message, HEADERSIZE + 84, 3, 0, "E01PCBVLY");
    fields[18] = fieldE01PCBRDC =
    new DecimalField(message, HEADERSIZE + 87, 2, 0, "E01PCBRDC");
    fields[19] = fieldE01PCBRDM =
    new DecimalField(message, HEADERSIZE + 89, 3, 0, "E01PCBRDM");
    fields[20] = fieldE01PCBRDD =
    new DecimalField(message, HEADERSIZE + 92, 3, 0, "E01PCBRDD");
    fields[21] = fieldE01PCBRDY =
    new DecimalField(message, HEADERSIZE + 95, 3, 0, "E01PCBRDY");
    fields[22] = fieldE01PCBAMT =
    new DecimalField(message, HEADERSIZE + 98, 17, 2, "E01PCBAMT");
    fields[23] = fieldE01PCBPPR =
    new DecimalField(message, HEADERSIZE + 115, 20, 12, "E01PCBPPR");
    fields[24] = fieldE01PCBEAM =
    new DecimalField(message, HEADERSIZE + 135, 17, 2, "E01PCBEAM");
    fields[25] = fieldE01PCBEPR =
    new DecimalField(message, HEADERSIZE + 152, 20, 12, "E01PCBEPR");
    fields[26] = fieldE01PCBXAM =
    new DecimalField(message, HEADERSIZE + 172, 17, 2, "E01PCBXAM");
    fields[27] = fieldE01PCBXPR =
    new DecimalField(message, HEADERSIZE + 189, 20, 12, "E01PCBXPR");
    fields[28] = fieldE01PCBUSR =
    new CharacterField(message, HEADERSIZE + 209, 10, "E01PCBUSR");
    fields[29] = fieldD01PCMCUN =
    new CharacterField(message, HEADERSIZE + 219, 45, "D01PCMCUN");
    fields[30] = fieldD01PCMPRO =
    new CharacterField(message, HEADERSIZE + 264, 35, "D01PCMPRO");
    fields[31] = fieldF01PCBACC =
    new CharacterField(message, HEADERSIZE + 299, 1, "F01PCBACC");
    fields[32] = fieldF01PCBNUM =
    new CharacterField(message, HEADERSIZE + 300, 1, "F01PCBNUM");
    fields[33] = fieldF01PCBCFL =
    new CharacterField(message, HEADERSIZE + 301, 1, "F01PCBCFL");
    fields[34] = fieldF01PCBRCD =
    new CharacterField(message, HEADERSIZE + 302, 1, "F01PCBRCD");
    fields[35] = fieldF01PCBCUN =
    new CharacterField(message, HEADERSIZE + 303, 1, "F01PCBCUN");
    fields[36] = fieldF01PCBVLC =
    new CharacterField(message, HEADERSIZE + 304, 1, "F01PCBVLC");
    fields[37] = fieldF01PCBVLM =
    new CharacterField(message, HEADERSIZE + 305, 1, "F01PCBVLM");
    fields[38] = fieldF01PCBVLD =
    new CharacterField(message, HEADERSIZE + 306, 1, "F01PCBVLD");
    fields[39] = fieldF01PCBVLY =
    new CharacterField(message, HEADERSIZE + 307, 1, "F01PCBVLY");
    fields[40] = fieldF01PCBRDC =
    new CharacterField(message, HEADERSIZE + 308, 1, "F01PCBRDC");
    fields[41] = fieldF01PCBRDM =
    new CharacterField(message, HEADERSIZE + 309, 1, "F01PCBRDM");
    fields[42] = fieldF01PCBRDD =
    new CharacterField(message, HEADERSIZE + 310, 1, "F01PCBRDD");
    fields[43] = fieldF01PCBRDY =
    new CharacterField(message, HEADERSIZE + 311, 1, "F01PCBRDY");
    fields[44] = fieldF01PCBAMT =
    new CharacterField(message, HEADERSIZE + 312, 1, "F01PCBAMT");
    fields[45] = fieldF01PCBPPR =
    new CharacterField(message, HEADERSIZE + 313, 1, "F01PCBPPR");
    fields[46] = fieldF01PCBEAM =
    new CharacterField(message, HEADERSIZE + 314, 1, "F01PCBEAM");
    fields[47] = fieldF01PCBEPR =
    new CharacterField(message, HEADERSIZE + 315, 1, "F01PCBEPR");
    fields[48] = fieldF01PCBXAM =
    new CharacterField(message, HEADERSIZE + 316, 1, "F01PCBXAM");
    fields[49] = fieldF01PCBXPR =
    new CharacterField(message, HEADERSIZE + 317, 1, "F01PCBXPR");
    fields[50] = fieldF01PCBUSR =
    new CharacterField(message, HEADERSIZE + 318, 1, "F01PCBUSR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PCBACC using a String value.
  */
  public void setE01PCBACC(String newvalue)
  {
    fieldE01PCBACC.setString(newvalue);
  }

  /**
  * Get value of field E01PCBACC as a String.
  */
  public String getE01PCBACC()
  {
    return fieldE01PCBACC.getString();
  }

  /**
  * Set numeric field E01PCBACC using a BigDecimal value.
  */
  public void setE01PCBACC(BigDecimal newvalue)
  {
    fieldE01PCBACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBACC()
  {
    return fieldE01PCBACC.getBigDecimal();
  }

  /**
  * Set field E01PCBNUM using a String value.
  */
  public void setE01PCBNUM(String newvalue)
  {
    fieldE01PCBNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PCBNUM as a String.
  */
  public String getE01PCBNUM()
  {
    return fieldE01PCBNUM.getString();
  }

  /**
  * Set numeric field E01PCBNUM using a BigDecimal value.
  */
  public void setE01PCBNUM(BigDecimal newvalue)
  {
    fieldE01PCBNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBNUM()
  {
    return fieldE01PCBNUM.getBigDecimal();
  }

  /**
  * Set field E01PCBCFL using a String value.
  */
  public void setE01PCBCFL(String newvalue)
  {
    fieldE01PCBCFL.setString(newvalue);
  }

  /**
  * Get value of field E01PCBCFL as a String.
  */
  public String getE01PCBCFL()
  {
    return fieldE01PCBCFL.getString();
  }

  /**
  * Set field E01PCBRCD using a String value.
  */
  public void setE01PCBRCD(String newvalue)
  {
    fieldE01PCBRCD.setString(newvalue);
  }

  /**
  * Get value of field E01PCBRCD as a String.
  */
  public String getE01PCBRCD()
  {
    return fieldE01PCBRCD.getString();
  }

  /**
  * Set field E01PCBCUN using a String value.
  */
  public void setE01PCBCUN(String newvalue)
  {
    fieldE01PCBCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PCBCUN as a String.
  */
  public String getE01PCBCUN()
  {
    return fieldE01PCBCUN.getString();
  }

  /**
  * Set numeric field E01PCBCUN using a BigDecimal value.
  */
  public void setE01PCBCUN(BigDecimal newvalue)
  {
    fieldE01PCBCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBCUN()
  {
    return fieldE01PCBCUN.getBigDecimal();
  }

  /**
  * Set field E01PCBVLC using a String value.
  */
  public void setE01PCBVLC(String newvalue)
  {
    fieldE01PCBVLC.setString(newvalue);
  }

  /**
  * Get value of field E01PCBVLC as a String.
  */
  public String getE01PCBVLC()
  {
    return fieldE01PCBVLC.getString();
  }

  /**
  * Set numeric field E01PCBVLC using a BigDecimal value.
  */
  public void setE01PCBVLC(BigDecimal newvalue)
  {
    fieldE01PCBVLC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBVLC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBVLC()
  {
    return fieldE01PCBVLC.getBigDecimal();
  }

  /**
  * Set field E01PCBVLM using a String value.
  */
  public void setE01PCBVLM(String newvalue)
  {
    fieldE01PCBVLM.setString(newvalue);
  }

  /**
  * Get value of field E01PCBVLM as a String.
  */
  public String getE01PCBVLM()
  {
    return fieldE01PCBVLM.getString();
  }

  /**
  * Set numeric field E01PCBVLM using a BigDecimal value.
  */
  public void setE01PCBVLM(BigDecimal newvalue)
  {
    fieldE01PCBVLM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBVLM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBVLM()
  {
    return fieldE01PCBVLM.getBigDecimal();
  }

  /**
  * Set field E01PCBVLD using a String value.
  */
  public void setE01PCBVLD(String newvalue)
  {
    fieldE01PCBVLD.setString(newvalue);
  }

  /**
  * Get value of field E01PCBVLD as a String.
  */
  public String getE01PCBVLD()
  {
    return fieldE01PCBVLD.getString();
  }

  /**
  * Set numeric field E01PCBVLD using a BigDecimal value.
  */
  public void setE01PCBVLD(BigDecimal newvalue)
  {
    fieldE01PCBVLD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBVLD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBVLD()
  {
    return fieldE01PCBVLD.getBigDecimal();
  }

  /**
  * Set field E01PCBVLY using a String value.
  */
  public void setE01PCBVLY(String newvalue)
  {
    fieldE01PCBVLY.setString(newvalue);
  }

  /**
  * Get value of field E01PCBVLY as a String.
  */
  public String getE01PCBVLY()
  {
    return fieldE01PCBVLY.getString();
  }

  /**
  * Set numeric field E01PCBVLY using a BigDecimal value.
  */
  public void setE01PCBVLY(BigDecimal newvalue)
  {
    fieldE01PCBVLY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBVLY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBVLY()
  {
    return fieldE01PCBVLY.getBigDecimal();
  }

  /**
  * Set field E01PCBRDC using a String value.
  */
  public void setE01PCBRDC(String newvalue)
  {
    fieldE01PCBRDC.setString(newvalue);
  }

  /**
  * Get value of field E01PCBRDC as a String.
  */
  public String getE01PCBRDC()
  {
    return fieldE01PCBRDC.getString();
  }

  /**
  * Set numeric field E01PCBRDC using a BigDecimal value.
  */
  public void setE01PCBRDC(BigDecimal newvalue)
  {
    fieldE01PCBRDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBRDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBRDC()
  {
    return fieldE01PCBRDC.getBigDecimal();
  }

  /**
  * Set field E01PCBRDM using a String value.
  */
  public void setE01PCBRDM(String newvalue)
  {
    fieldE01PCBRDM.setString(newvalue);
  }

  /**
  * Get value of field E01PCBRDM as a String.
  */
  public String getE01PCBRDM()
  {
    return fieldE01PCBRDM.getString();
  }

  /**
  * Set numeric field E01PCBRDM using a BigDecimal value.
  */
  public void setE01PCBRDM(BigDecimal newvalue)
  {
    fieldE01PCBRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBRDM()
  {
    return fieldE01PCBRDM.getBigDecimal();
  }

  /**
  * Set field E01PCBRDD using a String value.
  */
  public void setE01PCBRDD(String newvalue)
  {
    fieldE01PCBRDD.setString(newvalue);
  }

  /**
  * Get value of field E01PCBRDD as a String.
  */
  public String getE01PCBRDD()
  {
    return fieldE01PCBRDD.getString();
  }

  /**
  * Set numeric field E01PCBRDD using a BigDecimal value.
  */
  public void setE01PCBRDD(BigDecimal newvalue)
  {
    fieldE01PCBRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBRDD()
  {
    return fieldE01PCBRDD.getBigDecimal();
  }

  /**
  * Set field E01PCBRDY using a String value.
  */
  public void setE01PCBRDY(String newvalue)
  {
    fieldE01PCBRDY.setString(newvalue);
  }

  /**
  * Get value of field E01PCBRDY as a String.
  */
  public String getE01PCBRDY()
  {
    return fieldE01PCBRDY.getString();
  }

  /**
  * Set numeric field E01PCBRDY using a BigDecimal value.
  */
  public void setE01PCBRDY(BigDecimal newvalue)
  {
    fieldE01PCBRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBRDY()
  {
    return fieldE01PCBRDY.getBigDecimal();
  }

  /**
  * Set field E01PCBAMT using a String value.
  */
  public void setE01PCBAMT(String newvalue)
  {
    fieldE01PCBAMT.setString(newvalue);
  }

  /**
  * Get value of field E01PCBAMT as a String.
  */
  public String getE01PCBAMT()
  {
    return fieldE01PCBAMT.getString();
  }

  /**
  * Set numeric field E01PCBAMT using a BigDecimal value.
  */
  public void setE01PCBAMT(BigDecimal newvalue)
  {
    fieldE01PCBAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBAMT()
  {
    return fieldE01PCBAMT.getBigDecimal();
  }

  /**
  * Set field E01PCBPPR using a String value.
  */
  public void setE01PCBPPR(String newvalue)
  {
    fieldE01PCBPPR.setString(newvalue);
  }

  /**
  * Get value of field E01PCBPPR as a String.
  */
  public String getE01PCBPPR()
  {
    return fieldE01PCBPPR.getString();
  }

  /**
  * Set numeric field E01PCBPPR using a BigDecimal value.
  */
  public void setE01PCBPPR(BigDecimal newvalue)
  {
    fieldE01PCBPPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBPPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBPPR()
  {
    return fieldE01PCBPPR.getBigDecimal();
  }

  /**
  * Set field E01PCBEAM using a String value.
  */
  public void setE01PCBEAM(String newvalue)
  {
    fieldE01PCBEAM.setString(newvalue);
  }

  /**
  * Get value of field E01PCBEAM as a String.
  */
  public String getE01PCBEAM()
  {
    return fieldE01PCBEAM.getString();
  }

  /**
  * Set numeric field E01PCBEAM using a BigDecimal value.
  */
  public void setE01PCBEAM(BigDecimal newvalue)
  {
    fieldE01PCBEAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBEAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBEAM()
  {
    return fieldE01PCBEAM.getBigDecimal();
  }

  /**
  * Set field E01PCBEPR using a String value.
  */
  public void setE01PCBEPR(String newvalue)
  {
    fieldE01PCBEPR.setString(newvalue);
  }

  /**
  * Get value of field E01PCBEPR as a String.
  */
  public String getE01PCBEPR()
  {
    return fieldE01PCBEPR.getString();
  }

  /**
  * Set numeric field E01PCBEPR using a BigDecimal value.
  */
  public void setE01PCBEPR(BigDecimal newvalue)
  {
    fieldE01PCBEPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBEPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBEPR()
  {
    return fieldE01PCBEPR.getBigDecimal();
  }

  /**
  * Set field E01PCBXAM using a String value.
  */
  public void setE01PCBXAM(String newvalue)
  {
    fieldE01PCBXAM.setString(newvalue);
  }

  /**
  * Get value of field E01PCBXAM as a String.
  */
  public String getE01PCBXAM()
  {
    return fieldE01PCBXAM.getString();
  }

  /**
  * Set numeric field E01PCBXAM using a BigDecimal value.
  */
  public void setE01PCBXAM(BigDecimal newvalue)
  {
    fieldE01PCBXAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBXAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBXAM()
  {
    return fieldE01PCBXAM.getBigDecimal();
  }

  /**
  * Set field E01PCBXPR using a String value.
  */
  public void setE01PCBXPR(String newvalue)
  {
    fieldE01PCBXPR.setString(newvalue);
  }

  /**
  * Get value of field E01PCBXPR as a String.
  */
  public String getE01PCBXPR()
  {
    return fieldE01PCBXPR.getString();
  }

  /**
  * Set numeric field E01PCBXPR using a BigDecimal value.
  */
  public void setE01PCBXPR(BigDecimal newvalue)
  {
    fieldE01PCBXPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCBXPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCBXPR()
  {
    return fieldE01PCBXPR.getBigDecimal();
  }

  /**
  * Set field E01PCBUSR using a String value.
  */
  public void setE01PCBUSR(String newvalue)
  {
    fieldE01PCBUSR.setString(newvalue);
  }

  /**
  * Get value of field E01PCBUSR as a String.
  */
  public String getE01PCBUSR()
  {
    return fieldE01PCBUSR.getString();
  }

  /**
  * Set field D01PCMCUN using a String value.
  */
  public void setD01PCMCUN(String newvalue)
  {
    fieldD01PCMCUN.setString(newvalue);
  }

  /**
  * Get value of field D01PCMCUN as a String.
  */
  public String getD01PCMCUN()
  {
    return fieldD01PCMCUN.getString();
  }

  /**
  * Set field D01PCMPRO using a String value.
  */
  public void setD01PCMPRO(String newvalue)
  {
    fieldD01PCMPRO.setString(newvalue);
  }

  /**
  * Get value of field D01PCMPRO as a String.
  */
  public String getD01PCMPRO()
  {
    return fieldD01PCMPRO.getString();
  }

  /**
  * Set field F01PCBACC using a String value.
  */
  public void setF01PCBACC(String newvalue)
  {
    fieldF01PCBACC.setString(newvalue);
  }

  /**
  * Get value of field F01PCBACC as a String.
  */
  public String getF01PCBACC()
  {
    return fieldF01PCBACC.getString();
  }

  /**
  * Set field F01PCBNUM using a String value.
  */
  public void setF01PCBNUM(String newvalue)
  {
    fieldF01PCBNUM.setString(newvalue);
  }

  /**
  * Get value of field F01PCBNUM as a String.
  */
  public String getF01PCBNUM()
  {
    return fieldF01PCBNUM.getString();
  }

  /**
  * Set field F01PCBCFL using a String value.
  */
  public void setF01PCBCFL(String newvalue)
  {
    fieldF01PCBCFL.setString(newvalue);
  }

  /**
  * Get value of field F01PCBCFL as a String.
  */
  public String getF01PCBCFL()
  {
    return fieldF01PCBCFL.getString();
  }

  /**
  * Set field F01PCBRCD using a String value.
  */
  public void setF01PCBRCD(String newvalue)
  {
    fieldF01PCBRCD.setString(newvalue);
  }

  /**
  * Get value of field F01PCBRCD as a String.
  */
  public String getF01PCBRCD()
  {
    return fieldF01PCBRCD.getString();
  }

  /**
  * Set field F01PCBCUN using a String value.
  */
  public void setF01PCBCUN(String newvalue)
  {
    fieldF01PCBCUN.setString(newvalue);
  }

  /**
  * Get value of field F01PCBCUN as a String.
  */
  public String getF01PCBCUN()
  {
    return fieldF01PCBCUN.getString();
  }

  /**
  * Set field F01PCBVLC using a String value.
  */
  public void setF01PCBVLC(String newvalue)
  {
    fieldF01PCBVLC.setString(newvalue);
  }

  /**
  * Get value of field F01PCBVLC as a String.
  */
  public String getF01PCBVLC()
  {
    return fieldF01PCBVLC.getString();
  }

  /**
  * Set field F01PCBVLM using a String value.
  */
  public void setF01PCBVLM(String newvalue)
  {
    fieldF01PCBVLM.setString(newvalue);
  }

  /**
  * Get value of field F01PCBVLM as a String.
  */
  public String getF01PCBVLM()
  {
    return fieldF01PCBVLM.getString();
  }

  /**
  * Set field F01PCBVLD using a String value.
  */
  public void setF01PCBVLD(String newvalue)
  {
    fieldF01PCBVLD.setString(newvalue);
  }

  /**
  * Get value of field F01PCBVLD as a String.
  */
  public String getF01PCBVLD()
  {
    return fieldF01PCBVLD.getString();
  }

  /**
  * Set field F01PCBVLY using a String value.
  */
  public void setF01PCBVLY(String newvalue)
  {
    fieldF01PCBVLY.setString(newvalue);
  }

  /**
  * Get value of field F01PCBVLY as a String.
  */
  public String getF01PCBVLY()
  {
    return fieldF01PCBVLY.getString();
  }

  /**
  * Set field F01PCBRDC using a String value.
  */
  public void setF01PCBRDC(String newvalue)
  {
    fieldF01PCBRDC.setString(newvalue);
  }

  /**
  * Get value of field F01PCBRDC as a String.
  */
  public String getF01PCBRDC()
  {
    return fieldF01PCBRDC.getString();
  }

  /**
  * Set field F01PCBRDM using a String value.
  */
  public void setF01PCBRDM(String newvalue)
  {
    fieldF01PCBRDM.setString(newvalue);
  }

  /**
  * Get value of field F01PCBRDM as a String.
  */
  public String getF01PCBRDM()
  {
    return fieldF01PCBRDM.getString();
  }

  /**
  * Set field F01PCBRDD using a String value.
  */
  public void setF01PCBRDD(String newvalue)
  {
    fieldF01PCBRDD.setString(newvalue);
  }

  /**
  * Get value of field F01PCBRDD as a String.
  */
  public String getF01PCBRDD()
  {
    return fieldF01PCBRDD.getString();
  }

  /**
  * Set field F01PCBRDY using a String value.
  */
  public void setF01PCBRDY(String newvalue)
  {
    fieldF01PCBRDY.setString(newvalue);
  }

  /**
  * Get value of field F01PCBRDY as a String.
  */
  public String getF01PCBRDY()
  {
    return fieldF01PCBRDY.getString();
  }

  /**
  * Set field F01PCBAMT using a String value.
  */
  public void setF01PCBAMT(String newvalue)
  {
    fieldF01PCBAMT.setString(newvalue);
  }

  /**
  * Get value of field F01PCBAMT as a String.
  */
  public String getF01PCBAMT()
  {
    return fieldF01PCBAMT.getString();
  }

  /**
  * Set field F01PCBPPR using a String value.
  */
  public void setF01PCBPPR(String newvalue)
  {
    fieldF01PCBPPR.setString(newvalue);
  }

  /**
  * Get value of field F01PCBPPR as a String.
  */
  public String getF01PCBPPR()
  {
    return fieldF01PCBPPR.getString();
  }

  /**
  * Set field F01PCBEAM using a String value.
  */
  public void setF01PCBEAM(String newvalue)
  {
    fieldF01PCBEAM.setString(newvalue);
  }

  /**
  * Get value of field F01PCBEAM as a String.
  */
  public String getF01PCBEAM()
  {
    return fieldF01PCBEAM.getString();
  }

  /**
  * Set field F01PCBEPR using a String value.
  */
  public void setF01PCBEPR(String newvalue)
  {
    fieldF01PCBEPR.setString(newvalue);
  }

  /**
  * Get value of field F01PCBEPR as a String.
  */
  public String getF01PCBEPR()
  {
    return fieldF01PCBEPR.getString();
  }

  /**
  * Set field F01PCBXAM using a String value.
  */
  public void setF01PCBXAM(String newvalue)
  {
    fieldF01PCBXAM.setString(newvalue);
  }

  /**
  * Get value of field F01PCBXAM as a String.
  */
  public String getF01PCBXAM()
  {
    return fieldF01PCBXAM.getString();
  }

  /**
  * Set field F01PCBXPR using a String value.
  */
  public void setF01PCBXPR(String newvalue)
  {
    fieldF01PCBXPR.setString(newvalue);
  }

  /**
  * Get value of field F01PCBXPR as a String.
  */
  public String getF01PCBXPR()
  {
    return fieldF01PCBXPR.getString();
  }

  /**
  * Set field F01PCBUSR using a String value.
  */
  public void setF01PCBUSR(String newvalue)
  {
    fieldF01PCBUSR.setString(newvalue);
  }

  /**
  * Get value of field F01PCBUSR as a String.
  */
  public String getF01PCBUSR()
  {
    return fieldF01PCBUSR.getString();
  }

}
