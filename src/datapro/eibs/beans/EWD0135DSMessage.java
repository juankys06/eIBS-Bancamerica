package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0135DS physical file definition.
* 
* File level identifier is 1030121192028.
* Record format level identifier is 570AA8BE0DA96.
*/

public class EWD0135DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDTBL",
                                     "EWDDSC",
                                     "EWDBIN",
                                     "EWDTPI",
                                     "EWDMXC",
                                     "EWDTRM",
                                     "EWDTRC",
                                     "EWDACT",
                                     "EWDPRV",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDTBL",
                                   "EWDDSC",
                                   "EWDBIN",
                                   "EWDTPI",
                                   "EWDMXC",
                                   "EWDTRM",
                                   "EWDTRC",
                                   "EWDACT",
                                   "EWDPRV",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192028";
  final static String rid = "570AA8BE0DA96";
  final static String fmtname = "EWD0135DS";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDTBL = null;
  private CharacterField fieldEWDDSC = null;
  private DecimalField fieldEWDBIN = null;
  private DecimalField fieldEWDTPI = null;
  private DecimalField fieldEWDMXC = null;
  private DecimalField fieldEWDTRM = null;
  private CharacterField fieldEWDTRC = null;
  private CharacterField fieldEWDACT = null;
  private CharacterField fieldEWDPRV = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0135DSMessage.
  */
  public EWD0135DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 91;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDTBL =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDTBL");
    fields[1] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 2, 35, "EWDDSC");
    fields[2] = fieldEWDBIN =
    new DecimalField(message, HEADERSIZE + 37, 7, 0, "EWDBIN");
    fields[3] = fieldEWDTPI =
    new DecimalField(message, HEADERSIZE + 44, 2, 0, "EWDTPI");
    fields[4] = fieldEWDMXC =
    new DecimalField(message, HEADERSIZE + 46, 3, 0, "EWDMXC");
    fields[5] = fieldEWDTRM =
    new DecimalField(message, HEADERSIZE + 49, 4, 0, "EWDTRM");
    fields[6] = fieldEWDTRC =
    new CharacterField(message, HEADERSIZE + 53, 1, "EWDTRC");
    fields[7] = fieldEWDACT =
    new CharacterField(message, HEADERSIZE + 54, 1, "EWDACT");
    fields[8] = fieldEWDPRV =
    new CharacterField(message, HEADERSIZE + 55, 35, "EWDPRV");
    fields[9] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 90, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDTBL using a String value.
  */
  public void setEWDTBL(String newvalue)
  {
    fieldEWDTBL.setString(newvalue);
  }

  /**
  * Get value of field EWDTBL as a String.
  */
  public String getEWDTBL()
  {
    return fieldEWDTBL.getString();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDBIN using a String value.
  */
  public void setEWDBIN(String newvalue)
  {
    fieldEWDBIN.setString(newvalue);
  }

  /**
  * Get value of field EWDBIN as a String.
  */
  public String getEWDBIN()
  {
    return fieldEWDBIN.getString();
  }

  /**
  * Set numeric field EWDBIN using a BigDecimal value.
  */
  public void setEWDBIN(BigDecimal newvalue)
  {
    fieldEWDBIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDBIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDBIN()
  {
    return fieldEWDBIN.getBigDecimal();
  }

  /**
  * Set field EWDTPI using a String value.
  */
  public void setEWDTPI(String newvalue)
  {
    fieldEWDTPI.setString(newvalue);
  }

  /**
  * Get value of field EWDTPI as a String.
  */
  public String getEWDTPI()
  {
    return fieldEWDTPI.getString();
  }

  /**
  * Set numeric field EWDTPI using a BigDecimal value.
  */
  public void setEWDTPI(BigDecimal newvalue)
  {
    fieldEWDTPI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDTPI as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDTPI()
  {
    return fieldEWDTPI.getBigDecimal();
  }

  /**
  * Set field EWDMXC using a String value.
  */
  public void setEWDMXC(String newvalue)
  {
    fieldEWDMXC.setString(newvalue);
  }

  /**
  * Get value of field EWDMXC as a String.
  */
  public String getEWDMXC()
  {
    return fieldEWDMXC.getString();
  }

  /**
  * Set numeric field EWDMXC using a BigDecimal value.
  */
  public void setEWDMXC(BigDecimal newvalue)
  {
    fieldEWDMXC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDMXC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDMXC()
  {
    return fieldEWDMXC.getBigDecimal();
  }

  /**
  * Set field EWDTRM using a String value.
  */
  public void setEWDTRM(String newvalue)
  {
    fieldEWDTRM.setString(newvalue);
  }

  /**
  * Get value of field EWDTRM as a String.
  */
  public String getEWDTRM()
  {
    return fieldEWDTRM.getString();
  }

  /**
  * Set numeric field EWDTRM using a BigDecimal value.
  */
  public void setEWDTRM(BigDecimal newvalue)
  {
    fieldEWDTRM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDTRM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDTRM()
  {
    return fieldEWDTRM.getBigDecimal();
  }

  /**
  * Set field EWDTRC using a String value.
  */
  public void setEWDTRC(String newvalue)
  {
    fieldEWDTRC.setString(newvalue);
  }

  /**
  * Get value of field EWDTRC as a String.
  */
  public String getEWDTRC()
  {
    return fieldEWDTRC.getString();
  }

  /**
  * Set field EWDACT using a String value.
  */
  public void setEWDACT(String newvalue)
  {
    fieldEWDACT.setString(newvalue);
  }

  /**
  * Get value of field EWDACT as a String.
  */
  public String getEWDACT()
  {
    return fieldEWDACT.getString();
  }

  /**
  * Set field EWDPRV using a String value.
  */
  public void setEWDPRV(String newvalue)
  {
    fieldEWDPRV.setString(newvalue);
  }

  /**
  * Get value of field EWDPRV as a String.
  */
  public String getEWDPRV()
  {
    return fieldEWDPRV.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
