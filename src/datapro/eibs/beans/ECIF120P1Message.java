package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECIF120P1 physical file definition.
* 
* File level identifier is 1030122102506.
* Record format level identifier is 3DB6CE18456DB.
*/

public class ECIF120P1Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01OFCCDE",
                                     "E01OFCNME",
                                     "E01STRDT1",
                                     "E01STRDT2",
                                     "E01STRDT3",
                                     "E01CONTPM",
                                     "E01AMNTPM",
                                     "E01CONTCM",
                                     "E01AMNTCM",
                                     "E01CONTPY",
                                     "E01AMNTPY",
                                     "E01CONTYT",
                                     "E01AMNTYT",
                                     "E01CCAUTH"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01OFCCDE",
                                   "E01OFCNME",
                                   "E01STRDT1",
                                   "E01STRDT2",
                                   "E01STRDT3",
                                   "E01CONTPM",
                                   "E01AMNTPM",
                                   "E01CONTCM",
                                   "E01AMNTCM",
                                   "E01CONTPY",
                                   "E01AMNTPY",
                                   "E01CONTYT",
                                   "E01AMNTYT",
                                   "E01CCAUTH"
                                 };
  final static String fid = "1030122102506";
  final static String rid = "3DB6CE18456DB";
  final static String fmtname = "ECIF120P1";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01OFCCDE = null;
  private CharacterField fieldE01OFCNME = null;
  private DecimalField fieldE01STRDT1 = null;
  private DecimalField fieldE01STRDT2 = null;
  private DecimalField fieldE01STRDT3 = null;
  private DecimalField fieldE01CONTPM = null;
  private DecimalField fieldE01AMNTPM = null;
  private DecimalField fieldE01CONTCM = null;
  private DecimalField fieldE01AMNTCM = null;
  private DecimalField fieldE01CONTPY = null;
  private DecimalField fieldE01AMNTPY = null;
  private DecimalField fieldE01CONTYT = null;
  private DecimalField fieldE01AMNTYT = null;
  private CharacterField fieldE01CCAUTH = null;

  /**
  * Constructor for ECIF120P1Message.
  */
  public ECIF120P1Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 2610;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01OFCCDE =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01OFCCDE");
    fields[10] = fieldE01OFCNME =
    new CharacterField(message, HEADERSIZE + 46, 35, "E01OFCNME");
    fields[11] = fieldE01STRDT1 =
    new DecimalField(message, HEADERSIZE + 81, 3, 0, "E01STRDT1");
    fields[12] = fieldE01STRDT2 =
    new DecimalField(message, HEADERSIZE + 84, 3, 0, "E01STRDT2");
    fields[13] = fieldE01STRDT3 =
    new DecimalField(message, HEADERSIZE + 87, 3, 0, "E01STRDT3");
    fields[14] = fieldE01CONTPM =
    new DecimalField(message, HEADERSIZE + 90, 13, 0, "E01CONTPM");
    fields[15] = fieldE01AMNTPM =
    new DecimalField(message, HEADERSIZE + 103, 17, 2, "E01AMNTPM");
    fields[16] = fieldE01CONTCM =
    new DecimalField(message, HEADERSIZE + 120, 13, 0, "E01CONTCM");
    fields[17] = fieldE01AMNTCM =
    new DecimalField(message, HEADERSIZE + 133, 17, 2, "E01AMNTCM");
    fields[18] = fieldE01CONTPY =
    new DecimalField(message, HEADERSIZE + 150, 13, 0, "E01CONTPY");
    fields[19] = fieldE01AMNTPY =
    new DecimalField(message, HEADERSIZE + 163, 17, 2, "E01AMNTPY");
    fields[20] = fieldE01CONTYT =
    new DecimalField(message, HEADERSIZE + 180, 13, 0, "E01CONTYT");
    fields[21] = fieldE01AMNTYT =
    new DecimalField(message, HEADERSIZE + 193, 17, 2, "E01AMNTYT");
    fields[22] = fieldE01CCAUTH =
    new CharacterField(message, HEADERSIZE + 210, 2400, "E01CCAUTH");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01OFCCDE using a String value.
  */
  public void setE01OFCCDE(String newvalue)
  {
    fieldE01OFCCDE.setString(newvalue);
  }

  /**
  * Get value of field E01OFCCDE as a String.
  */
  public String getE01OFCCDE()
  {
    return fieldE01OFCCDE.getString();
  }

  /**
  * Set field E01OFCNME using a String value.
  */
  public void setE01OFCNME(String newvalue)
  {
    fieldE01OFCNME.setString(newvalue);
  }

  /**
  * Get value of field E01OFCNME as a String.
  */
  public String getE01OFCNME()
  {
    return fieldE01OFCNME.getString();
  }

  /**
  * Set field E01STRDT1 using a String value.
  */
  public void setE01STRDT1(String newvalue)
  {
    fieldE01STRDT1.setString(newvalue);
  }

  /**
  * Get value of field E01STRDT1 as a String.
  */
  public String getE01STRDT1()
  {
    return fieldE01STRDT1.getString();
  }

  /**
  * Set numeric field E01STRDT1 using a BigDecimal value.
  */
  public void setE01STRDT1(BigDecimal newvalue)
  {
    fieldE01STRDT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STRDT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STRDT1()
  {
    return fieldE01STRDT1.getBigDecimal();
  }

  /**
  * Set field E01STRDT2 using a String value.
  */
  public void setE01STRDT2(String newvalue)
  {
    fieldE01STRDT2.setString(newvalue);
  }

  /**
  * Get value of field E01STRDT2 as a String.
  */
  public String getE01STRDT2()
  {
    return fieldE01STRDT2.getString();
  }

  /**
  * Set numeric field E01STRDT2 using a BigDecimal value.
  */
  public void setE01STRDT2(BigDecimal newvalue)
  {
    fieldE01STRDT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STRDT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STRDT2()
  {
    return fieldE01STRDT2.getBigDecimal();
  }

  /**
  * Set field E01STRDT3 using a String value.
  */
  public void setE01STRDT3(String newvalue)
  {
    fieldE01STRDT3.setString(newvalue);
  }

  /**
  * Get value of field E01STRDT3 as a String.
  */
  public String getE01STRDT3()
  {
    return fieldE01STRDT3.getString();
  }

  /**
  * Set numeric field E01STRDT3 using a BigDecimal value.
  */
  public void setE01STRDT3(BigDecimal newvalue)
  {
    fieldE01STRDT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STRDT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STRDT3()
  {
    return fieldE01STRDT3.getBigDecimal();
  }

  /**
  * Set field E01CONTPM using a String value.
  */
  public void setE01CONTPM(String newvalue)
  {
    fieldE01CONTPM.setString(newvalue);
  }

  /**
  * Get value of field E01CONTPM as a String.
  */
  public String getE01CONTPM()
  {
    return fieldE01CONTPM.getString();
  }

  /**
  * Set numeric field E01CONTPM using a BigDecimal value.
  */
  public void setE01CONTPM(BigDecimal newvalue)
  {
    fieldE01CONTPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CONTPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CONTPM()
  {
    return fieldE01CONTPM.getBigDecimal();
  }

  /**
  * Set field E01AMNTPM using a String value.
  */
  public void setE01AMNTPM(String newvalue)
  {
    fieldE01AMNTPM.setString(newvalue);
  }

  /**
  * Get value of field E01AMNTPM as a String.
  */
  public String getE01AMNTPM()
  {
    return fieldE01AMNTPM.getString();
  }

  /**
  * Set numeric field E01AMNTPM using a BigDecimal value.
  */
  public void setE01AMNTPM(BigDecimal newvalue)
  {
    fieldE01AMNTPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AMNTPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AMNTPM()
  {
    return fieldE01AMNTPM.getBigDecimal();
  }

  /**
  * Set field E01CONTCM using a String value.
  */
  public void setE01CONTCM(String newvalue)
  {
    fieldE01CONTCM.setString(newvalue);
  }

  /**
  * Get value of field E01CONTCM as a String.
  */
  public String getE01CONTCM()
  {
    return fieldE01CONTCM.getString();
  }

  /**
  * Set numeric field E01CONTCM using a BigDecimal value.
  */
  public void setE01CONTCM(BigDecimal newvalue)
  {
    fieldE01CONTCM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CONTCM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CONTCM()
  {
    return fieldE01CONTCM.getBigDecimal();
  }

  /**
  * Set field E01AMNTCM using a String value.
  */
  public void setE01AMNTCM(String newvalue)
  {
    fieldE01AMNTCM.setString(newvalue);
  }

  /**
  * Get value of field E01AMNTCM as a String.
  */
  public String getE01AMNTCM()
  {
    return fieldE01AMNTCM.getString();
  }

  /**
  * Set numeric field E01AMNTCM using a BigDecimal value.
  */
  public void setE01AMNTCM(BigDecimal newvalue)
  {
    fieldE01AMNTCM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AMNTCM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AMNTCM()
  {
    return fieldE01AMNTCM.getBigDecimal();
  }

  /**
  * Set field E01CONTPY using a String value.
  */
  public void setE01CONTPY(String newvalue)
  {
    fieldE01CONTPY.setString(newvalue);
  }

  /**
  * Get value of field E01CONTPY as a String.
  */
  public String getE01CONTPY()
  {
    return fieldE01CONTPY.getString();
  }

  /**
  * Set numeric field E01CONTPY using a BigDecimal value.
  */
  public void setE01CONTPY(BigDecimal newvalue)
  {
    fieldE01CONTPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CONTPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CONTPY()
  {
    return fieldE01CONTPY.getBigDecimal();
  }

  /**
  * Set field E01AMNTPY using a String value.
  */
  public void setE01AMNTPY(String newvalue)
  {
    fieldE01AMNTPY.setString(newvalue);
  }

  /**
  * Get value of field E01AMNTPY as a String.
  */
  public String getE01AMNTPY()
  {
    return fieldE01AMNTPY.getString();
  }

  /**
  * Set numeric field E01AMNTPY using a BigDecimal value.
  */
  public void setE01AMNTPY(BigDecimal newvalue)
  {
    fieldE01AMNTPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AMNTPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AMNTPY()
  {
    return fieldE01AMNTPY.getBigDecimal();
  }

  /**
  * Set field E01CONTYT using a String value.
  */
  public void setE01CONTYT(String newvalue)
  {
    fieldE01CONTYT.setString(newvalue);
  }

  /**
  * Get value of field E01CONTYT as a String.
  */
  public String getE01CONTYT()
  {
    return fieldE01CONTYT.getString();
  }

  /**
  * Set numeric field E01CONTYT using a BigDecimal value.
  */
  public void setE01CONTYT(BigDecimal newvalue)
  {
    fieldE01CONTYT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CONTYT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CONTYT()
  {
    return fieldE01CONTYT.getBigDecimal();
  }

  /**
  * Set field E01AMNTYT using a String value.
  */
  public void setE01AMNTYT(String newvalue)
  {
    fieldE01AMNTYT.setString(newvalue);
  }

  /**
  * Get value of field E01AMNTYT as a String.
  */
  public String getE01AMNTYT()
  {
    return fieldE01AMNTYT.getString();
  }

  /**
  * Set numeric field E01AMNTYT using a BigDecimal value.
  */
  public void setE01AMNTYT(BigDecimal newvalue)
  {
    fieldE01AMNTYT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AMNTYT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AMNTYT()
  {
    return fieldE01AMNTYT.getBigDecimal();
  }

  /**
  * Set field E01CCAUTH using a String value.
  */
  public void setE01CCAUTH(String newvalue)
  {
    fieldE01CCAUTH.setString(newvalue);
  }

  /**
  * Get value of field E01CCAUTH as a String.
  */
  public String getE01CCAUTH()
  {
    return fieldE01CCAUTH.getString();
  }

}
