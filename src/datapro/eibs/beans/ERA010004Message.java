package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA010004 physical file definition.
* 
* File level identifier is 1051116165338.
* Record format level identifier is 47C4984831747.
*/

public class ERA010004Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H04USERID",
                                     "H04PROGRM",
                                     "H04TIMSYS",
                                     "H04SCRCOD",
                                     "H04OPECOD",
                                     "H04FLGMAS",
                                     "H04FLGWK1",
                                     "H04FLGWK2",
                                     "H04FLGWK3",
                                     "E04ROCBNK",
                                     "E04ROCCUN",
                                     "E04CUSNA1",
                                     "E04ROCCCY",
                                     "E04ROCREF",
                                     "E04ROCTYP",
                                     "E04ROCMT1",
                                     "E04ROCMT2",
                                     "E04ROCMT3",
                                     "E04ROCNBL",
                                     "E04ROCCOP",
                                     "E04DISPON",
                                     "E04ENDFLD"
                                   };
  final static String tnames[] = {
                                   "H04USERID",
                                   "H04PROGRM",
                                   "H04TIMSYS",
                                   "H04SCRCOD",
                                   "H04OPECOD",
                                   "H04FLGMAS",
                                   "H04FLGWK1",
                                   "H04FLGWK2",
                                   "H04FLGWK3",
                                   "E04ROCBNK",
                                   "E04ROCCUN",
                                   "E04CUSNA1",
                                   "E04ROCCCY",
                                   "E04ROCREF",
                                   "E04ROCTYP",
                                   "E04ROCMT1",
                                   "E04ROCMT2",
                                   "E04ROCMT3",
                                   "E04ROCNBL",
                                   "E04ROCCOP",
                                   "E04DISPON",
                                   "E04ENDFLD"
                                 };
  final static String fid = "1051116165338";
  final static String rid = "47C4984831747";
  final static String fmtname = "ERA010004";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH04USERID = null;
  private CharacterField fieldH04PROGRM = null;
  private CharacterField fieldH04TIMSYS = null;
  private CharacterField fieldH04SCRCOD = null;
  private CharacterField fieldH04OPECOD = null;
  private CharacterField fieldH04FLGMAS = null;
  private CharacterField fieldH04FLGWK1 = null;
  private CharacterField fieldH04FLGWK2 = null;
  private CharacterField fieldH04FLGWK3 = null;
  private CharacterField fieldE04ROCBNK = null;
  private DecimalField fieldE04ROCCUN = null;
  private CharacterField fieldE04CUSNA1 = null;
  private CharacterField fieldE04ROCCCY = null;
  private DecimalField fieldE04ROCREF = null;
  private CharacterField fieldE04ROCTYP = null;
  private DecimalField fieldE04ROCMT1 = null;
  private DecimalField fieldE04ROCMT2 = null;
  private DecimalField fieldE04ROCMT3 = null;
  private DecimalField fieldE04ROCNBL = null;
  private DecimalField fieldE04ROCCOP = null;
  private DecimalField fieldE04DISPON = null;
  private CharacterField fieldE04ENDFLD = null;

  /**
  * Constructor for ERA010004Message.
  */
  public ERA010004Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 180;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH04USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H04USERID");
    fields[1] = fieldH04PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H04PROGRM");
    fields[2] = fieldH04TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H04TIMSYS");
    fields[3] = fieldH04SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H04SCRCOD");
    fields[4] = fieldH04OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H04OPECOD");
    fields[5] = fieldH04FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H04FLGMAS");
    fields[6] = fieldH04FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H04FLGWK1");
    fields[7] = fieldH04FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H04FLGWK2");
    fields[8] = fieldH04FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H04FLGWK3");
    fields[9] = fieldE04ROCBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E04ROCBNK");
    fields[10] = fieldE04ROCCUN =
    new DecimalField(message, HEADERSIZE + 44, 10, 0, "E04ROCCUN");
    fields[11] = fieldE04CUSNA1 =
    new CharacterField(message, HEADERSIZE + 54, 45, "E04CUSNA1");
    fields[12] = fieldE04ROCCCY =
    new CharacterField(message, HEADERSIZE + 99, 3, "E04ROCCCY");
    fields[13] = fieldE04ROCREF =
    new DecimalField(message, HEADERSIZE + 102, 13, 0, "E04ROCREF");
    fields[14] = fieldE04ROCTYP =
    new CharacterField(message, HEADERSIZE + 115, 4, "E04ROCTYP");
    fields[15] = fieldE04ROCMT1 =
    new DecimalField(message, HEADERSIZE + 119, 3, 0, "E04ROCMT1");
    fields[16] = fieldE04ROCMT2 =
    new DecimalField(message, HEADERSIZE + 122, 3, 0, "E04ROCMT2");
    fields[17] = fieldE04ROCMT3 =
    new DecimalField(message, HEADERSIZE + 125, 3, 0, "E04ROCMT3");
    fields[18] = fieldE04ROCNBL =
    new DecimalField(message, HEADERSIZE + 128, 17, 2, "E04ROCNBL");
    fields[19] = fieldE04ROCCOP =
    new DecimalField(message, HEADERSIZE + 145, 17, 2, "E04ROCCOP");
    fields[20] = fieldE04DISPON =
    new DecimalField(message, HEADERSIZE + 162, 17, 2, "E04DISPON");
    fields[21] = fieldE04ENDFLD =
    new CharacterField(message, HEADERSIZE + 179, 1, "E04ENDFLD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H04USERID using a String value.
  */
  public void setH04USERID(String newvalue)
  {
    fieldH04USERID.setString(newvalue);
  }

  /**
  * Get value of field H04USERID as a String.
  */
  public String getH04USERID()
  {
    return fieldH04USERID.getString();
  }

  /**
  * Set field H04PROGRM using a String value.
  */
  public void setH04PROGRM(String newvalue)
  {
    fieldH04PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H04PROGRM as a String.
  */
  public String getH04PROGRM()
  {
    return fieldH04PROGRM.getString();
  }

  /**
  * Set field H04TIMSYS using a String value.
  */
  public void setH04TIMSYS(String newvalue)
  {
    fieldH04TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H04TIMSYS as a String.
  */
  public String getH04TIMSYS()
  {
    return fieldH04TIMSYS.getString();
  }

  /**
  * Set field H04SCRCOD using a String value.
  */
  public void setH04SCRCOD(String newvalue)
  {
    fieldH04SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H04SCRCOD as a String.
  */
  public String getH04SCRCOD()
  {
    return fieldH04SCRCOD.getString();
  }

  /**
  * Set field H04OPECOD using a String value.
  */
  public void setH04OPECOD(String newvalue)
  {
    fieldH04OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H04OPECOD as a String.
  */
  public String getH04OPECOD()
  {
    return fieldH04OPECOD.getString();
  }

  /**
  * Set field H04FLGMAS using a String value.
  */
  public void setH04FLGMAS(String newvalue)
  {
    fieldH04FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H04FLGMAS as a String.
  */
  public String getH04FLGMAS()
  {
    return fieldH04FLGMAS.getString();
  }

  /**
  * Set field H04FLGWK1 using a String value.
  */
  public void setH04FLGWK1(String newvalue)
  {
    fieldH04FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK1 as a String.
  */
  public String getH04FLGWK1()
  {
    return fieldH04FLGWK1.getString();
  }

  /**
  * Set field H04FLGWK2 using a String value.
  */
  public void setH04FLGWK2(String newvalue)
  {
    fieldH04FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK2 as a String.
  */
  public String getH04FLGWK2()
  {
    return fieldH04FLGWK2.getString();
  }

  /**
  * Set field H04FLGWK3 using a String value.
  */
  public void setH04FLGWK3(String newvalue)
  {
    fieldH04FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK3 as a String.
  */
  public String getH04FLGWK3()
  {
    return fieldH04FLGWK3.getString();
  }

  /**
  * Set field E04ROCBNK using a String value.
  */
  public void setE04ROCBNK(String newvalue)
  {
    fieldE04ROCBNK.setString(newvalue);
  }

  /**
  * Get value of field E04ROCBNK as a String.
  */
  public String getE04ROCBNK()
  {
    return fieldE04ROCBNK.getString();
  }

  /**
  * Set field E04ROCCUN using a String value.
  */
  public void setE04ROCCUN(String newvalue)
  {
    fieldE04ROCCUN.setString(newvalue);
  }

  /**
  * Get value of field E04ROCCUN as a String.
  */
  public String getE04ROCCUN()
  {
    return fieldE04ROCCUN.getString();
  }

  /**
  * Set numeric field E04ROCCUN using a BigDecimal value.
  */
  public void setE04ROCCUN(BigDecimal newvalue)
  {
    fieldE04ROCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCCUN()
  {
    return fieldE04ROCCUN.getBigDecimal();
  }

  /**
  * Set field E04CUSNA1 using a String value.
  */
  public void setE04CUSNA1(String newvalue)
  {
    fieldE04CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E04CUSNA1 as a String.
  */
  public String getE04CUSNA1()
  {
    return fieldE04CUSNA1.getString();
  }

  /**
  * Set field E04ROCCCY using a String value.
  */
  public void setE04ROCCCY(String newvalue)
  {
    fieldE04ROCCCY.setString(newvalue);
  }

  /**
  * Get value of field E04ROCCCY as a String.
  */
  public String getE04ROCCCY()
  {
    return fieldE04ROCCCY.getString();
  }

  /**
  * Set field E04ROCREF using a String value.
  */
  public void setE04ROCREF(String newvalue)
  {
    fieldE04ROCREF.setString(newvalue);
  }

  /**
  * Get value of field E04ROCREF as a String.
  */
  public String getE04ROCREF()
  {
    return fieldE04ROCREF.getString();
  }

  /**
  * Set numeric field E04ROCREF using a BigDecimal value.
  */
  public void setE04ROCREF(BigDecimal newvalue)
  {
    fieldE04ROCREF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCREF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCREF()
  {
    return fieldE04ROCREF.getBigDecimal();
  }

  /**
  * Set field E04ROCTYP using a String value.
  */
  public void setE04ROCTYP(String newvalue)
  {
    fieldE04ROCTYP.setString(newvalue);
  }

  /**
  * Get value of field E04ROCTYP as a String.
  */
  public String getE04ROCTYP()
  {
    return fieldE04ROCTYP.getString();
  }

  /**
  * Set field E04ROCMT1 using a String value.
  */
  public void setE04ROCMT1(String newvalue)
  {
    fieldE04ROCMT1.setString(newvalue);
  }

  /**
  * Get value of field E04ROCMT1 as a String.
  */
  public String getE04ROCMT1()
  {
    return fieldE04ROCMT1.getString();
  }

  /**
  * Set numeric field E04ROCMT1 using a BigDecimal value.
  */
  public void setE04ROCMT1(BigDecimal newvalue)
  {
    fieldE04ROCMT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCMT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCMT1()
  {
    return fieldE04ROCMT1.getBigDecimal();
  }

  /**
  * Set field E04ROCMT2 using a String value.
  */
  public void setE04ROCMT2(String newvalue)
  {
    fieldE04ROCMT2.setString(newvalue);
  }

  /**
  * Get value of field E04ROCMT2 as a String.
  */
  public String getE04ROCMT2()
  {
    return fieldE04ROCMT2.getString();
  }

  /**
  * Set numeric field E04ROCMT2 using a BigDecimal value.
  */
  public void setE04ROCMT2(BigDecimal newvalue)
  {
    fieldE04ROCMT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCMT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCMT2()
  {
    return fieldE04ROCMT2.getBigDecimal();
  }

  /**
  * Set field E04ROCMT3 using a String value.
  */
  public void setE04ROCMT3(String newvalue)
  {
    fieldE04ROCMT3.setString(newvalue);
  }

  /**
  * Get value of field E04ROCMT3 as a String.
  */
  public String getE04ROCMT3()
  {
    return fieldE04ROCMT3.getString();
  }

  /**
  * Set numeric field E04ROCMT3 using a BigDecimal value.
  */
  public void setE04ROCMT3(BigDecimal newvalue)
  {
    fieldE04ROCMT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCMT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCMT3()
  {
    return fieldE04ROCMT3.getBigDecimal();
  }

  /**
  * Set field E04ROCNBL using a String value.
  */
  public void setE04ROCNBL(String newvalue)
  {
    fieldE04ROCNBL.setString(newvalue);
  }

  /**
  * Get value of field E04ROCNBL as a String.
  */
  public String getE04ROCNBL()
  {
    return fieldE04ROCNBL.getString();
  }

  /**
  * Set numeric field E04ROCNBL using a BigDecimal value.
  */
  public void setE04ROCNBL(BigDecimal newvalue)
  {
    fieldE04ROCNBL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCNBL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCNBL()
  {
    return fieldE04ROCNBL.getBigDecimal();
  }

  /**
  * Set field E04ROCCOP using a String value.
  */
  public void setE04ROCCOP(String newvalue)
  {
    fieldE04ROCCOP.setString(newvalue);
  }

  /**
  * Get value of field E04ROCCOP as a String.
  */
  public String getE04ROCCOP()
  {
    return fieldE04ROCCOP.getString();
  }

  /**
  * Set numeric field E04ROCCOP using a BigDecimal value.
  */
  public void setE04ROCCOP(BigDecimal newvalue)
  {
    fieldE04ROCCOP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCCOP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCCOP()
  {
    return fieldE04ROCCOP.getBigDecimal();
  }

  /**
  * Set field E04DISPON using a String value.
  */
  public void setE04DISPON(String newvalue)
  {
    fieldE04DISPON.setString(newvalue);
  }

  /**
  * Get value of field E04DISPON as a String.
  */
  public String getE04DISPON()
  {
    return fieldE04DISPON.getString();
  }

  /**
  * Set numeric field E04DISPON using a BigDecimal value.
  */
  public void setE04DISPON(BigDecimal newvalue)
  {
    fieldE04DISPON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DISPON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DISPON()
  {
    return fieldE04DISPON.getBigDecimal();
  }

  /**
  * Set field E04ENDFLD using a String value.
  */
  public void setE04ENDFLD(String newvalue)
  {
    fieldE04ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E04ENDFLD as a String.
  */
  public String getE04ENDFLD()
  {
    return fieldE04ENDFLD.getString();
  }

}
