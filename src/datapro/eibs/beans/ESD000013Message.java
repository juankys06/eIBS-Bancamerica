package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD000013 physical file definition.
* 
* File level identifier is 1030129195628.
* Record format level identifier is 59A76221C32C8.
*/

public class ESD000013Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H13USERID",
                                     "H13PROGRM",
                                     "H13TIMSYS",
                                     "H13SCRCOD",
                                     "H13OPECOD",
                                     "H13FLGMAS",
                                     "H13FLGWK1",
                                     "H13FLGWK2",
                                     "H13FLGWK3",
                                     "E13CNOCFL",
                                     "E13CNORCD",
                                     "E13CNODSC"
                                   };
  final static String tnames[] = {
                                   "H13USERID",
                                   "H13PROGRM",
                                   "H13TIMSYS",
                                   "H13SCRCOD",
                                   "H13OPECOD",
                                   "H13FLGMAS",
                                   "H13FLGWK1",
                                   "H13FLGWK2",
                                   "H13FLGWK3",
                                   "E13CNOCFL",
                                   "E13CNORCD",
                                   "E13CNODSC"
                                 };
  final static String fid = "1030129195628";
  final static String rid = "59A76221C32C8";
  final static String fmtname = "ESD000013";
  final int FIELDCOUNT = 12;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH13USERID = null;
  private CharacterField fieldH13PROGRM = null;
  private CharacterField fieldH13TIMSYS = null;
  private CharacterField fieldH13SCRCOD = null;
  private CharacterField fieldH13OPECOD = null;
  private CharacterField fieldH13FLGMAS = null;
  private CharacterField fieldH13FLGWK1 = null;
  private CharacterField fieldH13FLGWK2 = null;
  private CharacterField fieldH13FLGWK3 = null;
  private CharacterField fieldE13CNOCFL = null;
  private CharacterField fieldE13CNORCD = null;
  private CharacterField fieldE13CNODSC = null;

  /**
  * Constructor for ESD000013Message.
  */
  public ESD000013Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 83;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH13USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H13USERID");
    fields[1] = fieldH13PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H13PROGRM");
    fields[2] = fieldH13TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H13TIMSYS");
    fields[3] = fieldH13SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H13SCRCOD");
    fields[4] = fieldH13OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H13OPECOD");
    fields[5] = fieldH13FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H13FLGMAS");
    fields[6] = fieldH13FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H13FLGWK1");
    fields[7] = fieldH13FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H13FLGWK2");
    fields[8] = fieldH13FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H13FLGWK3");
    fields[9] = fieldE13CNOCFL =
    new CharacterField(message, HEADERSIZE + 42, 2, "E13CNOCFL");
    fields[10] = fieldE13CNORCD =
    new CharacterField(message, HEADERSIZE + 44, 4, "E13CNORCD");
    fields[11] = fieldE13CNODSC =
    new CharacterField(message, HEADERSIZE + 48, 35, "E13CNODSC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H13USERID using a String value.
  */
  public void setH13USERID(String newvalue)
  {
    fieldH13USERID.setString(newvalue);
  }

  /**
  * Get value of field H13USERID as a String.
  */
  public String getH13USERID()
  {
    return fieldH13USERID.getString();
  }

  /**
  * Set field H13PROGRM using a String value.
  */
  public void setH13PROGRM(String newvalue)
  {
    fieldH13PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H13PROGRM as a String.
  */
  public String getH13PROGRM()
  {
    return fieldH13PROGRM.getString();
  }

  /**
  * Set field H13TIMSYS using a String value.
  */
  public void setH13TIMSYS(String newvalue)
  {
    fieldH13TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H13TIMSYS as a String.
  */
  public String getH13TIMSYS()
  {
    return fieldH13TIMSYS.getString();
  }

  /**
  * Set field H13SCRCOD using a String value.
  */
  public void setH13SCRCOD(String newvalue)
  {
    fieldH13SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H13SCRCOD as a String.
  */
  public String getH13SCRCOD()
  {
    return fieldH13SCRCOD.getString();
  }

  /**
  * Set field H13OPECOD using a String value.
  */
  public void setH13OPECOD(String newvalue)
  {
    fieldH13OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H13OPECOD as a String.
  */
  public String getH13OPECOD()
  {
    return fieldH13OPECOD.getString();
  }

  /**
  * Set field H13FLGMAS using a String value.
  */
  public void setH13FLGMAS(String newvalue)
  {
    fieldH13FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H13FLGMAS as a String.
  */
  public String getH13FLGMAS()
  {
    return fieldH13FLGMAS.getString();
  }

  /**
  * Set field H13FLGWK1 using a String value.
  */
  public void setH13FLGWK1(String newvalue)
  {
    fieldH13FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H13FLGWK1 as a String.
  */
  public String getH13FLGWK1()
  {
    return fieldH13FLGWK1.getString();
  }

  /**
  * Set field H13FLGWK2 using a String value.
  */
  public void setH13FLGWK2(String newvalue)
  {
    fieldH13FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H13FLGWK2 as a String.
  */
  public String getH13FLGWK2()
  {
    return fieldH13FLGWK2.getString();
  }

  /**
  * Set field H13FLGWK3 using a String value.
  */
  public void setH13FLGWK3(String newvalue)
  {
    fieldH13FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H13FLGWK3 as a String.
  */
  public String getH13FLGWK3()
  {
    return fieldH13FLGWK3.getString();
  }

  /**
  * Set field E13CNOCFL using a String value.
  */
  public void setE13CNOCFL(String newvalue)
  {
    fieldE13CNOCFL.setString(newvalue);
  }

  /**
  * Get value of field E13CNOCFL as a String.
  */
  public String getE13CNOCFL()
  {
    return fieldE13CNOCFL.getString();
  }

  /**
  * Set field E13CNORCD using a String value.
  */
  public void setE13CNORCD(String newvalue)
  {
    fieldE13CNORCD.setString(newvalue);
  }

  /**
  * Get value of field E13CNORCD as a String.
  */
  public String getE13CNORCD()
  {
    return fieldE13CNORCD.getString();
  }

  /**
  * Set field E13CNODSC using a String value.
  */
  public void setE13CNODSC(String newvalue)
  {
    fieldE13CNODSC.setString(newvalue);
  }

  /**
  * Get value of field E13CNODSC as a String.
  */
  public String getE13CNODSC()
  {
    return fieldE13CNODSC.getString();
  }

}
