package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFE000702 physical file definition.
* 
* File level identifier is 1090501170934.
* Record format level identifier is 44AC5D3FE5D78.
*/

public class EFE000702Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID", 
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01FEUUSR",
                                     "E01FEUCCY",
                                     "E01FEUPOR",
                                     "E01FEUUPT",
                                     "E01FEUUPU",
                                     "D01USRDSC",
                                     "D01CCYDSC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01FEUUSR",
                                   "E01FEUCCY",
                                   "E01FEUPOR",
                                   "E01FEUUPT",
                                   "E01FEUUPU",
                                   "D01USRDSC",
                                   "D01CCYDSC"
                                 };
  final static String fid = "1090501170934";
  final static String rid = "44AC5D3FE5D78";
  final static String fmtname = "EFE000702";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01FEUUSR = null;
  private CharacterField fieldE01FEUCCY = null;
  private DecimalField fieldE01FEUPOR = null;
  private DecimalField fieldE01FEUUPT = null;
  private CharacterField fieldE01FEUUPU = null;
  private CharacterField fieldD01USRDSC = null;
  private CharacterField fieldD01CCYDSC = null;

  /**
  * Constructor for EFE000702Message.
  */
  public EFE000702Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 139;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01FEUUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "E01FEUUSR");
    fields[10] = fieldE01FEUCCY =
    new CharacterField(message, HEADERSIZE + 52, 3, "E01FEUCCY");
    fields[11] = fieldE01FEUPOR =
    new DecimalField(message, HEADERSIZE + 55, 7, 2, "E01FEUPOR");
    fields[12] = fieldE01FEUUPT =
    new DecimalField(message, HEADERSIZE + 62, 7, 0, "E01FEUUPT");
    fields[13] = fieldE01FEUUPU =
    new CharacterField(message, HEADERSIZE + 69, 10, "E01FEUUPU");
    fields[14] = fieldD01USRDSC =
    new CharacterField(message, HEADERSIZE + 79, 30, "D01USRDSC");
    fields[15] = fieldD01CCYDSC =
    new CharacterField(message, HEADERSIZE + 109, 30, "D01CCYDSC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01FEUUSR using a String value.
  */
  public void setE01FEUUSR(String newvalue)
  {
    fieldE01FEUUSR.setString(newvalue);
  }

  /**
  * Get value of field E01FEUUSR as a String.
  */
  public String getE01FEUUSR()
  {
    return fieldE01FEUUSR.getString();
  }

  /**
  * Set field E01FEUCCY using a String value.
  */
  public void setE01FEUCCY(String newvalue)
  {
    fieldE01FEUCCY.setString(newvalue);
  }

  /**
  * Get value of field E01FEUCCY as a String.
  */
  public String getE01FEUCCY()
  {
    return fieldE01FEUCCY.getString();
  }

  /**
  * Set field E01FEUPOR using a String value.
  */
  public void setE01FEUPOR(String newvalue)
  {
    fieldE01FEUPOR.setString(newvalue);
  }

  /**
  * Get value of field E01FEUPOR as a String.
  */
  public String getE01FEUPOR()
  {
    return fieldE01FEUPOR.getString();
  }

  /**
  * Set numeric field E01FEUPOR using a BigDecimal value.
  */
  public void setE01FEUPOR(BigDecimal newvalue)
  {
    fieldE01FEUPOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEUPOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEUPOR()
  {
    return fieldE01FEUPOR.getBigDecimal();
  }

  /**
  * Set field E01FEUUPT using a String value.
  */
  public void setE01FEUUPT(String newvalue)
  {
    fieldE01FEUUPT.setString(newvalue);
  }

  /**
  * Get value of field E01FEUUPT as a String.
  */
  public String getE01FEUUPT()
  {
    return fieldE01FEUUPT.getString();
  }

  /**
  * Set numeric field E01FEUUPT using a BigDecimal value.
  */
  public void setE01FEUUPT(BigDecimal newvalue)
  {
    fieldE01FEUUPT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEUUPT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEUUPT()
  {
    return fieldE01FEUUPT.getBigDecimal();
  }

  /**
  * Set field E01FEUUPU using a String value.
  */
  public void setE01FEUUPU(String newvalue)
  {
    fieldE01FEUUPU.setString(newvalue);
  }

  /**
  * Get value of field E01FEUUPU as a String.
  */
  public String getE01FEUUPU()
  {
    return fieldE01FEUUPU.getString();
  }

  /**
  * Set field D01USRDSC using a String value.
  */
  public void setD01USRDSC(String newvalue)
  {
    fieldD01USRDSC.setString(newvalue);
  }

  /**
  * Get value of field D01USRDSC as a String.
  */
  public String getD01USRDSC()
  {
    return fieldD01USRDSC.getString();
  }

  /**
  * Set field D01CCYDSC using a String value.
  */
  public void setD01CCYDSC(String newvalue)
  {
    fieldD01CCYDSC.setString(newvalue);
  }

  /**
  * Get value of field D01CCYDSC as a String.
  */
  public String getD01CCYDSC()
  {
    return fieldD01CCYDSC.getString();
  }

}
