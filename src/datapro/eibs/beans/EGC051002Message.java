package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC051002 physical file definition.
* 
* File level identifier is 1030121191928.
* Record format level identifier is 43AD1960DC002.
*/

public class EGC051002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "H02CODACC",
                                     "E02GCRUT",
                                     "E02GCNMBC",
                                     "E02GCNOPR",
                                     "E02GCDMOR",
                                     "E02GCVECY",
                                     "E02GCVECM",
                                     "E02GCVECD",
                                     "E02GCSCAP",
                                     "E02GCTINT",
                                     "E02GCNCPG",
                                     "E02GCTOTC",
                                     "E02GCGMDA",
                                     "E02GCVLRV",
                                     "E02GCGPRD",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "H02CODACC",
                                   "E02GCRUT",
                                   "E02GCNMBC",
                                   "E02GCNOPR",
                                   "E02GCDMOR",
                                   "E02GCVECY",
                                   "E02GCVECM",
                                   "E02GCVECD",
                                   "E02GCSCAP",
                                   "E02GCTINT",
                                   "E02GCNCPG",
                                   "E02GCTOTC",
                                   "E02GCGMDA",
                                   "E02GCVLRV",
                                   "E02GCGPRD",
                                   "E02INDOPE"
                                 };
  final static String fid = "1030121191928";
  final static String rid = "43AD1960DC002";
  final static String fmtname = "EGC051002";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldH02CODACC = null;
  private CharacterField fieldE02GCRUT = null;
  private CharacterField fieldE02GCNMBC = null;
  private DecimalField fieldE02GCNOPR = null;
  private DecimalField fieldE02GCDMOR = null;
  private DecimalField fieldE02GCVECY = null;
  private DecimalField fieldE02GCVECM = null;
  private DecimalField fieldE02GCVECD = null;
  private DecimalField fieldE02GCSCAP = null;
  private DecimalField fieldE02GCTINT = null;
  private DecimalField fieldE02GCNCPG = null;
  private DecimalField fieldE02GCTOTC = null;
  private CharacterField fieldE02GCGMDA = null;
  private DecimalField fieldE02GCVLRV = null;
  private CharacterField fieldE02GCGPRD = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EGC051002Message.
  */
  public EGC051002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 194;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldH02CODACC =
    new CharacterField(message, HEADERSIZE + 42, 4, "H02CODACC");
    fields[10] = fieldE02GCRUT =
    new CharacterField(message, HEADERSIZE + 46, 15, "E02GCRUT");
    fields[11] = fieldE02GCNMBC =
    new CharacterField(message, HEADERSIZE + 61, 45, "E02GCNMBC");
    fields[12] = fieldE02GCNOPR =
    new DecimalField(message, HEADERSIZE + 106, 6, 0, "E02GCNOPR");
    fields[13] = fieldE02GCDMOR =
    new DecimalField(message, HEADERSIZE + 112, 6, 0, "E02GCDMOR");
    fields[14] = fieldE02GCVECY =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "E02GCVECY");
    fields[15] = fieldE02GCVECM =
    new DecimalField(message, HEADERSIZE + 121, 3, 0, "E02GCVECM");
    fields[16] = fieldE02GCVECD =
    new DecimalField(message, HEADERSIZE + 124, 3, 0, "E02GCVECD");
    fields[17] = fieldE02GCSCAP =
    new DecimalField(message, HEADERSIZE + 127, 17, 2, "E02GCSCAP");
    fields[18] = fieldE02GCTINT =
    new DecimalField(message, HEADERSIZE + 144, 13, 6, "E02GCTINT");
    fields[19] = fieldE02GCNCPG =
    new DecimalField(message, HEADERSIZE + 157, 6, 0, "E02GCNCPG");
    fields[20] = fieldE02GCTOTC =
    new DecimalField(message, HEADERSIZE + 163, 6, 0, "E02GCTOTC");
    fields[21] = fieldE02GCGMDA =
    new CharacterField(message, HEADERSIZE + 169, 3, "E02GCGMDA");
    fields[22] = fieldE02GCVLRV =
    new DecimalField(message, HEADERSIZE + 172, 17, 2, "E02GCVLRV");
    fields[23] = fieldE02GCGPRD =
    new CharacterField(message, HEADERSIZE + 189, 4, "E02GCGPRD");
    fields[24] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 193, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field H02CODACC using a String value.
  */
  public void setH02CODACC(String newvalue)
  {
    fieldH02CODACC.setString(newvalue);
  }

  /**
  * Get value of field H02CODACC as a String.
  */
  public String getH02CODACC()
  {
    return fieldH02CODACC.getString();
  }

  /**
  * Set field E02GCRUT using a String value.
  */
  public void setE02GCRUT(String newvalue)
  {
    fieldE02GCRUT.setString(newvalue);
  }

  /**
  * Get value of field E02GCRUT as a String.
  */
  public String getE02GCRUT()
  {
    return fieldE02GCRUT.getString();
  }

  /**
  * Set field E02GCNMBC using a String value.
  */
  public void setE02GCNMBC(String newvalue)
  {
    fieldE02GCNMBC.setString(newvalue);
  }

  /**
  * Get value of field E02GCNMBC as a String.
  */
  public String getE02GCNMBC()
  {
    return fieldE02GCNMBC.getString();
  }

  /**
  * Set field E02GCNOPR using a String value.
  */
  public void setE02GCNOPR(String newvalue)
  {
    fieldE02GCNOPR.setString(newvalue);
  }

  /**
  * Get value of field E02GCNOPR as a String.
  */
  public String getE02GCNOPR()
  {
    return fieldE02GCNOPR.getString();
  }

  /**
  * Set numeric field E02GCNOPR using a BigDecimal value.
  */
  public void setE02GCNOPR(BigDecimal newvalue)
  {
    fieldE02GCNOPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCNOPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCNOPR()
  {
    return fieldE02GCNOPR.getBigDecimal();
  }

  /**
  * Set field E02GCDMOR using a String value.
  */
  public void setE02GCDMOR(String newvalue)
  {
    fieldE02GCDMOR.setString(newvalue);
  }

  /**
  * Get value of field E02GCDMOR as a String.
  */
  public String getE02GCDMOR()
  {
    return fieldE02GCDMOR.getString();
  }

  /**
  * Set numeric field E02GCDMOR using a BigDecimal value.
  */
  public void setE02GCDMOR(BigDecimal newvalue)
  {
    fieldE02GCDMOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCDMOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCDMOR()
  {
    return fieldE02GCDMOR.getBigDecimal();
  }

  /**
  * Set field E02GCVECY using a String value.
  */
  public void setE02GCVECY(String newvalue)
  {
    fieldE02GCVECY.setString(newvalue);
  }

  /**
  * Get value of field E02GCVECY as a String.
  */
  public String getE02GCVECY()
  {
    return fieldE02GCVECY.getString();
  }

  /**
  * Set numeric field E02GCVECY using a BigDecimal value.
  */
  public void setE02GCVECY(BigDecimal newvalue)
  {
    fieldE02GCVECY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCVECY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCVECY()
  {
    return fieldE02GCVECY.getBigDecimal();
  }

  /**
  * Set field E02GCVECM using a String value.
  */
  public void setE02GCVECM(String newvalue)
  {
    fieldE02GCVECM.setString(newvalue);
  }

  /**
  * Get value of field E02GCVECM as a String.
  */
  public String getE02GCVECM()
  {
    return fieldE02GCVECM.getString();
  }

  /**
  * Set numeric field E02GCVECM using a BigDecimal value.
  */
  public void setE02GCVECM(BigDecimal newvalue)
  {
    fieldE02GCVECM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCVECM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCVECM()
  {
    return fieldE02GCVECM.getBigDecimal();
  }

  /**
  * Set field E02GCVECD using a String value.
  */
  public void setE02GCVECD(String newvalue)
  {
    fieldE02GCVECD.setString(newvalue);
  }

  /**
  * Get value of field E02GCVECD as a String.
  */
  public String getE02GCVECD()
  {
    return fieldE02GCVECD.getString();
  }

  /**
  * Set numeric field E02GCVECD using a BigDecimal value.
  */
  public void setE02GCVECD(BigDecimal newvalue)
  {
    fieldE02GCVECD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCVECD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCVECD()
  {
    return fieldE02GCVECD.getBigDecimal();
  }

  /**
  * Set field E02GCSCAP using a String value.
  */
  public void setE02GCSCAP(String newvalue)
  {
    fieldE02GCSCAP.setString(newvalue);
  }

  /**
  * Get value of field E02GCSCAP as a String.
  */
  public String getE02GCSCAP()
  {
    return fieldE02GCSCAP.getString();
  }

  /**
  * Set numeric field E02GCSCAP using a BigDecimal value.
  */
  public void setE02GCSCAP(BigDecimal newvalue)
  {
    fieldE02GCSCAP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCSCAP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCSCAP()
  {
    return fieldE02GCSCAP.getBigDecimal();
  }

  /**
  * Set field E02GCTINT using a String value.
  */
  public void setE02GCTINT(String newvalue)
  {
    fieldE02GCTINT.setString(newvalue);
  }

  /**
  * Get value of field E02GCTINT as a String.
  */
  public String getE02GCTINT()
  {
    return fieldE02GCTINT.getString();
  }

  /**
  * Set numeric field E02GCTINT using a BigDecimal value.
  */
  public void setE02GCTINT(BigDecimal newvalue)
  {
    fieldE02GCTINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCTINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCTINT()
  {
    return fieldE02GCTINT.getBigDecimal();
  }

  /**
  * Set field E02GCNCPG using a String value.
  */
  public void setE02GCNCPG(String newvalue)
  {
    fieldE02GCNCPG.setString(newvalue);
  }

  /**
  * Get value of field E02GCNCPG as a String.
  */
  public String getE02GCNCPG()
  {
    return fieldE02GCNCPG.getString();
  }

  /**
  * Set numeric field E02GCNCPG using a BigDecimal value.
  */
  public void setE02GCNCPG(BigDecimal newvalue)
  {
    fieldE02GCNCPG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCNCPG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCNCPG()
  {
    return fieldE02GCNCPG.getBigDecimal();
  }

  /**
  * Set field E02GCTOTC using a String value.
  */
  public void setE02GCTOTC(String newvalue)
  {
    fieldE02GCTOTC.setString(newvalue);
  }

  /**
  * Get value of field E02GCTOTC as a String.
  */
  public String getE02GCTOTC()
  {
    return fieldE02GCTOTC.getString();
  }

  /**
  * Set numeric field E02GCTOTC using a BigDecimal value.
  */
  public void setE02GCTOTC(BigDecimal newvalue)
  {
    fieldE02GCTOTC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCTOTC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCTOTC()
  {
    return fieldE02GCTOTC.getBigDecimal();
  }

  /**
  * Set field E02GCGMDA using a String value.
  */
  public void setE02GCGMDA(String newvalue)
  {
    fieldE02GCGMDA.setString(newvalue);
  }

  /**
  * Get value of field E02GCGMDA as a String.
  */
  public String getE02GCGMDA()
  {
    return fieldE02GCGMDA.getString();
  }

  /**
  * Set field E02GCVLRV using a String value.
  */
  public void setE02GCVLRV(String newvalue)
  {
    fieldE02GCVLRV.setString(newvalue);
  }

  /**
  * Get value of field E02GCVLRV as a String.
  */
  public String getE02GCVLRV()
  {
    return fieldE02GCVLRV.getString();
  }

  /**
  * Set numeric field E02GCVLRV using a BigDecimal value.
  */
  public void setE02GCVLRV(BigDecimal newvalue)
  {
    fieldE02GCVLRV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02GCVLRV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02GCVLRV()
  {
    return fieldE02GCVLRV.getBigDecimal();
  }

  /**
  * Set field E02GCGPRD using a String value.
  */
  public void setE02GCGPRD(String newvalue)
  {
    fieldE02GCGPRD.setString(newvalue);
  }

  /**
  * Get value of field E02GCGPRD as a String.
  */
  public String getE02GCGPRD()
  {
    return fieldE02GCGPRD.getString();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
