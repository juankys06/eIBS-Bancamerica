package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD000203 physical file definition.
* 
* File level identifier is 1060318140321.
* Record format level identifier is 4308B5518DC91.
*/

public class EWD000203Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "E03WDTBL",
                                     "E03WDSHN",
                                     "E03WDSHO",
                                     "E03WDCOD",
                                     "E03WDDSC",
                                     "E03WDSCG",
                                     "E03WDMID",
                                     "E03WDMIC",
                                     "E03WDF02",
                                     "E03WDREC",
                                     "E03WDOPE"
                                   };
  final static String tnames[] = {
                                   "E03WDTBL",
                                   "E03WDSHN",
                                   "E03WDSHO",
                                   "E03WDCOD",
                                   "E03WDDSC",
                                   "E03WDSCG",
                                   "E03WDMID",
                                   "E03WDMIC",
                                   "E03WDF02",
                                   "E03WDREC",
                                   "E03WDOPE"
                                 };
  final static String fid = "1060318140321";
  final static String rid = "4308B5518DC91";
  final static String fmtname = "EWD000203";
  final int FIELDCOUNT = 11;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldE03WDTBL = null;
  private CharacterField fieldE03WDSHN = null;
  private CharacterField fieldE03WDSHO = null;
  private CharacterField fieldE03WDCOD = null;
  private CharacterField fieldE03WDDSC = null;
  private DecimalField fieldE03WDSCG = null;
  private CharacterField fieldE03WDMID = null;
  private CharacterField fieldE03WDMIC = null;
  private CharacterField fieldE03WDF02 = null;
  private DecimalField fieldE03WDREC = null;
  private CharacterField fieldE03WDOPE = null;

  /**
  * Constructor for EWD000203Message.
  */
  public EWD000203Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 124;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldE03WDTBL =
    new CharacterField(message, HEADERSIZE + 0, 2, "E03WDTBL");
    fields[1] = fieldE03WDSHN =
    new CharacterField(message, HEADERSIZE + 2, 20, "E03WDSHN");
    fields[2] = fieldE03WDSHO =
    new CharacterField(message, HEADERSIZE + 22, 20, "E03WDSHO");
    fields[3] = fieldE03WDCOD =
    new CharacterField(message, HEADERSIZE + 42, 6, "E03WDCOD");
    fields[4] = fieldE03WDDSC =
    new CharacterField(message, HEADERSIZE + 48, 35, "E03WDDSC");
    fields[5] = fieldE03WDSCG =
    new DecimalField(message, HEADERSIZE + 83, 17, 0, "E03WDSCG");
    fields[6] = fieldE03WDMID =
    new CharacterField(message, HEADERSIZE + 100, 6, "E03WDMID");
    fields[7] = fieldE03WDMIC =
    new CharacterField(message, HEADERSIZE + 106, 6, "E03WDMIC");
    fields[8] = fieldE03WDF02 =
    new CharacterField(message, HEADERSIZE + 112, 3, "E03WDF02");
    fields[9] = fieldE03WDREC =
    new DecimalField(message, HEADERSIZE + 115, 8, 0, "E03WDREC");
    fields[10] = fieldE03WDOPE =
    new CharacterField(message, HEADERSIZE + 123, 1, "E03WDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field E03WDTBL using a String value.
  */
  public void setE03WDTBL(String newvalue)
  {
    fieldE03WDTBL.setString(newvalue);
  }

  /**
  * Get value of field E03WDTBL as a String.
  */
  public String getE03WDTBL()
  {
    return fieldE03WDTBL.getString();
  }

  /**
  * Set field E03WDSHN using a String value.
  */
  public void setE03WDSHN(String newvalue)
  {
    fieldE03WDSHN.setString(newvalue);
  }

  /**
  * Get value of field E03WDSHN as a String.
  */
  public String getE03WDSHN()
  {
    return fieldE03WDSHN.getString();
  }

  /**
  * Set field E03WDSHO using a String value.
  */
  public void setE03WDSHO(String newvalue)
  {
    fieldE03WDSHO.setString(newvalue);
  }

  /**
  * Get value of field E03WDSHO as a String.
  */
  public String getE03WDSHO()
  {
    return fieldE03WDSHO.getString();
  }

  /**
  * Set field E03WDCOD using a String value.
  */
  public void setE03WDCOD(String newvalue)
  {
    fieldE03WDCOD.setString(newvalue);
  }

  /**
  * Get value of field E03WDCOD as a String.
  */
  public String getE03WDCOD()
  {
    return fieldE03WDCOD.getString();
  }

  /**
  * Set field E03WDDSC using a String value.
  */
  public void setE03WDDSC(String newvalue)
  {
    fieldE03WDDSC.setString(newvalue);
  }

  /**
  * Get value of field E03WDDSC as a String.
  */
  public String getE03WDDSC()
  {
    return fieldE03WDDSC.getString();
  }

  /**
  * Set field E03WDSCG using a String value.
  */
  public void setE03WDSCG(String newvalue)
  {
    fieldE03WDSCG.setString(newvalue);
  }

  /**
  * Get value of field E03WDSCG as a String.
  */
  public String getE03WDSCG()
  {
    return fieldE03WDSCG.getString();
  }

  /**
  * Set numeric field E03WDSCG using a BigDecimal value.
  */
  public void setE03WDSCG(BigDecimal newvalue)
  {
    fieldE03WDSCG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03WDSCG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03WDSCG()
  {
    return fieldE03WDSCG.getBigDecimal();
  }

  /**
  * Set field E03WDMID using a String value.
  */
  public void setE03WDMID(String newvalue)
  {
    fieldE03WDMID.setString(newvalue);
  }

  /**
  * Get value of field E03WDMID as a String.
  */
  public String getE03WDMID()
  {
    return fieldE03WDMID.getString();
  }

  /**
  * Set field E03WDMIC using a String value.
  */
  public void setE03WDMIC(String newvalue)
  {
    fieldE03WDMIC.setString(newvalue);
  }

  /**
  * Get value of field E03WDMIC as a String.
  */
  public String getE03WDMIC()
  {
    return fieldE03WDMIC.getString();
  }

  /**
  * Set field E03WDF02 using a String value.
  */
  public void setE03WDF02(String newvalue)
  {
    fieldE03WDF02.setString(newvalue);
  }

  /**
  * Get value of field E03WDF02 as a String.
  */
  public String getE03WDF02()
  {
    return fieldE03WDF02.getString();
  }

  /**
  * Set field E03WDREC using a String value.
  */
  public void setE03WDREC(String newvalue)
  {
    fieldE03WDREC.setString(newvalue);
  }

  /**
  * Get value of field E03WDREC as a String.
  */
  public String getE03WDREC()
  {
    return fieldE03WDREC.getString();
  }

  /**
  * Set numeric field E03WDREC using a BigDecimal value.
  */
  public void setE03WDREC(BigDecimal newvalue)
  {
    fieldE03WDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03WDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03WDREC()
  {
    return fieldE03WDREC.getBigDecimal();
  }

  /**
  * Set field E03WDOPE using a String value.
  */
  public void setE03WDOPE(String newvalue)
  {
    fieldE03WDOPE.setString(newvalue);
  }

  /**
  * Get value of field E03WDOPE as a String.
  */
  public String getE03WDOPE()
  {
    return fieldE03WDOPE.getString();
  }

}
