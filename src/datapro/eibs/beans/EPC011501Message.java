package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPC011501 physical file definition.
* 
* File level identifier is 1080220203737.
* Record format level identifier is 4FD4326B00F52.
*/

public class EPC011501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PCSACC",
                                     "E01PCSCUN",
                                     "E01PCSSTS",
                                     "E01PCSLSC",
                                     "E01PCSLSM",
                                     "E01PCSLSD",
                                     "E01PCSLSY",
                                     "E01PCSLAC",
                                     "E01PCSLAM",
                                     "E01PCSLAD",
                                     "E01PCSLAY",
                                     "E01PCSUSR",
                                     "E01PCSUSA",
                                     "E01PCSPGM",
                                     "D01PCSSTS",
                                     "D01PCSCUN"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PCSACC",
                                   "E01PCSCUN",
                                   "E01PCSSTS",
                                   "E01PCSLSC",
                                   "E01PCSLSM",
                                   "E01PCSLSD",
                                   "E01PCSLSY",
                                   "E01PCSLAC",
                                   "E01PCSLAM",
                                   "E01PCSLAD",
                                   "E01PCSLAY",
                                   "E01PCSUSR",
                                   "E01PCSUSA",
                                   "E01PCSPGM",
                                   "D01PCSSTS",
                                   "D01PCSCUN"
                                 };
  final static String fid = "1080220203737";
  final static String rid = "4FD4326B00F52";
  final static String fmtname = "EPC011501";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PCSACC = null;
  private DecimalField fieldE01PCSCUN = null;
  private CharacterField fieldE01PCSSTS = null;
  private DecimalField fieldE01PCSLSC = null;
  private DecimalField fieldE01PCSLSM = null;
  private DecimalField fieldE01PCSLSD = null;
  private DecimalField fieldE01PCSLSY = null;
  private DecimalField fieldE01PCSLAC = null;
  private DecimalField fieldE01PCSLAM = null;
  private DecimalField fieldE01PCSLAD = null;
  private DecimalField fieldE01PCSLAY = null;
  private CharacterField fieldE01PCSUSR = null;
  private CharacterField fieldE01PCSUSA = null;
  private CharacterField fieldE01PCSPGM = null;
  private CharacterField fieldD01PCSSTS = null;
  private CharacterField fieldD01PCSCUN = null;

  /**
  * Constructor for EPC011501Message.
  */
  public EPC011501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 199;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PCSACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01PCSACC");
    fields[10] = fieldE01PCSCUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E01PCSCUN");
    fields[11] = fieldE01PCSSTS =
    new CharacterField(message, HEADERSIZE + 65, 2, "E01PCSSTS");
    fields[12] = fieldE01PCSLSC =
    new DecimalField(message, HEADERSIZE + 67, 2, 0, "E01PCSLSC");
    fields[13] = fieldE01PCSLSM =
    new DecimalField(message, HEADERSIZE + 69, 3, 0, "E01PCSLSM");
    fields[14] = fieldE01PCSLSD =
    new DecimalField(message, HEADERSIZE + 72, 3, 0, "E01PCSLSD");
    fields[15] = fieldE01PCSLSY =
    new DecimalField(message, HEADERSIZE + 75, 3, 0, "E01PCSLSY");
    fields[16] = fieldE01PCSLAC =
    new DecimalField(message, HEADERSIZE + 78, 2, 0, "E01PCSLAC");
    fields[17] = fieldE01PCSLAM =
    new DecimalField(message, HEADERSIZE + 80, 3, 0, "E01PCSLAM");
    fields[18] = fieldE01PCSLAD =
    new DecimalField(message, HEADERSIZE + 83, 3, 0, "E01PCSLAD");
    fields[19] = fieldE01PCSLAY =
    new DecimalField(message, HEADERSIZE + 86, 3, 0, "E01PCSLAY");
    fields[20] = fieldE01PCSUSR =
    new CharacterField(message, HEADERSIZE + 89, 10, "E01PCSUSR");
    fields[21] = fieldE01PCSUSA =
    new CharacterField(message, HEADERSIZE + 99, 10, "E01PCSUSA");
    fields[22] = fieldE01PCSPGM =
    new CharacterField(message, HEADERSIZE + 109, 10, "E01PCSPGM");
    fields[23] = fieldD01PCSSTS =
    new CharacterField(message, HEADERSIZE + 119, 35, "D01PCSSTS");
    fields[24] = fieldD01PCSCUN =
    new CharacterField(message, HEADERSIZE + 154, 45, "D01PCSCUN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PCSACC using a String value.
  */
  public void setE01PCSACC(String newvalue)
  {
    fieldE01PCSACC.setString(newvalue);
  }

  /**
  * Get value of field E01PCSACC as a String.
  */
  public String getE01PCSACC()
  {
    return fieldE01PCSACC.getString();
  }

  /**
  * Set numeric field E01PCSACC using a BigDecimal value.
  */
  public void setE01PCSACC(BigDecimal newvalue)
  {
    fieldE01PCSACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSACC()
  {
    return fieldE01PCSACC.getBigDecimal();
  }

  /**
  * Set field E01PCSCUN using a String value.
  */
  public void setE01PCSCUN(String newvalue)
  {
    fieldE01PCSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PCSCUN as a String.
  */
  public String getE01PCSCUN()
  {
    return fieldE01PCSCUN.getString();
  }

  /**
  * Set numeric field E01PCSCUN using a BigDecimal value.
  */
  public void setE01PCSCUN(BigDecimal newvalue)
  {
    fieldE01PCSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSCUN()
  {
    return fieldE01PCSCUN.getBigDecimal();
  }

  /**
  * Set field E01PCSSTS using a String value.
  */
  public void setE01PCSSTS(String newvalue)
  {
    fieldE01PCSSTS.setString(newvalue);
  }

  /**
  * Get value of field E01PCSSTS as a String.
  */
  public String getE01PCSSTS()
  {
    return fieldE01PCSSTS.getString();
  }

  /**
  * Set field E01PCSLSC using a String value.
  */
  public void setE01PCSLSC(String newvalue)
  {
    fieldE01PCSLSC.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLSC as a String.
  */
  public String getE01PCSLSC()
  {
    return fieldE01PCSLSC.getString();
  }

  /**
  * Set numeric field E01PCSLSC using a BigDecimal value.
  */
  public void setE01PCSLSC(BigDecimal newvalue)
  {
    fieldE01PCSLSC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLSC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLSC()
  {
    return fieldE01PCSLSC.getBigDecimal();
  }

  /**
  * Set field E01PCSLSM using a String value.
  */
  public void setE01PCSLSM(String newvalue)
  {
    fieldE01PCSLSM.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLSM as a String.
  */
  public String getE01PCSLSM()
  {
    return fieldE01PCSLSM.getString();
  }

  /**
  * Set numeric field E01PCSLSM using a BigDecimal value.
  */
  public void setE01PCSLSM(BigDecimal newvalue)
  {
    fieldE01PCSLSM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLSM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLSM()
  {
    return fieldE01PCSLSM.getBigDecimal();
  }

  /**
  * Set field E01PCSLSD using a String value.
  */
  public void setE01PCSLSD(String newvalue)
  {
    fieldE01PCSLSD.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLSD as a String.
  */
  public String getE01PCSLSD()
  {
    return fieldE01PCSLSD.getString();
  }

  /**
  * Set numeric field E01PCSLSD using a BigDecimal value.
  */
  public void setE01PCSLSD(BigDecimal newvalue)
  {
    fieldE01PCSLSD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLSD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLSD()
  {
    return fieldE01PCSLSD.getBigDecimal();
  }

  /**
  * Set field E01PCSLSY using a String value.
  */
  public void setE01PCSLSY(String newvalue)
  {
    fieldE01PCSLSY.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLSY as a String.
  */
  public String getE01PCSLSY()
  {
    return fieldE01PCSLSY.getString();
  }

  /**
  * Set numeric field E01PCSLSY using a BigDecimal value.
  */
  public void setE01PCSLSY(BigDecimal newvalue)
  {
    fieldE01PCSLSY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLSY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLSY()
  {
    return fieldE01PCSLSY.getBigDecimal();
  }

  /**
  * Set field E01PCSLAC using a String value.
  */
  public void setE01PCSLAC(String newvalue)
  {
    fieldE01PCSLAC.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLAC as a String.
  */
  public String getE01PCSLAC()
  {
    return fieldE01PCSLAC.getString();
  }

  /**
  * Set numeric field E01PCSLAC using a BigDecimal value.
  */
  public void setE01PCSLAC(BigDecimal newvalue)
  {
    fieldE01PCSLAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLAC()
  {
    return fieldE01PCSLAC.getBigDecimal();
  }

  /**
  * Set field E01PCSLAM using a String value.
  */
  public void setE01PCSLAM(String newvalue)
  {
    fieldE01PCSLAM.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLAM as a String.
  */
  public String getE01PCSLAM()
  {
    return fieldE01PCSLAM.getString();
  }

  /**
  * Set numeric field E01PCSLAM using a BigDecimal value.
  */
  public void setE01PCSLAM(BigDecimal newvalue)
  {
    fieldE01PCSLAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLAM()
  {
    return fieldE01PCSLAM.getBigDecimal();
  }

  /**
  * Set field E01PCSLAD using a String value.
  */
  public void setE01PCSLAD(String newvalue)
  {
    fieldE01PCSLAD.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLAD as a String.
  */
  public String getE01PCSLAD()
  {
    return fieldE01PCSLAD.getString();
  }

  /**
  * Set numeric field E01PCSLAD using a BigDecimal value.
  */
  public void setE01PCSLAD(BigDecimal newvalue)
  {
    fieldE01PCSLAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLAD()
  {
    return fieldE01PCSLAD.getBigDecimal();
  }

  /**
  * Set field E01PCSLAY using a String value.
  */
  public void setE01PCSLAY(String newvalue)
  {
    fieldE01PCSLAY.setString(newvalue);
  }

  /**
  * Get value of field E01PCSLAY as a String.
  */
  public String getE01PCSLAY()
  {
    return fieldE01PCSLAY.getString();
  }

  /**
  * Set numeric field E01PCSLAY using a BigDecimal value.
  */
  public void setE01PCSLAY(BigDecimal newvalue)
  {
    fieldE01PCSLAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCSLAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCSLAY()
  {
    return fieldE01PCSLAY.getBigDecimal();
  }

  /**
  * Set field E01PCSUSR using a String value.
  */
  public void setE01PCSUSR(String newvalue)
  {
    fieldE01PCSUSR.setString(newvalue);
  }

  /**
  * Get value of field E01PCSUSR as a String.
  */
  public String getE01PCSUSR()
  {
    return fieldE01PCSUSR.getString();
  }

  /**
  * Set field E01PCSUSA using a String value.
  */
  public void setE01PCSUSA(String newvalue)
  {
    fieldE01PCSUSA.setString(newvalue);
  }

  /**
  * Get value of field E01PCSUSA as a String.
  */
  public String getE01PCSUSA()
  {
    return fieldE01PCSUSA.getString();
  }

  /**
  * Set field E01PCSPGM using a String value.
  */
  public void setE01PCSPGM(String newvalue)
  {
    fieldE01PCSPGM.setString(newvalue);
  }

  /**
  * Get value of field E01PCSPGM as a String.
  */
  public String getE01PCSPGM()
  {
    return fieldE01PCSPGM.getString();
  }

  /**
  * Set field D01PCSSTS using a String value.
  */
  public void setD01PCSSTS(String newvalue)
  {
    fieldD01PCSSTS.setString(newvalue);
  }

  /**
  * Get value of field D01PCSSTS as a String.
  */
  public String getD01PCSSTS()
  {
    return fieldD01PCSSTS.getString();
  }

  /**
  * Set field D01PCSCUN using a String value.
  */
  public void setD01PCSCUN(String newvalue)
  {
    fieldD01PCSCUN.setString(newvalue);
  }

  /**
  * Get value of field D01PCSCUN as a String.
  */
  public String getD01PCSCUN()
  {
    return fieldD01PCSCUN.getString();
  }

}
