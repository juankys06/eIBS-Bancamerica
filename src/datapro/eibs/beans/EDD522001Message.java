package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD522001 physical file definition.
* 
* File level identifier is 1060427112801.
* Record format level identifier is 486ACDCED7B43.
*/

public class EDD522001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CFMACC",
                                     "E01CFMCUN",
                                     "E01CFMNUM",
                                     "E01CFMTTP",
                                     "E01CFMBRN",
                                     "E01CFMCCY",
                                     "E01CFMGLN",
                                     "E01CFMCRE",
                                     "E01CFMVAL",
                                     "E01CFMFRE",
                                     "E01CFMFPD",
                                     "E01CFMFPM",
                                     "E01CFMFPA",
                                     "E01CFMUC1",
                                     "E01CFMUC2",
                                     "E01CFMATP",
                                     "E01CFMIVA",
                                     "E01CFMFI1",
                                     "E01DESCAR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CFMACC",
                                   "E01CFMCUN",
                                   "E01CFMNUM",
                                   "E01CFMTTP",
                                   "E01CFMBRN",
                                   "E01CFMCCY",
                                   "E01CFMGLN",
                                   "E01CFMCRE",
                                   "E01CFMVAL",
                                   "E01CFMFRE",
                                   "E01CFMFPD",
                                   "E01CFMFPM",
                                   "E01CFMFPA",
                                   "E01CFMUC1",
                                   "E01CFMUC2",
                                   "E01CFMATP",
                                   "E01CFMIVA",
                                   "E01CFMFI1",
                                   "E01DESCAR"
                                 };
  final static String fid = "1060427112801";
  final static String rid = "486ACDCED7B43";
  final static String fmtname = "EDD522001";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CFMACC = null;
  private DecimalField fieldE01CFMCUN = null;
  private CharacterField fieldE01CFMNUM = null;
  private CharacterField fieldE01CFMTTP = null;
  private DecimalField fieldE01CFMBRN = null;
  private CharacterField fieldE01CFMCCY = null;
  private DecimalField fieldE01CFMGLN = null;
  private DecimalField fieldE01CFMCRE = null;
  private DecimalField fieldE01CFMVAL = null;
  private CharacterField fieldE01CFMFRE = null;
  private DecimalField fieldE01CFMFPD = null;
  private DecimalField fieldE01CFMFPM = null;
  private DecimalField fieldE01CFMFPA = null;
  private CharacterField fieldE01CFMUC1 = null;
  private CharacterField fieldE01CFMUC2 = null;
  private CharacterField fieldE01CFMATP = null;
  private CharacterField fieldE01CFMIVA = null;
  private CharacterField fieldE01CFMFI1 = null;
  private CharacterField fieldE01DESCAR = null;

  /**
  * Constructor for EDD522001Message.
  */
  public EDD522001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 189;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CFMACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01CFMACC");
    fields[10] = fieldE01CFMCUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E01CFMCUN");
    fields[11] = fieldE01CFMNUM =
    new CharacterField(message, HEADERSIZE + 65, 9, "E01CFMNUM");
    fields[12] = fieldE01CFMTTP =
    new CharacterField(message, HEADERSIZE + 74, 4, "E01CFMTTP");
    fields[13] = fieldE01CFMBRN =
    new DecimalField(message, HEADERSIZE + 78, 4, 0, "E01CFMBRN");
    fields[14] = fieldE01CFMCCY =
    new CharacterField(message, HEADERSIZE + 82, 3, "E01CFMCCY");
    fields[15] = fieldE01CFMGLN =
    new DecimalField(message, HEADERSIZE + 85, 17, 0, "E01CFMGLN");
    fields[16] = fieldE01CFMCRE =
    new DecimalField(message, HEADERSIZE + 102, 13, 0, "E01CFMCRE");
    fields[17] = fieldE01CFMVAL =
    new DecimalField(message, HEADERSIZE + 115, 17, 2, "E01CFMVAL");
    fields[18] = fieldE01CFMFRE =
    new CharacterField(message, HEADERSIZE + 132, 1, "E01CFMFRE");
    fields[19] = fieldE01CFMFPD =
    new DecimalField(message, HEADERSIZE + 133, 3, 0, "E01CFMFPD");
    fields[20] = fieldE01CFMFPM =
    new DecimalField(message, HEADERSIZE + 136, 3, 0, "E01CFMFPM");
    fields[21] = fieldE01CFMFPA =
    new DecimalField(message, HEADERSIZE + 139, 3, 0, "E01CFMFPA");
    fields[22] = fieldE01CFMUC1 =
    new CharacterField(message, HEADERSIZE + 142, 4, "E01CFMUC1");
    fields[23] = fieldE01CFMUC2 =
    new CharacterField(message, HEADERSIZE + 146, 4, "E01CFMUC2");
    fields[24] = fieldE01CFMATP =
    new CharacterField(message, HEADERSIZE + 150, 1, "E01CFMATP");
    fields[25] = fieldE01CFMIVA =
    new CharacterField(message, HEADERSIZE + 151, 1, "E01CFMIVA");
    fields[26] = fieldE01CFMFI1 =
    new CharacterField(message, HEADERSIZE + 152, 2, "E01CFMFI1");
    fields[27] = fieldE01DESCAR =
    new CharacterField(message, HEADERSIZE + 154, 35, "E01DESCAR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CFMACC using a String value.
  */
  public void setE01CFMACC(String newvalue)
  {
    fieldE01CFMACC.setString(newvalue);
  }

  /**
  * Get value of field E01CFMACC as a String.
  */
  public String getE01CFMACC()
  {
    return fieldE01CFMACC.getString();
  }

  /**
  * Set numeric field E01CFMACC using a BigDecimal value.
  */
  public void setE01CFMACC(BigDecimal newvalue)
  {
    fieldE01CFMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMACC()
  {
    return fieldE01CFMACC.getBigDecimal();
  }

  /**
  * Set field E01CFMCUN using a String value.
  */
  public void setE01CFMCUN(String newvalue)
  {
    fieldE01CFMCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CFMCUN as a String.
  */
  public String getE01CFMCUN()
  {
    return fieldE01CFMCUN.getString();
  }

  /**
  * Set numeric field E01CFMCUN using a BigDecimal value.
  */
  public void setE01CFMCUN(BigDecimal newvalue)
  {
    fieldE01CFMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMCUN()
  {
    return fieldE01CFMCUN.getBigDecimal();
  }

  /**
  * Set field E01CFMNUM using a String value.
  */
  public void setE01CFMNUM(String newvalue)
  {
    fieldE01CFMNUM.setString(newvalue);
  }

  /**
  * Get value of field E01CFMNUM as a String.
  */
  public String getE01CFMNUM()
  {
    return fieldE01CFMNUM.getString();
  }

  /**
  * Set field E01CFMTTP using a String value.
  */
  public void setE01CFMTTP(String newvalue)
  {
    fieldE01CFMTTP.setString(newvalue);
  }

  /**
  * Get value of field E01CFMTTP as a String.
  */
  public String getE01CFMTTP()
  {
    return fieldE01CFMTTP.getString();
  }

  /**
  * Set field E01CFMBRN using a String value.
  */
  public void setE01CFMBRN(String newvalue)
  {
    fieldE01CFMBRN.setString(newvalue);
  }

  /**
  * Get value of field E01CFMBRN as a String.
  */
  public String getE01CFMBRN()
  {
    return fieldE01CFMBRN.getString();
  }

  /**
  * Set numeric field E01CFMBRN using a BigDecimal value.
  */
  public void setE01CFMBRN(BigDecimal newvalue)
  {
    fieldE01CFMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMBRN()
  {
    return fieldE01CFMBRN.getBigDecimal();
  }

  /**
  * Set field E01CFMCCY using a String value.
  */
  public void setE01CFMCCY(String newvalue)
  {
    fieldE01CFMCCY.setString(newvalue);
  }

  /**
  * Get value of field E01CFMCCY as a String.
  */
  public String getE01CFMCCY()
  {
    return fieldE01CFMCCY.getString();
  }

  /**
  * Set field E01CFMGLN using a String value.
  */
  public void setE01CFMGLN(String newvalue)
  {
    fieldE01CFMGLN.setString(newvalue);
  }

  /**
  * Get value of field E01CFMGLN as a String.
  */
  public String getE01CFMGLN()
  {
    return fieldE01CFMGLN.getString();
  }

  /**
  * Set numeric field E01CFMGLN using a BigDecimal value.
  */
  public void setE01CFMGLN(BigDecimal newvalue)
  {
    fieldE01CFMGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMGLN()
  {
    return fieldE01CFMGLN.getBigDecimal();
  }

  /**
  * Set field E01CFMCRE using a String value.
  */
  public void setE01CFMCRE(String newvalue)
  {
    fieldE01CFMCRE.setString(newvalue);
  }

  /**
  * Get value of field E01CFMCRE as a String.
  */
  public String getE01CFMCRE()
  {
    return fieldE01CFMCRE.getString();
  }

  /**
  * Set numeric field E01CFMCRE using a BigDecimal value.
  */
  public void setE01CFMCRE(BigDecimal newvalue)
  {
    fieldE01CFMCRE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMCRE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMCRE()
  {
    return fieldE01CFMCRE.getBigDecimal();
  }

  /**
  * Set field E01CFMVAL using a String value.
  */
  public void setE01CFMVAL(String newvalue)
  {
    fieldE01CFMVAL.setString(newvalue);
  }

  /**
  * Get value of field E01CFMVAL as a String.
  */
  public String getE01CFMVAL()
  {
    return fieldE01CFMVAL.getString();
  }

  /**
  * Set numeric field E01CFMVAL using a BigDecimal value.
  */
  public void setE01CFMVAL(BigDecimal newvalue)
  {
    fieldE01CFMVAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMVAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMVAL()
  {
    return fieldE01CFMVAL.getBigDecimal();
  }

  /**
  * Set field E01CFMFRE using a String value.
  */
  public void setE01CFMFRE(String newvalue)
  {
    fieldE01CFMFRE.setString(newvalue);
  }

  /**
  * Get value of field E01CFMFRE as a String.
  */
  public String getE01CFMFRE()
  {
    return fieldE01CFMFRE.getString();
  }

  /**
  * Set field E01CFMFPD using a String value.
  */
  public void setE01CFMFPD(String newvalue)
  {
    fieldE01CFMFPD.setString(newvalue);
  }

  /**
  * Get value of field E01CFMFPD as a String.
  */
  public String getE01CFMFPD()
  {
    return fieldE01CFMFPD.getString();
  }

  /**
  * Set numeric field E01CFMFPD using a BigDecimal value.
  */
  public void setE01CFMFPD(BigDecimal newvalue)
  {
    fieldE01CFMFPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMFPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMFPD()
  {
    return fieldE01CFMFPD.getBigDecimal();
  }

  /**
  * Set field E01CFMFPM using a String value.
  */
  public void setE01CFMFPM(String newvalue)
  {
    fieldE01CFMFPM.setString(newvalue);
  }

  /**
  * Get value of field E01CFMFPM as a String.
  */
  public String getE01CFMFPM()
  {
    return fieldE01CFMFPM.getString();
  }

  /**
  * Set numeric field E01CFMFPM using a BigDecimal value.
  */
  public void setE01CFMFPM(BigDecimal newvalue)
  {
    fieldE01CFMFPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMFPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMFPM()
  {
    return fieldE01CFMFPM.getBigDecimal();
  }

  /**
  * Set field E01CFMFPA using a String value.
  */
  public void setE01CFMFPA(String newvalue)
  {
    fieldE01CFMFPA.setString(newvalue);
  }

  /**
  * Get value of field E01CFMFPA as a String.
  */
  public String getE01CFMFPA()
  {
    return fieldE01CFMFPA.getString();
  }

  /**
  * Set numeric field E01CFMFPA using a BigDecimal value.
  */
  public void setE01CFMFPA(BigDecimal newvalue)
  {
    fieldE01CFMFPA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CFMFPA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CFMFPA()
  {
    return fieldE01CFMFPA.getBigDecimal();
  }

  /**
  * Set field E01CFMUC1 using a String value.
  */
  public void setE01CFMUC1(String newvalue)
  {
    fieldE01CFMUC1.setString(newvalue);
  }

  /**
  * Get value of field E01CFMUC1 as a String.
  */
  public String getE01CFMUC1()
  {
    return fieldE01CFMUC1.getString();
  }

  /**
  * Set field E01CFMUC2 using a String value.
  */
  public void setE01CFMUC2(String newvalue)
  {
    fieldE01CFMUC2.setString(newvalue);
  }

  /**
  * Get value of field E01CFMUC2 as a String.
  */
  public String getE01CFMUC2()
  {
    return fieldE01CFMUC2.getString();
  }

  /**
  * Set field E01CFMATP using a String value.
  */
  public void setE01CFMATP(String newvalue)
  {
    fieldE01CFMATP.setString(newvalue);
  }

  /**
  * Get value of field E01CFMATP as a String.
  */
  public String getE01CFMATP()
  {
    return fieldE01CFMATP.getString();
  }

  /**
  * Set field E01CFMIVA using a String value.
  */
  public void setE01CFMIVA(String newvalue)
  {
    fieldE01CFMIVA.setString(newvalue);
  }

  /**
  * Get value of field E01CFMIVA as a String.
  */
  public String getE01CFMIVA()
  {
    return fieldE01CFMIVA.getString();
  }

  /**
  * Set field E01CFMFI1 using a String value.
  */
  public void setE01CFMFI1(String newvalue)
  {
    fieldE01CFMFI1.setString(newvalue);
  }

  /**
  * Get value of field E01CFMFI1 as a String.
  */
  public String getE01CFMFI1()
  {
    return fieldE01CFMFI1.getString();
  }

  /**
  * Set field E01DESCAR using a String value.
  */
  public void setE01DESCAR(String newvalue)
  {
    fieldE01DESCAR.setString(newvalue);
  }

  /**
  * Get value of field E01DESCAR as a String.
  */
  public String getE01DESCAR()
  {
    return fieldE01DESCAR.getString();
  }

}
