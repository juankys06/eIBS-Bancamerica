package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0150DS physical file definition.
* 
* File level identifier is 1030121192029.
* Record format level identifier is 4A6860724204B.
*/

public class EWD0150DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSBK",
                                     "EWDSPF",
                                     "EWDCDE",
                                     "EWDTYP",
                                     "EWDACD",
                                     "EWDBNK",
                                     "EWDCCY",
                                     "EWDGLN",
                                     "EWDDSC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSBK",
                                   "EWDSPF",
                                   "EWDCDE",
                                   "EWDTYP",
                                   "EWDACD",
                                   "EWDBNK",
                                   "EWDCCY",
                                   "EWDGLN",
                                   "EWDDSC",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192029";
  final static String rid = "4A6860724204B";
  final static String fmtname = "EWD0150DS";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSBK = null;
  private CharacterField fieldEWDSPF = null;
  private CharacterField fieldEWDCDE = null;
  private CharacterField fieldEWDTYP = null;
  private CharacterField fieldEWDACD = null;
  private CharacterField fieldEWDBNK = null;
  private CharacterField fieldEWDCCY = null;
  private DecimalField fieldEWDGLN = null;
  private CharacterField fieldEWDDSC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0150DSMessage.
  */
  public EWD0150DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 74;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSBK =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDSBK");
    fields[1] = fieldEWDSPF =
    new CharacterField(message, HEADERSIZE + 2, 4, "EWDSPF");
    fields[2] = fieldEWDCDE =
    new CharacterField(message, HEADERSIZE + 6, 4, "EWDCDE");
    fields[3] = fieldEWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 4, "EWDTYP");
    fields[4] = fieldEWDACD =
    new CharacterField(message, HEADERSIZE + 14, 2, "EWDACD");
    fields[5] = fieldEWDBNK =
    new CharacterField(message, HEADERSIZE + 16, 2, "EWDBNK");
    fields[6] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 18, 3, "EWDCCY");
    fields[7] = fieldEWDGLN =
    new DecimalField(message, HEADERSIZE + 21, 17, 0, "EWDGLN");
    fields[8] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 38, 35, "EWDDSC");
    fields[9] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 73, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSBK using a String value.
  */
  public void setEWDSBK(String newvalue)
  {
    fieldEWDSBK.setString(newvalue);
  }

  /**
  * Get value of field EWDSBK as a String.
  */
  public String getEWDSBK()
  {
    return fieldEWDSBK.getString();
  }

  /**
  * Set field EWDSPF using a String value.
  */
  public void setEWDSPF(String newvalue)
  {
    fieldEWDSPF.setString(newvalue);
  }

  /**
  * Get value of field EWDSPF as a String.
  */
  public String getEWDSPF()
  {
    return fieldEWDSPF.getString();
  }

  /**
  * Set field EWDCDE using a String value.
  */
  public void setEWDCDE(String newvalue)
  {
    fieldEWDCDE.setString(newvalue);
  }

  /**
  * Get value of field EWDCDE as a String.
  */
  public String getEWDCDE()
  {
    return fieldEWDCDE.getString();
  }

  /**
  * Set field EWDTYP using a String value.
  */
  public void setEWDTYP(String newvalue)
  {
    fieldEWDTYP.setString(newvalue);
  }

  /**
  * Get value of field EWDTYP as a String.
  */
  public String getEWDTYP()
  {
    return fieldEWDTYP.getString();
  }

  /**
  * Set field EWDACD using a String value.
  */
  public void setEWDACD(String newvalue)
  {
    fieldEWDACD.setString(newvalue);
  }

  /**
  * Get value of field EWDACD as a String.
  */
  public String getEWDACD()
  {
    return fieldEWDACD.getString();
  }

  /**
  * Set field EWDBNK using a String value.
  */
  public void setEWDBNK(String newvalue)
  {
    fieldEWDBNK.setString(newvalue);
  }

  /**
  * Get value of field EWDBNK as a String.
  */
  public String getEWDBNK()
  {
    return fieldEWDBNK.getString();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDGLN using a String value.
  */
  public void setEWDGLN(String newvalue)
  {
    fieldEWDGLN.setString(newvalue);
  }

  /**
  * Get value of field EWDGLN as a String.
  */
  public String getEWDGLN()
  {
    return fieldEWDGLN.getString();
  }

  /**
  * Set numeric field EWDGLN using a BigDecimal value.
  */
  public void setEWDGLN(BigDecimal newvalue)
  {
    fieldEWDGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDGLN()
  {
    return fieldEWDGLN.getBigDecimal();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
