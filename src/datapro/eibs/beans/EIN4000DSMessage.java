package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EIN4000DS physical file definition.
* 
* File level identifier is 1030127174648.
* Record format level identifier is 2CAC2BA00E055.
*/

public class EIN4000DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "IN4USERID",
                                     "IN4BNK",
                                     "IN4BRN",
                                     "IN4CCY",
                                     "IN4ACC",
                                     "IN4TYP",
                                     "IN4CLS",
                                     "IN4BAS",
                                     "IN4CUN",
                                     "IN4PRI",
                                     "IN4INT",
                                     "IN4SCY",
                                     "IN4SPR",
                                     "IN4RTE",
                                     "IN4TRD",
                                     "IN4VLD",
                                     "IN4MTD",
                                     "IN4NXD",
                                     "IN4SRF",
                                     "IN4THF",
                                     "IN4WSI",
                                     "IN4FMT",
                                     "IN4PRG",
                                     "IN4PRC",
                                     "IN4FLG"
                                   };
  final static String tnames[] = {
                                   "IN4USERID",
                                   "IN4BNK",
                                   "IN4BRN",
                                   "IN4CCY",
                                   "IN4ACC",
                                   "IN4TYP",
                                   "IN4CLS",
                                   "IN4BAS",
                                   "IN4CUN",
                                   "IN4PRI",
                                   "IN4INT",
                                   "IN4SCY",
                                   "IN4SPR",
                                   "IN4RTE",
                                   "IN4TRD",
                                   "IN4VLD",
                                   "IN4MTD",
                                   "IN4NXD",
                                   "IN4SRF",
                                   "IN4THF",
                                   "IN4WSI",
                                   "IN4FMT",
                                   "IN4PRG",
                                   "IN4PRC",
                                   "IN4FLG"
                                 };
  final static String fid = "1030127174648";
  final static String rid = "2CAC2BA00E055";
  final static String fmtname = "EIN4000DS";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldIN4USERID = null;
  private CharacterField fieldIN4BNK = null;
  private DecimalField fieldIN4BRN = null;
  private CharacterField fieldIN4CCY = null;
  private DecimalField fieldIN4ACC = null;
  private CharacterField fieldIN4TYP = null;
  private CharacterField fieldIN4CLS = null;
  private DecimalField fieldIN4BAS = null;
  private DecimalField fieldIN4CUN = null;
  private DecimalField fieldIN4PRI = null;
  private DecimalField fieldIN4INT = null;
  private CharacterField fieldIN4SCY = null;
  private DecimalField fieldIN4SPR = null;
  private DecimalField fieldIN4RTE = null;
  private DecimalField fieldIN4TRD = null;
  private DecimalField fieldIN4VLD = null;
  private DecimalField fieldIN4MTD = null;
  private DecimalField fieldIN4NXD = null;
  private CharacterField fieldIN4SRF = null;
  private CharacterField fieldIN4THF = null;
  private CharacterField fieldIN4WSI = null;
  private CharacterField fieldIN4FMT = null;
  private CharacterField fieldIN4PRG = null;
  private CharacterField fieldIN4PRC = null;
  private CharacterField fieldIN4FLG = null;

  /**
  * Constructor for EIN4000DSMessage.
  */
  public EIN4000DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 219;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldIN4USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "IN4USERID");
    fields[1] = fieldIN4BNK =
    new CharacterField(message, HEADERSIZE + 10, 2, "IN4BNK");
    fields[2] = fieldIN4BRN =
    new DecimalField(message, HEADERSIZE + 12, 4, 0, "IN4BRN");
    fields[3] = fieldIN4CCY =
    new CharacterField(message, HEADERSIZE + 16, 3, "IN4CCY");
    fields[4] = fieldIN4ACC =
    new DecimalField(message, HEADERSIZE + 19, 13, 0, "IN4ACC");
    fields[5] = fieldIN4TYP =
    new CharacterField(message, HEADERSIZE + 32, 4, "IN4TYP");
    fields[6] = fieldIN4CLS =
    new CharacterField(message, HEADERSIZE + 36, 2, "IN4CLS");
    fields[7] = fieldIN4BAS =
    new DecimalField(message, HEADERSIZE + 38, 4, 0, "IN4BAS");
    fields[8] = fieldIN4CUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "IN4CUN");
    fields[9] = fieldIN4PRI =
    new DecimalField(message, HEADERSIZE + 52, 17, 2, "IN4PRI");
    fields[10] = fieldIN4INT =
    new DecimalField(message, HEADERSIZE + 69, 17, 2, "IN4INT");
    fields[11] = fieldIN4SCY =
    new CharacterField(message, HEADERSIZE + 86, 3, "IN4SCY");
    fields[12] = fieldIN4SPR =
    new DecimalField(message, HEADERSIZE + 89, 17, 2, "IN4SPR");
    fields[13] = fieldIN4RTE =
    new DecimalField(message, HEADERSIZE + 106, 11, 6, "IN4RTE");
    fields[14] = fieldIN4TRD =
    new DecimalField(message, HEADERSIZE + 117, 9, 0, "IN4TRD");
    fields[15] = fieldIN4VLD =
    new DecimalField(message, HEADERSIZE + 126, 9, 0, "IN4VLD");
    fields[16] = fieldIN4MTD =
    new DecimalField(message, HEADERSIZE + 135, 9, 0, "IN4MTD");
    fields[17] = fieldIN4NXD =
    new DecimalField(message, HEADERSIZE + 144, 9, 0, "IN4NXD");
    fields[18] = fieldIN4SRF =
    new CharacterField(message, HEADERSIZE + 153, 16, "IN4SRF");
    fields[19] = fieldIN4THF =
    new CharacterField(message, HEADERSIZE + 169, 16, "IN4THF");
    fields[20] = fieldIN4WSI =
    new CharacterField(message, HEADERSIZE + 185, 10, "IN4WSI");
    fields[21] = fieldIN4FMT =
    new CharacterField(message, HEADERSIZE + 195, 3, "IN4FMT");
    fields[22] = fieldIN4PRG =
    new CharacterField(message, HEADERSIZE + 198, 10, "IN4PRG");
    fields[23] = fieldIN4PRC =
    new CharacterField(message, HEADERSIZE + 208, 10, "IN4PRC");
    fields[24] = fieldIN4FLG =
    new CharacterField(message, HEADERSIZE + 218, 1, "IN4FLG");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field IN4USERID using a String value.
  */
  public void setIN4USERID(String newvalue)
  {
    fieldIN4USERID.setString(newvalue);
  }

  /**
  * Get value of field IN4USERID as a String.
  */
  public String getIN4USERID()
  {
    return fieldIN4USERID.getString();
  }

  /**
  * Set field IN4BNK using a String value.
  */
  public void setIN4BNK(String newvalue)
  {
    fieldIN4BNK.setString(newvalue);
  }

  /**
  * Get value of field IN4BNK as a String.
  */
  public String getIN4BNK()
  {
    return fieldIN4BNK.getString();
  }

  /**
  * Set field IN4BRN using a String value.
  */
  public void setIN4BRN(String newvalue)
  {
    fieldIN4BRN.setString(newvalue);
  }

  /**
  * Get value of field IN4BRN as a String.
  */
  public String getIN4BRN()
  {
    return fieldIN4BRN.getString();
  }

  /**
  * Set numeric field IN4BRN using a BigDecimal value.
  */
  public void setIN4BRN(BigDecimal newvalue)
  {
    fieldIN4BRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4BRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4BRN()
  {
    return fieldIN4BRN.getBigDecimal();
  }

  /**
  * Set field IN4CCY using a String value.
  */
  public void setIN4CCY(String newvalue)
  {
    fieldIN4CCY.setString(newvalue);
  }

  /**
  * Get value of field IN4CCY as a String.
  */
  public String getIN4CCY()
  {
    return fieldIN4CCY.getString();
  }

  /**
  * Set field IN4ACC using a String value.
  */
  public void setIN4ACC(String newvalue)
  {
    fieldIN4ACC.setString(newvalue);
  }

  /**
  * Get value of field IN4ACC as a String.
  */
  public String getIN4ACC()
  {
    return fieldIN4ACC.getString();
  }

  /**
  * Set numeric field IN4ACC using a BigDecimal value.
  */
  public void setIN4ACC(BigDecimal newvalue)
  {
    fieldIN4ACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4ACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4ACC()
  {
    return fieldIN4ACC.getBigDecimal();
  }

  /**
  * Set field IN4TYP using a String value.
  */
  public void setIN4TYP(String newvalue)
  {
    fieldIN4TYP.setString(newvalue);
  }

  /**
  * Get value of field IN4TYP as a String.
  */
  public String getIN4TYP()
  {
    return fieldIN4TYP.getString();
  }

  /**
  * Set field IN4CLS using a String value.
  */
  public void setIN4CLS(String newvalue)
  {
    fieldIN4CLS.setString(newvalue);
  }

  /**
  * Get value of field IN4CLS as a String.
  */
  public String getIN4CLS()
  {
    return fieldIN4CLS.getString();
  }

  /**
  * Set field IN4BAS using a String value.
  */
  public void setIN4BAS(String newvalue)
  {
    fieldIN4BAS.setString(newvalue);
  }

  /**
  * Get value of field IN4BAS as a String.
  */
  public String getIN4BAS()
  {
    return fieldIN4BAS.getString();
  }

  /**
  * Set numeric field IN4BAS using a BigDecimal value.
  */
  public void setIN4BAS(BigDecimal newvalue)
  {
    fieldIN4BAS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4BAS as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4BAS()
  {
    return fieldIN4BAS.getBigDecimal();
  }

  /**
  * Set field IN4CUN using a String value.
  */
  public void setIN4CUN(String newvalue)
  {
    fieldIN4CUN.setString(newvalue);
  }

  /**
  * Get value of field IN4CUN as a String.
  */
  public String getIN4CUN()
  {
    return fieldIN4CUN.getString();
  }

  /**
  * Set numeric field IN4CUN using a BigDecimal value.
  */
  public void setIN4CUN(BigDecimal newvalue)
  {
    fieldIN4CUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4CUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4CUN()
  {
    return fieldIN4CUN.getBigDecimal();
  }

  /**
  * Set field IN4PRI using a String value.
  */
  public void setIN4PRI(String newvalue)
  {
    fieldIN4PRI.setString(newvalue);
  }

  /**
  * Get value of field IN4PRI as a String.
  */
  public String getIN4PRI()
  {
    return fieldIN4PRI.getString();
  }

  /**
  * Set numeric field IN4PRI using a BigDecimal value.
  */
  public void setIN4PRI(BigDecimal newvalue)
  {
    fieldIN4PRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4PRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4PRI()
  {
    return fieldIN4PRI.getBigDecimal();
  }

  /**
  * Set field IN4INT using a String value.
  */
  public void setIN4INT(String newvalue)
  {
    fieldIN4INT.setString(newvalue);
  }

  /**
  * Get value of field IN4INT as a String.
  */
  public String getIN4INT()
  {
    return fieldIN4INT.getString();
  }

  /**
  * Set numeric field IN4INT using a BigDecimal value.
  */
  public void setIN4INT(BigDecimal newvalue)
  {
    fieldIN4INT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4INT as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4INT()
  {
    return fieldIN4INT.getBigDecimal();
  }

  /**
  * Set field IN4SCY using a String value.
  */
  public void setIN4SCY(String newvalue)
  {
    fieldIN4SCY.setString(newvalue);
  }

  /**
  * Get value of field IN4SCY as a String.
  */
  public String getIN4SCY()
  {
    return fieldIN4SCY.getString();
  }

  /**
  * Set field IN4SPR using a String value.
  */
  public void setIN4SPR(String newvalue)
  {
    fieldIN4SPR.setString(newvalue);
  }

  /**
  * Get value of field IN4SPR as a String.
  */
  public String getIN4SPR()
  {
    return fieldIN4SPR.getString();
  }

  /**
  * Set numeric field IN4SPR using a BigDecimal value.
  */
  public void setIN4SPR(BigDecimal newvalue)
  {
    fieldIN4SPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4SPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4SPR()
  {
    return fieldIN4SPR.getBigDecimal();
  }

  /**
  * Set field IN4RTE using a String value.
  */
  public void setIN4RTE(String newvalue)
  {
    fieldIN4RTE.setString(newvalue);
  }

  /**
  * Get value of field IN4RTE as a String.
  */
  public String getIN4RTE()
  {
    return fieldIN4RTE.getString();
  }

  /**
  * Set numeric field IN4RTE using a BigDecimal value.
  */
  public void setIN4RTE(BigDecimal newvalue)
  {
    fieldIN4RTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4RTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4RTE()
  {
    return fieldIN4RTE.getBigDecimal();
  }

  /**
  * Set field IN4TRD using a String value.
  */
  public void setIN4TRD(String newvalue)
  {
    fieldIN4TRD.setString(newvalue);
  }

  /**
  * Get value of field IN4TRD as a String.
  */
  public String getIN4TRD()
  {
    return fieldIN4TRD.getString();
  }

  /**
  * Set numeric field IN4TRD using a BigDecimal value.
  */
  public void setIN4TRD(BigDecimal newvalue)
  {
    fieldIN4TRD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4TRD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4TRD()
  {
    return fieldIN4TRD.getBigDecimal();
  }

  /**
  * Set field IN4VLD using a String value.
  */
  public void setIN4VLD(String newvalue)
  {
    fieldIN4VLD.setString(newvalue);
  }

  /**
  * Get value of field IN4VLD as a String.
  */
  public String getIN4VLD()
  {
    return fieldIN4VLD.getString();
  }

  /**
  * Set numeric field IN4VLD using a BigDecimal value.
  */
  public void setIN4VLD(BigDecimal newvalue)
  {
    fieldIN4VLD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4VLD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4VLD()
  {
    return fieldIN4VLD.getBigDecimal();
  }

  /**
  * Set field IN4MTD using a String value.
  */
  public void setIN4MTD(String newvalue)
  {
    fieldIN4MTD.setString(newvalue);
  }

  /**
  * Get value of field IN4MTD as a String.
  */
  public String getIN4MTD()
  {
    return fieldIN4MTD.getString();
  }

  /**
  * Set numeric field IN4MTD using a BigDecimal value.
  */
  public void setIN4MTD(BigDecimal newvalue)
  {
    fieldIN4MTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4MTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4MTD()
  {
    return fieldIN4MTD.getBigDecimal();
  }

  /**
  * Set field IN4NXD using a String value.
  */
  public void setIN4NXD(String newvalue)
  {
    fieldIN4NXD.setString(newvalue);
  }

  /**
  * Get value of field IN4NXD as a String.
  */
  public String getIN4NXD()
  {
    return fieldIN4NXD.getString();
  }

  /**
  * Set numeric field IN4NXD using a BigDecimal value.
  */
  public void setIN4NXD(BigDecimal newvalue)
  {
    fieldIN4NXD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IN4NXD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIN4NXD()
  {
    return fieldIN4NXD.getBigDecimal();
  }

  /**
  * Set field IN4SRF using a String value.
  */
  public void setIN4SRF(String newvalue)
  {
    fieldIN4SRF.setString(newvalue);
  }

  /**
  * Get value of field IN4SRF as a String.
  */
  public String getIN4SRF()
  {
    return fieldIN4SRF.getString();
  }

  /**
  * Set field IN4THF using a String value.
  */
  public void setIN4THF(String newvalue)
  {
    fieldIN4THF.setString(newvalue);
  }

  /**
  * Get value of field IN4THF as a String.
  */
  public String getIN4THF()
  {
    return fieldIN4THF.getString();
  }

  /**
  * Set field IN4WSI using a String value.
  */
  public void setIN4WSI(String newvalue)
  {
    fieldIN4WSI.setString(newvalue);
  }

  /**
  * Get value of field IN4WSI as a String.
  */
  public String getIN4WSI()
  {
    return fieldIN4WSI.getString();
  }

  /**
  * Set field IN4FMT using a String value.
  */
  public void setIN4FMT(String newvalue)
  {
    fieldIN4FMT.setString(newvalue);
  }

  /**
  * Get value of field IN4FMT as a String.
  */
  public String getIN4FMT()
  {
    return fieldIN4FMT.getString();
  }

  /**
  * Set field IN4PRG using a String value.
  */
  public void setIN4PRG(String newvalue)
  {
    fieldIN4PRG.setString(newvalue);
  }

  /**
  * Get value of field IN4PRG as a String.
  */
  public String getIN4PRG()
  {
    return fieldIN4PRG.getString();
  }

  /**
  * Set field IN4PRC using a String value.
  */
  public void setIN4PRC(String newvalue)
  {
    fieldIN4PRC.setString(newvalue);
  }

  /**
  * Get value of field IN4PRC as a String.
  */
  public String getIN4PRC()
  {
    return fieldIN4PRC.getString();
  }

  /**
  * Set field IN4FLG using a String value.
  */
  public void setIN4FLG(String newvalue)
  {
    fieldIN4FLG.setString(newvalue);
  }

  /**
  * Get value of field IN4FLG as a String.
  */
  public String getIN4FLG()
  {
    return fieldIN4FLG.getString();
  }

}
