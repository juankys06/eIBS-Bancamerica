package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECIF01009 physical file definition.
* 
* File level identifier is 1130918121026.
* Record format level identifier is 3BF380C5D8BC5.
*/

public class ECIF01009Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H09USERID",
                                     "H09PROGRM",
                                     "H09TIMSYS",
                                     "H09SCRCOD",
                                     "H09OPECOD",
                                     "H09FLGMAS",
                                     "H09FLGWK1",
                                     "H09FLGWK2",
                                     "H09FLGWK3",
                                     "E09CUSCUN",
                                     "E09NRTA",
                                     "E09TIID",
                                     "E09NIDE",
                                     "E09NPLA",
                                     "E09DPRO",
                                     "E09INDOPE"
                                   };
  final static String tnames[] = {
                                   "H09USERID",
                                   "H09PROGRM",
                                   "H09TIMSYS",
                                   "H09SCRCOD",
                                   "H09OPECOD",
                                   "H09FLGMAS",
                                   "H09FLGWK1",
                                   "H09FLGWK2",
                                   "H09FLGWK3",
                                   "E09CUSCUN",
                                   "E09NRTA",
                                   "E09TIID",
                                   "E09NIDE",
                                   "E09NPLA",
                                   "E09DPRO",
                                   "E09INDOPE"
                                 };
  final static String fid = "1130918121026";
  final static String rid = "3BF380C5D8BC5";
  final static String fmtname = "ECIF01009";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH09USERID = null;
  private CharacterField fieldH09PROGRM = null;
  private CharacterField fieldH09TIMSYS = null;
  private CharacterField fieldH09SCRCOD = null;
  private CharacterField fieldH09OPECOD = null;
  private CharacterField fieldH09FLGMAS = null;
  private CharacterField fieldH09FLGWK1 = null;
  private CharacterField fieldH09FLGWK2 = null;
  private CharacterField fieldH09FLGWK3 = null;
  private DecimalField fieldE09CUSCUN = null;
  private CharacterField fieldE09NRTA = null;
  private CharacterField fieldE09TIID = null;
  private CharacterField fieldE09NIDE = null;
  private CharacterField fieldE09NPLA = null;
  private CharacterField fieldE09DPRO = null;
  private CharacterField fieldE09INDOPE = null;

  /**
  * Constructor for ECIF01009Message.
  */
  public ECIF01009Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 131;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH09USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H09USERID");
    fields[1] = fieldH09PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H09PROGRM");
    fields[2] = fieldH09TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H09TIMSYS");
    fields[3] = fieldH09SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H09SCRCOD");
    fields[4] = fieldH09OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H09OPECOD");
    fields[5] = fieldH09FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H09FLGMAS");
    fields[6] = fieldH09FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H09FLGWK1");
    fields[7] = fieldH09FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H09FLGWK2");
    fields[8] = fieldH09FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H09FLGWK3");
    fields[9] = fieldE09CUSCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E09CUSCUN");
    fields[10] = fieldE09NRTA =
    new CharacterField(message, HEADERSIZE + 52, 16, "E09NRTA");
    fields[11] = fieldE09TIID =
    new CharacterField(message, HEADERSIZE + 68, 1, "E09TIID");
    fields[12] = fieldE09NIDE =
    new CharacterField(message, HEADERSIZE + 69, 11, "E09NIDE");
    fields[13] = fieldE09NPLA =
    new CharacterField(message, HEADERSIZE + 80, 25, "E09NPLA");
    fields[14] = fieldE09DPRO =
    new CharacterField(message, HEADERSIZE + 105, 25, "E09DPRO");
    fields[15] = fieldE09INDOPE =
    new CharacterField(message, HEADERSIZE + 130, 1, "E09INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H09USERID using a String value.
  */
  public void setH09USERID(String newvalue)
  {
    fieldH09USERID.setString(newvalue);
  }

  /**
  * Get value of field H09USERID as a String.
  */
  public String getH09USERID()
  {
    return fieldH09USERID.getString();
  }

  /**
  * Set field H09PROGRM using a String value.
  */
  public void setH09PROGRM(String newvalue)
  {
    fieldH09PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H09PROGRM as a String.
  */
  public String getH09PROGRM()
  {
    return fieldH09PROGRM.getString();
  }

  /**
  * Set field H09TIMSYS using a String value.
  */
  public void setH09TIMSYS(String newvalue)
  {
    fieldH09TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H09TIMSYS as a String.
  */
  public String getH09TIMSYS()
  {
    return fieldH09TIMSYS.getString();
  }

  /**
  * Set field H09SCRCOD using a String value.
  */
  public void setH09SCRCOD(String newvalue)
  {
    fieldH09SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H09SCRCOD as a String.
  */
  public String getH09SCRCOD()
  {
    return fieldH09SCRCOD.getString();
  }

  /**
  * Set field H09OPECOD using a String value.
  */
  public void setH09OPECOD(String newvalue)
  {
    fieldH09OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H09OPECOD as a String.
  */
  public String getH09OPECOD()
  {
    return fieldH09OPECOD.getString();
  }

  /**
  * Set field H09FLGMAS using a String value.
  */
  public void setH09FLGMAS(String newvalue)
  {
    fieldH09FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H09FLGMAS as a String.
  */
  public String getH09FLGMAS()
  {
    return fieldH09FLGMAS.getString();
  }

  /**
  * Set field H09FLGWK1 using a String value.
  */
  public void setH09FLGWK1(String newvalue)
  {
    fieldH09FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H09FLGWK1 as a String.
  */
  public String getH09FLGWK1()
  {
    return fieldH09FLGWK1.getString();
  }

  /**
  * Set field H09FLGWK2 using a String value.
  */
  public void setH09FLGWK2(String newvalue)
  {
    fieldH09FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H09FLGWK2 as a String.
  */
  public String getH09FLGWK2()
  {
    return fieldH09FLGWK2.getString();
  }

  /**
  * Set field H09FLGWK3 using a String value.
  */
  public void setH09FLGWK3(String newvalue)
  {
    fieldH09FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H09FLGWK3 as a String.
  */
  public String getH09FLGWK3()
  {
    return fieldH09FLGWK3.getString();
  }

  /**
  * Set field E09CUSCUN using a String value.
  */
  public void setE09CUSCUN(String newvalue)
  {
    fieldE09CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E09CUSCUN as a String.
  */
  public String getE09CUSCUN()
  {
    return fieldE09CUSCUN.getString();
  }

  /**
  * Set numeric field E09CUSCUN using a BigDecimal value.
  */
  public void setE09CUSCUN(BigDecimal newvalue)
  {
    fieldE09CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E09CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE09CUSCUN()
  {
    return fieldE09CUSCUN.getBigDecimal();
  }

  /**
  * Set field E09NRTA using a String value.
  */
  public void setE09NRTA(String newvalue)
  {
    fieldE09NRTA.setString(newvalue);
  }

  /**
  * Get value of field E09NRTA as a String.
  */
  public String getE09NRTA()
  {
    return fieldE09NRTA.getString();
  }

  /**
  * Set field E09TIID using a String value.
  */
  public void setE09TIID(String newvalue)
  {
    fieldE09TIID.setString(newvalue);
  }

  /**
  * Get value of field E09TIID as a String.
  */
  public String getE09TIID()
  {
    return fieldE09TIID.getString();
  }

  /**
  * Set field E09NIDE using a String value.
  */
  public void setE09NIDE(String newvalue)
  {
    fieldE09NIDE.setString(newvalue);
  }

  /**
  * Get value of field E09NIDE as a String.
  */
  public String getE09NIDE()
  {
    return fieldE09NIDE.getString();
  }

  /**
  * Set field E09NPLA using a String value.
  */
  public void setE09NPLA(String newvalue)
  {
    fieldE09NPLA.setString(newvalue);
  }

  /**
  * Get value of field E09NPLA as a String.
  */
  public String getE09NPLA()
  {
    return fieldE09NPLA.getString();
  }

  /**
  * Set field E09DPRO using a String value.
  */
  public void setE09DPRO(String newvalue)
  {
    fieldE09DPRO.setString(newvalue);
  }

  /**
  * Get value of field E09DPRO as a String.
  */
  public String getE09DPRO()
  {
    return fieldE09DPRO.getString();
  }

  /**
  * Set field E09INDOPE using a String value.
  */
  public void setE09INDOPE(String newvalue)
  {
    fieldE09INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E09INDOPE as a String.
  */
  public String getE09INDOPE()
  {
    return fieldE09INDOPE.getString();
  }

}
