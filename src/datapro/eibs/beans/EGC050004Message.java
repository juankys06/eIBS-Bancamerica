package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC050004 physical file definition.
* 
* File level identifier is 1030121191926.
* Record format level identifier is 3614C2EF0113B.
*/

public class EGC050004Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H04USERID",
                                     "H04PROGRM",
                                     "H04TIMSYS",
                                     "H04SCRCOD",
                                     "H04OPECOD",
                                     "H04FLGMAS",
                                     "H04FLGWK1",
                                     "H04FLGWK2",
                                     "H04FLGWK3",
                                     "H04CODACC",
                                     "E04GCRUT",
                                     "E04GCNMBC",
                                     "E04GCGMDA",
                                     "E04GCACNO",
                                     "E04GCSCPT",
                                     "E04GCSDPT",
                                     "E04GCSNPT",
                                     "E04GCSDPU",
                                     "E04GCSCPU",
                                     "E04GCTINT",
                                     "E04GCGPER",
                                     "E04GCGEFE",
                                     "E04GCCAPY",
                                     "E04GCCAPM",
                                     "E04GCCAPD",
                                     "E04GCAPRY",
                                     "E04GCAPRM",
                                     "E04GCAPRD",
                                     "E04INDOPE"
                                   };
  final static String tnames[] = {
                                   "H04USERID",
                                   "H04PROGRM",
                                   "H04TIMSYS",
                                   "H04SCRCOD",
                                   "H04OPECOD",
                                   "H04FLGMAS",
                                   "H04FLGWK1",
                                   "H04FLGWK2",
                                   "H04FLGWK3",
                                   "H04CODACC",
                                   "E04GCRUT",
                                   "E04GCNMBC",
                                   "E04GCGMDA",
                                   "E04GCACNO",
                                   "E04GCSCPT",
                                   "E04GCSDPT",
                                   "E04GCSNPT",
                                   "E04GCSDPU",
                                   "E04GCSCPU",
                                   "E04GCTINT",
                                   "E04GCGPER",
                                   "E04GCGEFE",
                                   "E04GCCAPY",
                                   "E04GCCAPM",
                                   "E04GCCAPD",
                                   "E04GCAPRY",
                                   "E04GCAPRM",
                                   "E04GCAPRD",
                                   "E04INDOPE"
                                 };
  final static String fid = "1030121191926";
  final static String rid = "3614C2EF0113B";
  final static String fmtname = "EGC050004";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH04USERID = null;
  private CharacterField fieldH04PROGRM = null;
  private CharacterField fieldH04TIMSYS = null;
  private CharacterField fieldH04SCRCOD = null;
  private CharacterField fieldH04OPECOD = null;
  private CharacterField fieldH04FLGMAS = null;
  private CharacterField fieldH04FLGWK1 = null;
  private CharacterField fieldH04FLGWK2 = null;
  private CharacterField fieldH04FLGWK3 = null;
  private CharacterField fieldH04CODACC = null;
  private CharacterField fieldE04GCRUT = null;
  private CharacterField fieldE04GCNMBC = null;
  private CharacterField fieldE04GCGMDA = null;
  private DecimalField fieldE04GCACNO = null;
  private DecimalField fieldE04GCSCPT = null;
  private DecimalField fieldE04GCSDPT = null;
  private DecimalField fieldE04GCSNPT = null;
  private DecimalField fieldE04GCSDPU = null;
  private DecimalField fieldE04GCSCPU = null;
  private DecimalField fieldE04GCTINT = null;
  private DecimalField fieldE04GCGPER = null;
  private DecimalField fieldE04GCGEFE = null;
  private DecimalField fieldE04GCCAPY = null;
  private DecimalField fieldE04GCCAPM = null;
  private DecimalField fieldE04GCCAPD = null;
  private DecimalField fieldE04GCAPRY = null;
  private DecimalField fieldE04GCAPRM = null;
  private DecimalField fieldE04GCAPRD = null;
  private CharacterField fieldE04INDOPE = null;

  /**
  * Constructor for EGC050004Message.
  */
  public EGC050004Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 251;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH04USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H04USERID");
    fields[1] = fieldH04PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H04PROGRM");
    fields[2] = fieldH04TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H04TIMSYS");
    fields[3] = fieldH04SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H04SCRCOD");
    fields[4] = fieldH04OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H04OPECOD");
    fields[5] = fieldH04FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H04FLGMAS");
    fields[6] = fieldH04FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H04FLGWK1");
    fields[7] = fieldH04FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H04FLGWK2");
    fields[8] = fieldH04FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H04FLGWK3");
    fields[9] = fieldH04CODACC =
    new CharacterField(message, HEADERSIZE + 42, 4, "H04CODACC");
    fields[10] = fieldE04GCRUT =
    new CharacterField(message, HEADERSIZE + 46, 15, "E04GCRUT");
    fields[11] = fieldE04GCNMBC =
    new CharacterField(message, HEADERSIZE + 61, 45, "E04GCNMBC");
    fields[12] = fieldE04GCGMDA =
    new CharacterField(message, HEADERSIZE + 106, 3, "E04GCGMDA");
    fields[13] = fieldE04GCACNO =
    new DecimalField(message, HEADERSIZE + 109, 13, 0, "E04GCACNO");
    fields[14] = fieldE04GCSCPT =
    new DecimalField(message, HEADERSIZE + 122, 17, 2, "E04GCSCPT");
    fields[15] = fieldE04GCSDPT =
    new DecimalField(message, HEADERSIZE + 139, 17, 2, "E04GCSDPT");
    fields[16] = fieldE04GCSNPT =
    new DecimalField(message, HEADERSIZE + 156, 17, 2, "E04GCSNPT");
    fields[17] = fieldE04GCSDPU =
    new DecimalField(message, HEADERSIZE + 173, 17, 2, "E04GCSDPU");
    fields[18] = fieldE04GCSCPU =
    new DecimalField(message, HEADERSIZE + 190, 17, 2, "E04GCSCPU");
    fields[19] = fieldE04GCTINT =
    new DecimalField(message, HEADERSIZE + 207, 13, 6, "E04GCTINT");
    fields[20] = fieldE04GCGPER =
    new DecimalField(message, HEADERSIZE + 220, 6, 0, "E04GCGPER");
    fields[21] = fieldE04GCGEFE =
    new DecimalField(message, HEADERSIZE + 226, 6, 0, "E04GCGEFE");
    fields[22] = fieldE04GCCAPY =
    new DecimalField(message, HEADERSIZE + 232, 3, 0, "E04GCCAPY");
    fields[23] = fieldE04GCCAPM =
    new DecimalField(message, HEADERSIZE + 235, 3, 0, "E04GCCAPM");
    fields[24] = fieldE04GCCAPD =
    new DecimalField(message, HEADERSIZE + 238, 3, 0, "E04GCCAPD");
    fields[25] = fieldE04GCAPRY =
    new DecimalField(message, HEADERSIZE + 241, 3, 0, "E04GCAPRY");
    fields[26] = fieldE04GCAPRM =
    new DecimalField(message, HEADERSIZE + 244, 3, 0, "E04GCAPRM");
    fields[27] = fieldE04GCAPRD =
    new DecimalField(message, HEADERSIZE + 247, 3, 0, "E04GCAPRD");
    fields[28] = fieldE04INDOPE =
    new CharacterField(message, HEADERSIZE + 250, 1, "E04INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H04USERID using a String value.
  */
  public void setH04USERID(String newvalue)
  {
    fieldH04USERID.setString(newvalue);
  }

  /**
  * Get value of field H04USERID as a String.
  */
  public String getH04USERID()
  {
    return fieldH04USERID.getString();
  }

  /**
  * Set field H04PROGRM using a String value.
  */
  public void setH04PROGRM(String newvalue)
  {
    fieldH04PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H04PROGRM as a String.
  */
  public String getH04PROGRM()
  {
    return fieldH04PROGRM.getString();
  }

  /**
  * Set field H04TIMSYS using a String value.
  */
  public void setH04TIMSYS(String newvalue)
  {
    fieldH04TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H04TIMSYS as a String.
  */
  public String getH04TIMSYS()
  {
    return fieldH04TIMSYS.getString();
  }

  /**
  * Set field H04SCRCOD using a String value.
  */
  public void setH04SCRCOD(String newvalue)
  {
    fieldH04SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H04SCRCOD as a String.
  */
  public String getH04SCRCOD()
  {
    return fieldH04SCRCOD.getString();
  }

  /**
  * Set field H04OPECOD using a String value.
  */
  public void setH04OPECOD(String newvalue)
  {
    fieldH04OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H04OPECOD as a String.
  */
  public String getH04OPECOD()
  {
    return fieldH04OPECOD.getString();
  }

  /**
  * Set field H04FLGMAS using a String value.
  */
  public void setH04FLGMAS(String newvalue)
  {
    fieldH04FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H04FLGMAS as a String.
  */
  public String getH04FLGMAS()
  {
    return fieldH04FLGMAS.getString();
  }

  /**
  * Set field H04FLGWK1 using a String value.
  */
  public void setH04FLGWK1(String newvalue)
  {
    fieldH04FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK1 as a String.
  */
  public String getH04FLGWK1()
  {
    return fieldH04FLGWK1.getString();
  }

  /**
  * Set field H04FLGWK2 using a String value.
  */
  public void setH04FLGWK2(String newvalue)
  {
    fieldH04FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK2 as a String.
  */
  public String getH04FLGWK2()
  {
    return fieldH04FLGWK2.getString();
  }

  /**
  * Set field H04FLGWK3 using a String value.
  */
  public void setH04FLGWK3(String newvalue)
  {
    fieldH04FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK3 as a String.
  */
  public String getH04FLGWK3()
  {
    return fieldH04FLGWK3.getString();
  }

  /**
  * Set field H04CODACC using a String value.
  */
  public void setH04CODACC(String newvalue)
  {
    fieldH04CODACC.setString(newvalue);
  }

  /**
  * Get value of field H04CODACC as a String.
  */
  public String getH04CODACC()
  {
    return fieldH04CODACC.getString();
  }

  /**
  * Set field E04GCRUT using a String value.
  */
  public void setE04GCRUT(String newvalue)
  {
    fieldE04GCRUT.setString(newvalue);
  }

  /**
  * Get value of field E04GCRUT as a String.
  */
  public String getE04GCRUT()
  {
    return fieldE04GCRUT.getString();
  }

  /**
  * Set field E04GCNMBC using a String value.
  */
  public void setE04GCNMBC(String newvalue)
  {
    fieldE04GCNMBC.setString(newvalue);
  }

  /**
  * Get value of field E04GCNMBC as a String.
  */
  public String getE04GCNMBC()
  {
    return fieldE04GCNMBC.getString();
  }

  /**
  * Set field E04GCGMDA using a String value.
  */
  public void setE04GCGMDA(String newvalue)
  {
    fieldE04GCGMDA.setString(newvalue);
  }

  /**
  * Get value of field E04GCGMDA as a String.
  */
  public String getE04GCGMDA()
  {
    return fieldE04GCGMDA.getString();
  }

  /**
  * Set field E04GCACNO using a String value.
  */
  public void setE04GCACNO(String newvalue)
  {
    fieldE04GCACNO.setString(newvalue);
  }

  /**
  * Get value of field E04GCACNO as a String.
  */
  public String getE04GCACNO()
  {
    return fieldE04GCACNO.getString();
  }

  /**
  * Set numeric field E04GCACNO using a BigDecimal value.
  */
  public void setE04GCACNO(BigDecimal newvalue)
  {
    fieldE04GCACNO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCACNO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCACNO()
  {
    return fieldE04GCACNO.getBigDecimal();
  }

  /**
  * Set field E04GCSCPT using a String value.
  */
  public void setE04GCSCPT(String newvalue)
  {
    fieldE04GCSCPT.setString(newvalue);
  }

  /**
  * Get value of field E04GCSCPT as a String.
  */
  public String getE04GCSCPT()
  {
    return fieldE04GCSCPT.getString();
  }

  /**
  * Set numeric field E04GCSCPT using a BigDecimal value.
  */
  public void setE04GCSCPT(BigDecimal newvalue)
  {
    fieldE04GCSCPT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCSCPT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCSCPT()
  {
    return fieldE04GCSCPT.getBigDecimal();
  }

  /**
  * Set field E04GCSDPT using a String value.
  */
  public void setE04GCSDPT(String newvalue)
  {
    fieldE04GCSDPT.setString(newvalue);
  }

  /**
  * Get value of field E04GCSDPT as a String.
  */
  public String getE04GCSDPT()
  {
    return fieldE04GCSDPT.getString();
  }

  /**
  * Set numeric field E04GCSDPT using a BigDecimal value.
  */
  public void setE04GCSDPT(BigDecimal newvalue)
  {
    fieldE04GCSDPT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCSDPT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCSDPT()
  {
    return fieldE04GCSDPT.getBigDecimal();
  }

  /**
  * Set field E04GCSNPT using a String value.
  */
  public void setE04GCSNPT(String newvalue)
  {
    fieldE04GCSNPT.setString(newvalue);
  }

  /**
  * Get value of field E04GCSNPT as a String.
  */
  public String getE04GCSNPT()
  {
    return fieldE04GCSNPT.getString();
  }

  /**
  * Set numeric field E04GCSNPT using a BigDecimal value.
  */
  public void setE04GCSNPT(BigDecimal newvalue)
  {
    fieldE04GCSNPT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCSNPT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCSNPT()
  {
    return fieldE04GCSNPT.getBigDecimal();
  }

  /**
  * Set field E04GCSDPU using a String value.
  */
  public void setE04GCSDPU(String newvalue)
  {
    fieldE04GCSDPU.setString(newvalue);
  }

  /**
  * Get value of field E04GCSDPU as a String.
  */
  public String getE04GCSDPU()
  {
    return fieldE04GCSDPU.getString();
  }

  /**
  * Set numeric field E04GCSDPU using a BigDecimal value.
  */
  public void setE04GCSDPU(BigDecimal newvalue)
  {
    fieldE04GCSDPU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCSDPU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCSDPU()
  {
    return fieldE04GCSDPU.getBigDecimal();
  }

  /**
  * Set field E04GCSCPU using a String value.
  */
  public void setE04GCSCPU(String newvalue)
  {
    fieldE04GCSCPU.setString(newvalue);
  }

  /**
  * Get value of field E04GCSCPU as a String.
  */
  public String getE04GCSCPU()
  {
    return fieldE04GCSCPU.getString();
  }

  /**
  * Set numeric field E04GCSCPU using a BigDecimal value.
  */
  public void setE04GCSCPU(BigDecimal newvalue)
  {
    fieldE04GCSCPU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCSCPU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCSCPU()
  {
    return fieldE04GCSCPU.getBigDecimal();
  }

  /**
  * Set field E04GCTINT using a String value.
  */
  public void setE04GCTINT(String newvalue)
  {
    fieldE04GCTINT.setString(newvalue);
  }

  /**
  * Get value of field E04GCTINT as a String.
  */
  public String getE04GCTINT()
  {
    return fieldE04GCTINT.getString();
  }

  /**
  * Set numeric field E04GCTINT using a BigDecimal value.
  */
  public void setE04GCTINT(BigDecimal newvalue)
  {
    fieldE04GCTINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCTINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCTINT()
  {
    return fieldE04GCTINT.getBigDecimal();
  }

  /**
  * Set field E04GCGPER using a String value.
  */
  public void setE04GCGPER(String newvalue)
  {
    fieldE04GCGPER.setString(newvalue);
  }

  /**
  * Get value of field E04GCGPER as a String.
  */
  public String getE04GCGPER()
  {
    return fieldE04GCGPER.getString();
  }

  /**
  * Set numeric field E04GCGPER using a BigDecimal value.
  */
  public void setE04GCGPER(BigDecimal newvalue)
  {
    fieldE04GCGPER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCGPER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCGPER()
  {
    return fieldE04GCGPER.getBigDecimal();
  }

  /**
  * Set field E04GCGEFE using a String value.
  */
  public void setE04GCGEFE(String newvalue)
  {
    fieldE04GCGEFE.setString(newvalue);
  }

  /**
  * Get value of field E04GCGEFE as a String.
  */
  public String getE04GCGEFE()
  {
    return fieldE04GCGEFE.getString();
  }

  /**
  * Set numeric field E04GCGEFE using a BigDecimal value.
  */
  public void setE04GCGEFE(BigDecimal newvalue)
  {
    fieldE04GCGEFE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCGEFE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCGEFE()
  {
    return fieldE04GCGEFE.getBigDecimal();
  }

  /**
  * Set field E04GCCAPY using a String value.
  */
  public void setE04GCCAPY(String newvalue)
  {
    fieldE04GCCAPY.setString(newvalue);
  }

  /**
  * Get value of field E04GCCAPY as a String.
  */
  public String getE04GCCAPY()
  {
    return fieldE04GCCAPY.getString();
  }

  /**
  * Set numeric field E04GCCAPY using a BigDecimal value.
  */
  public void setE04GCCAPY(BigDecimal newvalue)
  {
    fieldE04GCCAPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCCAPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCCAPY()
  {
    return fieldE04GCCAPY.getBigDecimal();
  }

  /**
  * Set field E04GCCAPM using a String value.
  */
  public void setE04GCCAPM(String newvalue)
  {
    fieldE04GCCAPM.setString(newvalue);
  }

  /**
  * Get value of field E04GCCAPM as a String.
  */
  public String getE04GCCAPM()
  {
    return fieldE04GCCAPM.getString();
  }

  /**
  * Set numeric field E04GCCAPM using a BigDecimal value.
  */
  public void setE04GCCAPM(BigDecimal newvalue)
  {
    fieldE04GCCAPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCCAPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCCAPM()
  {
    return fieldE04GCCAPM.getBigDecimal();
  }

  /**
  * Set field E04GCCAPD using a String value.
  */
  public void setE04GCCAPD(String newvalue)
  {
    fieldE04GCCAPD.setString(newvalue);
  }

  /**
  * Get value of field E04GCCAPD as a String.
  */
  public String getE04GCCAPD()
  {
    return fieldE04GCCAPD.getString();
  }

  /**
  * Set numeric field E04GCCAPD using a BigDecimal value.
  */
  public void setE04GCCAPD(BigDecimal newvalue)
  {
    fieldE04GCCAPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCCAPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCCAPD()
  {
    return fieldE04GCCAPD.getBigDecimal();
  }

  /**
  * Set field E04GCAPRY using a String value.
  */
  public void setE04GCAPRY(String newvalue)
  {
    fieldE04GCAPRY.setString(newvalue);
  }

  /**
  * Get value of field E04GCAPRY as a String.
  */
  public String getE04GCAPRY()
  {
    return fieldE04GCAPRY.getString();
  }

  /**
  * Set numeric field E04GCAPRY using a BigDecimal value.
  */
  public void setE04GCAPRY(BigDecimal newvalue)
  {
    fieldE04GCAPRY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCAPRY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCAPRY()
  {
    return fieldE04GCAPRY.getBigDecimal();
  }

  /**
  * Set field E04GCAPRM using a String value.
  */
  public void setE04GCAPRM(String newvalue)
  {
    fieldE04GCAPRM.setString(newvalue);
  }

  /**
  * Get value of field E04GCAPRM as a String.
  */
  public String getE04GCAPRM()
  {
    return fieldE04GCAPRM.getString();
  }

  /**
  * Set numeric field E04GCAPRM using a BigDecimal value.
  */
  public void setE04GCAPRM(BigDecimal newvalue)
  {
    fieldE04GCAPRM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCAPRM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCAPRM()
  {
    return fieldE04GCAPRM.getBigDecimal();
  }

  /**
  * Set field E04GCAPRD using a String value.
  */
  public void setE04GCAPRD(String newvalue)
  {
    fieldE04GCAPRD.setString(newvalue);
  }

  /**
  * Get value of field E04GCAPRD as a String.
  */
  public String getE04GCAPRD()
  {
    return fieldE04GCAPRD.getString();
  }

  /**
  * Set numeric field E04GCAPRD using a BigDecimal value.
  */
  public void setE04GCAPRD(BigDecimal newvalue)
  {
    fieldE04GCAPRD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04GCAPRD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04GCAPRD()
  {
    return fieldE04GCAPRD.getBigDecimal();
  }

  /**
  * Set field E04INDOPE using a String value.
  */
  public void setE04INDOPE(String newvalue)
  {
    fieldE04INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E04INDOPE as a String.
  */
  public String getE04INDOPE()
  {
    return fieldE04INDOPE.getString();
  }

}
