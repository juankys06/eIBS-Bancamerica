package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFE0325DS physical file definition.
* 
* File level identifier is 1060822183802.
* Record format level identifier is 4EBCD4EF56241.
*/

public class EFE0325DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01FEOBNK",
                                     "E01FEODT1",
                                     "E01FEODT2",
                                     "E01FEODT3",
                                     "E01FEOCUN",
                                     "E01FEOLIM",
                                     "E01FEOUTI",
                                     "E01FEOCCY",
                                     "D01FEOCP1",
                                     "D01FEOCP2",
                                     "D01FEOCP3"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01FEOBNK",
                                   "E01FEODT1",
                                   "E01FEODT2",
                                   "E01FEODT3",
                                   "E01FEOCUN",
                                   "E01FEOLIM",
                                   "E01FEOUTI",
                                   "E01FEOCCY",
                                   "D01FEOCP1",
                                   "D01FEOCP2",
                                   "D01FEOCP3"
                                 };
  final static String fid = "1060822183802";
  final static String rid = "4EBCD4EF56241";
  final static String fmtname = "EFE0325DS";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01FEOBNK = null;
  private DecimalField fieldE01FEODT1 = null;
  private DecimalField fieldE01FEODT2 = null;
  private DecimalField fieldE01FEODT3 = null;
  private DecimalField fieldE01FEOCUN = null;
  private DecimalField fieldE01FEOLIM = null;
  private DecimalField fieldE01FEOUTI = null;
  private CharacterField fieldE01FEOCCY = null;
  private CharacterField fieldD01FEOCP1 = null;
  private CharacterField fieldD01FEOCP2 = null;
  private CharacterField fieldD01FEOCP3 = null;

  /**
  * Constructor for EFE0325DSMessage.
  */
  public EFE0325DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 205;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01FEOBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01FEOBNK");
    fields[10] = fieldE01FEODT1 =
    new DecimalField(message, HEADERSIZE + 44, 3, 0, "E01FEODT1");
    fields[11] = fieldE01FEODT2 =
    new DecimalField(message, HEADERSIZE + 47, 3, 0, "E01FEODT2");
    fields[12] = fieldE01FEODT3 =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "E01FEODT3");
    fields[13] = fieldE01FEOCUN =
    new DecimalField(message, HEADERSIZE + 53, 10, 0, "E01FEOCUN");
    fields[14] = fieldE01FEOLIM =
    new DecimalField(message, HEADERSIZE + 63, 17, 2, "E01FEOLIM");
    fields[15] = fieldE01FEOUTI =
    new DecimalField(message, HEADERSIZE + 80, 17, 2, "E01FEOUTI");
    fields[16] = fieldE01FEOCCY =
    new CharacterField(message, HEADERSIZE + 97, 3, "E01FEOCCY");
    fields[17] = fieldD01FEOCP1 =
    new CharacterField(message, HEADERSIZE + 100, 35, "D01FEOCP1");
    fields[18] = fieldD01FEOCP2 =
    new CharacterField(message, HEADERSIZE + 135, 35, "D01FEOCP2");
    fields[19] = fieldD01FEOCP3 =
    new CharacterField(message, HEADERSIZE + 170, 35, "D01FEOCP3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01FEOBNK using a String value.
  */
  public void setE01FEOBNK(String newvalue)
  {
    fieldE01FEOBNK.setString(newvalue);
  }

  /**
  * Get value of field E01FEOBNK as a String.
  */
  public String getE01FEOBNK()
  {
    return fieldE01FEOBNK.getString();
  }

  /**
  * Set field E01FEODT1 using a String value.
  */
  public void setE01FEODT1(String newvalue)
  {
    fieldE01FEODT1.setString(newvalue);
  }

  /**
  * Get value of field E01FEODT1 as a String.
  */
  public String getE01FEODT1()
  {
    return fieldE01FEODT1.getString();
  }

  /**
  * Set numeric field E01FEODT1 using a BigDecimal value.
  */
  public void setE01FEODT1(BigDecimal newvalue)
  {
    fieldE01FEODT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEODT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEODT1()
  {
    return fieldE01FEODT1.getBigDecimal();
  }

  /**
  * Set field E01FEODT2 using a String value.
  */
  public void setE01FEODT2(String newvalue)
  {
    fieldE01FEODT2.setString(newvalue);
  }

  /**
  * Get value of field E01FEODT2 as a String.
  */
  public String getE01FEODT2()
  {
    return fieldE01FEODT2.getString();
  }

  /**
  * Set numeric field E01FEODT2 using a BigDecimal value.
  */
  public void setE01FEODT2(BigDecimal newvalue)
  {
    fieldE01FEODT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEODT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEODT2()
  {
    return fieldE01FEODT2.getBigDecimal();
  }

  /**
  * Set field E01FEODT3 using a String value.
  */
  public void setE01FEODT3(String newvalue)
  {
    fieldE01FEODT3.setString(newvalue);
  }

  /**
  * Get value of field E01FEODT3 as a String.
  */
  public String getE01FEODT3()
  {
    return fieldE01FEODT3.getString();
  }

  /**
  * Set numeric field E01FEODT3 using a BigDecimal value.
  */
  public void setE01FEODT3(BigDecimal newvalue)
  {
    fieldE01FEODT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEODT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEODT3()
  {
    return fieldE01FEODT3.getBigDecimal();
  }

  /**
  * Set field E01FEOCUN using a String value.
  */
  public void setE01FEOCUN(String newvalue)
  {
    fieldE01FEOCUN.setString(newvalue);
  }

  /**
  * Get value of field E01FEOCUN as a String.
  */
  public String getE01FEOCUN()
  {
    return fieldE01FEOCUN.getString();
  }

  /**
  * Set numeric field E01FEOCUN using a BigDecimal value.
  */
  public void setE01FEOCUN(BigDecimal newvalue)
  {
    fieldE01FEOCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEOCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEOCUN()
  {
    return fieldE01FEOCUN.getBigDecimal();
  }

  /**
  * Set field E01FEOLIM using a String value.
  */
  public void setE01FEOLIM(String newvalue)
  {
    fieldE01FEOLIM.setString(newvalue);
  }

  /**
  * Get value of field E01FEOLIM as a String.
  */
  public String getE01FEOLIM()
  {
    return fieldE01FEOLIM.getString();
  }

  /**
  * Set numeric field E01FEOLIM using a BigDecimal value.
  */
  public void setE01FEOLIM(BigDecimal newvalue)
  {
    fieldE01FEOLIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEOLIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEOLIM()
  {
    return fieldE01FEOLIM.getBigDecimal();
  }

  /**
  * Set field E01FEOUTI using a String value.
  */
  public void setE01FEOUTI(String newvalue)
  {
    fieldE01FEOUTI.setString(newvalue);
  }

  /**
  * Get value of field E01FEOUTI as a String.
  */
  public String getE01FEOUTI()
  {
    return fieldE01FEOUTI.getString();
  }

  /**
  * Set numeric field E01FEOUTI using a BigDecimal value.
  */
  public void setE01FEOUTI(BigDecimal newvalue)
  {
    fieldE01FEOUTI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FEOUTI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FEOUTI()
  {
    return fieldE01FEOUTI.getBigDecimal();
  }

  /**
  * Set field E01FEOCCY using a String value.
  */
  public void setE01FEOCCY(String newvalue)
  {
    fieldE01FEOCCY.setString(newvalue);
  }

  /**
  * Get value of field E01FEOCCY as a String.
  */
  public String getE01FEOCCY()
  {
    return fieldE01FEOCCY.getString();
  }

  /**
  * Set field D01FEOCP1 using a String value.
  */
  public void setD01FEOCP1(String newvalue)
  {
    fieldD01FEOCP1.setString(newvalue);
  }

  /**
  * Get value of field D01FEOCP1 as a String.
  */
  public String getD01FEOCP1()
  {
    return fieldD01FEOCP1.getString();
  }

  /**
  * Set field D01FEOCP2 using a String value.
  */
  public void setD01FEOCP2(String newvalue)
  {
    fieldD01FEOCP2.setString(newvalue);
  }

  /**
  * Get value of field D01FEOCP2 as a String.
  */
  public String getD01FEOCP2()
  {
    return fieldD01FEOCP2.getString();
  }

  /**
  * Set field D01FEOCP3 using a String value.
  */
  public void setD01FEOCP3(String newvalue)
  {
    fieldD01FEOCP3.setString(newvalue);
  }

  /**
  * Get value of field D01FEOCP3 as a String.
  */
  public String getD01FEOCP3()
  {
    return fieldD01FEOCP3.getString();
  }

}
