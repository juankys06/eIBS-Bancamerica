package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0303DS physical file definition.
* 
* File level identifier is 1011206104311.
* Record format level identifier is 5312D0BB0F109.
*/

public class EWD0303DSMessage extends MessageRecord
{
  final int FIELDCOUNT = 11;
  private CharacterField fieldRWDUSR = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDBNK = null;
  private CharacterField fieldSWDTYP = null;
  private CharacterField fieldSWDTBL = null;
  private CharacterField fieldSWDTCO = null;
  private CharacterField fieldSWDCUN = null;
  private CharacterField fieldSWDNME = null;
  private CharacterField fieldSWDDE0 = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0303DSMessage.
  */
  public EWD0303DSMessage()
  {
	createFields();
	initialize();
  }  

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
	recordsize = 100;
	fileid = "1011206104311";
	recordid = "5312D0BB0F109";
	message = new byte[getByteLength()];
	formatname = "EWD0303DS";
	fieldnames = new String[FIELDCOUNT];
	tagnames = new String[FIELDCOUNT];
	fields = new MessageField[FIELDCOUNT];

	fieldnames[0] = "RWDUSR";
	tagnames[0] = "RWDUSR";
	fields[0] = fieldRWDUSR =
	new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
	fieldnames[1] = "RWDFRC";
	tagnames[1] = "RWDFRC";
	fields[1] = fieldRWDFRC =
	new DecimalField(message, HEADERSIZE + 10, 8, 0, "RWDFRC");
	fieldnames[2] = "SWDBNK";
	tagnames[2] = "SWDBNK";
	fields[2] = fieldSWDBNK =
	new CharacterField(message, HEADERSIZE + 18, 2, "SWDBNK");
	fieldnames[3] = "SWDTYP";
	tagnames[3] = "SWDTYP";
	fields[3] = fieldSWDTYP =
	new CharacterField(message, HEADERSIZE + 20, 4, "SWDTYP");
	fieldnames[4] = "SWDTBL";
	tagnames[4] = "SWDTBL";
	fields[4] = fieldSWDTBL =
	new CharacterField(message, HEADERSIZE + 24, 2, "SWDTBL");
	fieldnames[5] = "SWDTCO";
	tagnames[5] = "SWDTCO";
	fields[5] = fieldSWDTCO =
	new CharacterField(message, HEADERSIZE + 26, 1, "SWDTCO");
	fieldnames[6] = "SWDCUN";
	tagnames[6] = "SWDCUN";
	fields[6] = fieldSWDCUN =
	new CharacterField(message, HEADERSIZE + 27, 9, "SWDCUN");
	fieldnames[7] = "SWDNME";
	tagnames[7] = "SWDNME";
	fields[7] = fieldSWDNME =
	new CharacterField(message, HEADERSIZE + 36, 35, "SWDNME");
	fieldnames[8] = "SWDDE0";
	tagnames[8] = "SWDDE0";
	fields[8] = fieldSWDDE0 =
	new CharacterField(message, HEADERSIZE + 71, 20, "SWDDE0");
	fieldnames[9] = "SWDREC";
	tagnames[9] = "SWDREC";
	fields[9] = fieldSWDREC =
	new DecimalField(message, HEADERSIZE + 91, 8, 0, "SWDREC");
	fieldnames[10] = "SWDOPE";
	tagnames[10] = "SWDOPE";
	fields[10] = fieldSWDOPE =
	new CharacterField(message, HEADERSIZE + 99, 1, "SWDOPE");
  }  

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
	fieldRWDUSR.setString(newvalue);
  }  

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
	return fieldRWDUSR.getString();
  }  

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
	fieldRWDFRC.setString(newvalue);
  }  

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
	return fieldRWDFRC.getString();
  }  

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
	fieldRWDFRC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
	return fieldRWDFRC.getBigDecimal();
  }  

  /**
  * Set field SWDBNK using a String value.
  */
  public void setSWDBNK(String newvalue)
  {
	fieldSWDBNK.setString(newvalue);
  }  

  /**
  * Get value of field SWDBNK as a String.
  */
  public String getSWDBNK()
  {
	return fieldSWDBNK.getString();
  }  

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
	fieldSWDTYP.setString(newvalue);
  }  

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
	return fieldSWDTYP.getString();
  }  

  /**
  * Set field SWDTBL using a String value.
  */
  public void setSWDTBL(String newvalue)
  {
	fieldSWDTBL.setString(newvalue);
  }  

  /**
  * Get value of field SWDTBL as a String.
  */
  public String getSWDTBL()
  {
	return fieldSWDTBL.getString();
  }  

  /**
  * Set field SWDTCO using a String value.
  */
  public void setSWDTCO(String newvalue)
  {
	fieldSWDTCO.setString(newvalue);
  }  

  /**
  * Get value of field SWDTCO as a String.
  */
  public String getSWDTCO()
  {
	return fieldSWDTCO.getString();
  }  

  /**
  * Set field SWDCUN using a String value.
  */
  public void setSWDCUN(String newvalue)
  {
	fieldSWDCUN.setString(newvalue);
  }  

  /**
  * Get value of field SWDCUN as a String.
  */
  public String getSWDCUN()
  {
	return fieldSWDCUN.getString();
  }  

  /**
  * Set field SWDNME using a String value.
  */
  public void setSWDNME(String newvalue)
  {
	fieldSWDNME.setString(newvalue);
  }  

  /**
  * Get value of field SWDNME as a String.
  */
  public String getSWDNME()
  {
	return fieldSWDNME.getString();
  }  

  /**
  * Set field SWDDE0 using a String value.
  */
  public void setSWDDE0(String newvalue)
  {
	fieldSWDDE0.setString(newvalue);
  }  

  /**
  * Get value of field SWDDE0 as a String.
  */
  public String getSWDDE0()
  {
	return fieldSWDDE0.getString();
  }  

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
	fieldSWDREC.setString(newvalue);
  }  

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
	return fieldSWDREC.getString();
  }  

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
	fieldSWDREC.setBigDecimal(newvalue);
  }  

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
	return fieldSWDREC.getBigDecimal();
  }  

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
	fieldSWDOPE.setString(newvalue);
  }  

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
	return fieldSWDOPE.getString();
  }  

}