package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL037002 physical file definition.
* 
* File level identifier is 1060608094750.
* Record format level identifier is 34630DD51B2CA.
*/

public class EDL037002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02DEAACC",
                                     "E02DLICDE",
                                     "E02DLINME",
                                     "E02DLITYP",
                                     "E02DLIDPM",
                                     "E02DLIFAC",
                                     "E02DLIBNK",
                                     "E02DLIBRN",
                                     "E02DLICCY",
                                     "E02DLIGLN",
                                     "E02DLIIVA"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02DEAACC",
                                   "E02DLICDE",
                                   "E02DLINME",
                                   "E02DLITYP",
                                   "E02DLIDPM",
                                   "E02DLIFAC",
                                   "E02DLIBNK",
                                   "E02DLIBRN",
                                   "E02DLICCY",
                                   "E02DLIGLN",
                                   "E02DLIIVA"
                                 };
  final static String fid = "1060608094750";
  final static String rid = "34630DD51B2CA";
  final static String fmtname = "EDL037002";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02DEAACC = null;
  private CharacterField fieldE02DLICDE = null;
  private CharacterField fieldE02DLINME = null;
  private CharacterField fieldE02DLITYP = null;
  private DecimalField fieldE02DLIDPM = null;
  private CharacterField fieldE02DLIFAC = null;
  private CharacterField fieldE02DLIBNK = null;
  private DecimalField fieldE02DLIBRN = null;
  private CharacterField fieldE02DLICCY = null;
  private DecimalField fieldE02DLIGLN = null;
  private CharacterField fieldE02DLIIVA = null;

  /**
  * Constructor for EDL037002Message.
  */
  public EDL037002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 142;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02DEAACC");
    fields[10] = fieldE02DLICDE =
    new CharacterField(message, HEADERSIZE + 55, 4, "E02DLICDE");
    fields[11] = fieldE02DLINME =
    new CharacterField(message, HEADERSIZE + 59, 35, "E02DLINME");
    fields[12] = fieldE02DLITYP =
    new CharacterField(message, HEADERSIZE + 94, 1, "E02DLITYP");
    fields[13] = fieldE02DLIDPM =
    new DecimalField(message, HEADERSIZE + 95, 19, 4, "E02DLIDPM");
    fields[14] = fieldE02DLIFAC =
    new CharacterField(message, HEADERSIZE + 114, 1, "E02DLIFAC");
    fields[15] = fieldE02DLIBNK =
    new CharacterField(message, HEADERSIZE + 115, 2, "E02DLIBNK");
    fields[16] = fieldE02DLIBRN =
    new DecimalField(message, HEADERSIZE + 117, 4, 0, "E02DLIBRN");
    fields[17] = fieldE02DLICCY =
    new CharacterField(message, HEADERSIZE + 121, 3, "E02DLICCY");
    fields[18] = fieldE02DLIGLN =
    new DecimalField(message, HEADERSIZE + 124, 17, 0, "E02DLIGLN");
    fields[19] = fieldE02DLIIVA =
    new CharacterField(message, HEADERSIZE + 141, 1, "E02DLIIVA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02DEAACC using a String value.
  */
  public void setE02DEAACC(String newvalue)
  {
    fieldE02DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E02DEAACC as a String.
  */
  public String getE02DEAACC()
  {
    return fieldE02DEAACC.getString();
  }

  /**
  * Set numeric field E02DEAACC using a BigDecimal value.
  */
  public void setE02DEAACC(BigDecimal newvalue)
  {
    fieldE02DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DEAACC()
  {
    return fieldE02DEAACC.getBigDecimal();
  }

  /**
  * Set field E02DLICDE using a String value.
  */
  public void setE02DLICDE(String newvalue)
  {
    fieldE02DLICDE.setString(newvalue);
  }

  /**
  * Get value of field E02DLICDE as a String.
  */
  public String getE02DLICDE()
  {
    return fieldE02DLICDE.getString();
  }

  /**
  * Set field E02DLINME using a String value.
  */
  public void setE02DLINME(String newvalue)
  {
    fieldE02DLINME.setString(newvalue);
  }

  /**
  * Get value of field E02DLINME as a String.
  */
  public String getE02DLINME()
  {
    return fieldE02DLINME.getString();
  }

  /**
  * Set field E02DLITYP using a String value.
  */
  public void setE02DLITYP(String newvalue)
  {
    fieldE02DLITYP.setString(newvalue);
  }

  /**
  * Get value of field E02DLITYP as a String.
  */
  public String getE02DLITYP()
  {
    return fieldE02DLITYP.getString();
  }

  /**
  * Set field E02DLIDPM using a String value.
  */
  public void setE02DLIDPM(String newvalue)
  {
    fieldE02DLIDPM.setString(newvalue);
  }

  /**
  * Get value of field E02DLIDPM as a String.
  */
  public String getE02DLIDPM()
  {
    return fieldE02DLIDPM.getString();
  }

  /**
  * Set numeric field E02DLIDPM using a BigDecimal value.
  */
  public void setE02DLIDPM(BigDecimal newvalue)
  {
    fieldE02DLIDPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLIDPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLIDPM()
  {
    return fieldE02DLIDPM.getBigDecimal();
  }

  /**
  * Set field E02DLIFAC using a String value.
  */
  public void setE02DLIFAC(String newvalue)
  {
    fieldE02DLIFAC.setString(newvalue);
  }

  /**
  * Get value of field E02DLIFAC as a String.
  */
  public String getE02DLIFAC()
  {
    return fieldE02DLIFAC.getString();
  }

  /**
  * Set field E02DLIBNK using a String value.
  */
  public void setE02DLIBNK(String newvalue)
  {
    fieldE02DLIBNK.setString(newvalue);
  }

  /**
  * Get value of field E02DLIBNK as a String.
  */
  public String getE02DLIBNK()
  {
    return fieldE02DLIBNK.getString();
  }

  /**
  * Set field E02DLIBRN using a String value.
  */
  public void setE02DLIBRN(String newvalue)
  {
    fieldE02DLIBRN.setString(newvalue);
  }

  /**
  * Get value of field E02DLIBRN as a String.
  */
  public String getE02DLIBRN()
  {
    return fieldE02DLIBRN.getString();
  }

  /**
  * Set numeric field E02DLIBRN using a BigDecimal value.
  */
  public void setE02DLIBRN(BigDecimal newvalue)
  {
    fieldE02DLIBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLIBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLIBRN()
  {
    return fieldE02DLIBRN.getBigDecimal();
  }

  /**
  * Set field E02DLICCY using a String value.
  */
  public void setE02DLICCY(String newvalue)
  {
    fieldE02DLICCY.setString(newvalue);
  }

  /**
  * Get value of field E02DLICCY as a String.
  */
  public String getE02DLICCY()
  {
    return fieldE02DLICCY.getString();
  }

  /**
  * Set field E02DLIGLN using a String value.
  */
  public void setE02DLIGLN(String newvalue)
  {
    fieldE02DLIGLN.setString(newvalue);
  }

  /**
  * Get value of field E02DLIGLN as a String.
  */
  public String getE02DLIGLN()
  {
    return fieldE02DLIGLN.getString();
  }

  /**
  * Set numeric field E02DLIGLN using a BigDecimal value.
  */
  public void setE02DLIGLN(BigDecimal newvalue)
  {
    fieldE02DLIGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLIGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLIGLN()
  {
    return fieldE02DLIGLN.getBigDecimal();
  }

  /**
  * Set field E02DLIIVA using a String value.
  */
  public void setE02DLIIVA(String newvalue)
  {
    fieldE02DLIIVA.setString(newvalue);
  }

  /**
  * Get value of field E02DLIIVA as a String.
  */
  public String getE02DLIIVA()
  {
    return fieldE02DLIIVA.getString();
  }

}
