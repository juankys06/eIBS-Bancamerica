package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0340DS physical file definition.
* 
* File level identifier is 1030121192030.
* Record format level identifier is 3C28E7F8C7ED3.
*/

public class EWD0340DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDFNM",
                                     "EWDMIN",
                                     "EWDLNM",
                                     "EWDMAD",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDFNM",
                                   "EWDMIN",
                                   "EWDLNM",
                                   "EWDMAD",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192030";
  final static String rid = "3C28E7F8C7ED3";
  final static String fmtname = "EWD0340DS";
  final int FIELDCOUNT = 5;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDFNM = null;
  private CharacterField fieldEWDMIN = null;
  private CharacterField fieldEWDLNM = null;
  private CharacterField fieldEWDMAD = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0340DSMessage.
  */
  public EWD0340DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 112;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDFNM =
    new CharacterField(message, HEADERSIZE + 0, 25, "EWDFNM");
    fields[1] = fieldEWDMIN =
    new CharacterField(message, HEADERSIZE + 25, 1, "EWDMIN");
    fields[2] = fieldEWDLNM =
    new CharacterField(message, HEADERSIZE + 26, 25, "EWDLNM");
    fields[3] = fieldEWDMAD =
    new CharacterField(message, HEADERSIZE + 51, 60, "EWDMAD");
    fields[4] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 111, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDFNM using a String value.
  */
  public void setEWDFNM(String newvalue)
  {
    fieldEWDFNM.setString(newvalue);
  }

  /**
  * Get value of field EWDFNM as a String.
  */
  public String getEWDFNM()
  {
    return fieldEWDFNM.getString();
  }

  /**
  * Set field EWDMIN using a String value.
  */
  public void setEWDMIN(String newvalue)
  {
    fieldEWDMIN.setString(newvalue);
  }

  /**
  * Get value of field EWDMIN as a String.
  */
  public String getEWDMIN()
  {
    return fieldEWDMIN.getString();
  }

  /**
  * Set field EWDLNM using a String value.
  */
  public void setEWDLNM(String newvalue)
  {
    fieldEWDLNM.setString(newvalue);
  }

  /**
  * Get value of field EWDLNM as a String.
  */
  public String getEWDLNM()
  {
    return fieldEWDLNM.getString();
  }

  /**
  * Set field EWDMAD using a String value.
  */
  public void setEWDMAD(String newvalue)
  {
    fieldEWDMAD.setString(newvalue);
  }

  /**
  * Get value of field EWDMAD as a String.
  */
  public String getEWDMAD()
  {
    return fieldEWDMAD.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
