package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EEX000001 physical file definition.
* 
* File level identifier is 1051101190730.
* Record format level identifier is 4643291659DDB.
*/

public class EEX000001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01EXMACD",
                                     "D01EXMACD",
                                     "E01EXMTYP",
                                     "D01EXMTYP",
                                     "E01EXMPRO",
                                     "D01EXMPRO",
                                     "E01EXMCUN",
                                     "D01EXMCUN",
                                     "E01EXMACC",
                                     "E01EXMUCX",
                                     "D01EXMUCX",
                                     "E01EXMCOM",
                                     "D01EXMCOM",
                                     "E01EXMSDY",
                                     "E01EXMSDM",
                                     "E01EXMSDD",
                                     "E01EXMMAY",
                                     "E01EXMMAM",
                                     "E01EXMMAD",
                                     "E01EXMUSR",
                                     "E01EXMDTE",
                                     "E01EXMTIM"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01EXMACD",
                                   "D01EXMACD",
                                   "E01EXMTYP",
                                   "D01EXMTYP",
                                   "E01EXMPRO",
                                   "D01EXMPRO",
                                   "E01EXMCUN",
                                   "D01EXMCUN",
                                   "E01EXMACC",
                                   "E01EXMUCX",
                                   "D01EXMUCX",
                                   "E01EXMCOM",
                                   "D01EXMCOM",
                                   "E01EXMSDY",
                                   "E01EXMSDM",
                                   "E01EXMSDD",
                                   "E01EXMMAY",
                                   "E01EXMMAM",
                                   "E01EXMMAD",
                                   "E01EXMUSR",
                                   "E01EXMDTE",
                                   "E01EXMTIM"
                                 };
  final static String fid = "1051101190730";
  final static String rid = "4643291659DDB";
  final static String fmtname = "EEX000001";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01EXMACD = null;
  private CharacterField fieldD01EXMACD = null;
  private CharacterField fieldE01EXMTYP = null;
  private CharacterField fieldD01EXMTYP = null;
  private CharacterField fieldE01EXMPRO = null;
  private CharacterField fieldD01EXMPRO = null;
  private DecimalField fieldE01EXMCUN = null;
  private CharacterField fieldD01EXMCUN = null;
  private DecimalField fieldE01EXMACC = null;
  private CharacterField fieldE01EXMUCX = null;
  private CharacterField fieldD01EXMUCX = null;
  private CharacterField fieldE01EXMCOM = null;
  private CharacterField fieldD01EXMCOM = null;
  private DecimalField fieldE01EXMSDY = null;
  private DecimalField fieldE01EXMSDM = null;
  private DecimalField fieldE01EXMSDD = null;
  private DecimalField fieldE01EXMMAY = null;
  private DecimalField fieldE01EXMMAM = null;
  private DecimalField fieldE01EXMMAD = null;
  private CharacterField fieldE01EXMUSR = null;
  private DecimalField fieldE01EXMDTE = null;
  private DecimalField fieldE01EXMTIM = null;

  /**
  * Constructor for EEX000001Message.
  */
  public EEX000001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 335;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01EXMACD =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01EXMACD");
    fields[10] = fieldD01EXMACD =
    new CharacterField(message, HEADERSIZE + 44, 35, "D01EXMACD");
    fields[11] = fieldE01EXMTYP =
    new CharacterField(message, HEADERSIZE + 79, 4, "E01EXMTYP");
    fields[12] = fieldD01EXMTYP =
    new CharacterField(message, HEADERSIZE + 83, 35, "D01EXMTYP");
    fields[13] = fieldE01EXMPRO =
    new CharacterField(message, HEADERSIZE + 118, 4, "E01EXMPRO");
    fields[14] = fieldD01EXMPRO =
    new CharacterField(message, HEADERSIZE + 122, 35, "D01EXMPRO");
    fields[15] = fieldE01EXMCUN =
    new DecimalField(message, HEADERSIZE + 157, 10, 0, "E01EXMCUN");
    fields[16] = fieldD01EXMCUN =
    new CharacterField(message, HEADERSIZE + 167, 35, "D01EXMCUN");
    fields[17] = fieldE01EXMACC =
    new DecimalField(message, HEADERSIZE + 202, 13, 0, "E01EXMACC");
    fields[18] = fieldE01EXMUCX =
    new CharacterField(message, HEADERSIZE + 215, 4, "E01EXMUCX");
    fields[19] = fieldD01EXMUCX =
    new CharacterField(message, HEADERSIZE + 219, 35, "D01EXMUCX");
    fields[20] = fieldE01EXMCOM =
    new CharacterField(message, HEADERSIZE + 254, 4, "E01EXMCOM");
    fields[21] = fieldD01EXMCOM =
    new CharacterField(message, HEADERSIZE + 258, 35, "D01EXMCOM");
    fields[22] = fieldE01EXMSDY =
    new DecimalField(message, HEADERSIZE + 293, 3, 0, "E01EXMSDY");
    fields[23] = fieldE01EXMSDM =
    new DecimalField(message, HEADERSIZE + 296, 3, 0, "E01EXMSDM");
    fields[24] = fieldE01EXMSDD =
    new DecimalField(message, HEADERSIZE + 299, 3, 0, "E01EXMSDD");
    fields[25] = fieldE01EXMMAY =
    new DecimalField(message, HEADERSIZE + 302, 3, 0, "E01EXMMAY");
    fields[26] = fieldE01EXMMAM =
    new DecimalField(message, HEADERSIZE + 305, 3, 0, "E01EXMMAM");
    fields[27] = fieldE01EXMMAD =
    new DecimalField(message, HEADERSIZE + 308, 3, 0, "E01EXMMAD");
    fields[28] = fieldE01EXMUSR =
    new CharacterField(message, HEADERSIZE + 311, 10, "E01EXMUSR");
    fields[29] = fieldE01EXMDTE =
    new DecimalField(message, HEADERSIZE + 321, 7, 0, "E01EXMDTE");
    fields[30] = fieldE01EXMTIM =
    new DecimalField(message, HEADERSIZE + 328, 7, 0, "E01EXMTIM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01EXMACD using a String value.
  */
  public void setE01EXMACD(String newvalue)
  {
    fieldE01EXMACD.setString(newvalue);
  }

  /**
  * Get value of field E01EXMACD as a String.
  */
  public String getE01EXMACD()
  {
    return fieldE01EXMACD.getString();
  }

  /**
  * Set field D01EXMACD using a String value.
  */
  public void setD01EXMACD(String newvalue)
  {
    fieldD01EXMACD.setString(newvalue);
  }

  /**
  * Get value of field D01EXMACD as a String.
  */
  public String getD01EXMACD()
  {
    return fieldD01EXMACD.getString();
  }

  /**
  * Set field E01EXMTYP using a String value.
  */
  public void setE01EXMTYP(String newvalue)
  {
    fieldE01EXMTYP.setString(newvalue);
  }

  /**
  * Get value of field E01EXMTYP as a String.
  */
  public String getE01EXMTYP()
  {
    return fieldE01EXMTYP.getString();
  }

  /**
  * Set field D01EXMTYP using a String value.
  */
  public void setD01EXMTYP(String newvalue)
  {
    fieldD01EXMTYP.setString(newvalue);
  }

  /**
  * Get value of field D01EXMTYP as a String.
  */
  public String getD01EXMTYP()
  {
    return fieldD01EXMTYP.getString();
  }

  /**
  * Set field E01EXMPRO using a String value.
  */
  public void setE01EXMPRO(String newvalue)
  {
    fieldE01EXMPRO.setString(newvalue);
  }

  /**
  * Get value of field E01EXMPRO as a String.
  */
  public String getE01EXMPRO()
  {
    return fieldE01EXMPRO.getString();
  }

  /**
  * Set field D01EXMPRO using a String value.
  */
  public void setD01EXMPRO(String newvalue)
  {
    fieldD01EXMPRO.setString(newvalue);
  }

  /**
  * Get value of field D01EXMPRO as a String.
  */
  public String getD01EXMPRO()
  {
    return fieldD01EXMPRO.getString();
  }

  /**
  * Set field E01EXMCUN using a String value.
  */
  public void setE01EXMCUN(String newvalue)
  {
    fieldE01EXMCUN.setString(newvalue);
  }

  /**
  * Get value of field E01EXMCUN as a String.
  */
  public String getE01EXMCUN()
  {
    return fieldE01EXMCUN.getString();
  }

  /**
  * Set numeric field E01EXMCUN using a BigDecimal value.
  */
  public void setE01EXMCUN(BigDecimal newvalue)
  {
    fieldE01EXMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMCUN()
  {
    return fieldE01EXMCUN.getBigDecimal();
  }

  /**
  * Set field D01EXMCUN using a String value.
  */
  public void setD01EXMCUN(String newvalue)
  {
    fieldD01EXMCUN.setString(newvalue);
  }

  /**
  * Get value of field D01EXMCUN as a String.
  */
  public String getD01EXMCUN()
  {
    return fieldD01EXMCUN.getString();
  }

  /**
  * Set field E01EXMACC using a String value.
  */
  public void setE01EXMACC(String newvalue)
  {
    fieldE01EXMACC.setString(newvalue);
  }

  /**
  * Get value of field E01EXMACC as a String.
  */
  public String getE01EXMACC()
  {
    return fieldE01EXMACC.getString();
  }

  /**
  * Set numeric field E01EXMACC using a BigDecimal value.
  */
  public void setE01EXMACC(BigDecimal newvalue)
  {
    fieldE01EXMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMACC()
  {
    return fieldE01EXMACC.getBigDecimal();
  }

  /**
  * Set field E01EXMUCX using a String value.
  */
  public void setE01EXMUCX(String newvalue)
  {
    fieldE01EXMUCX.setString(newvalue);
  }

  /**
  * Get value of field E01EXMUCX as a String.
  */
  public String getE01EXMUCX()
  {
    return fieldE01EXMUCX.getString();
  }

  /**
  * Set field D01EXMUCX using a String value.
  */
  public void setD01EXMUCX(String newvalue)
  {
    fieldD01EXMUCX.setString(newvalue);
  }

  /**
  * Get value of field D01EXMUCX as a String.
  */
  public String getD01EXMUCX()
  {
    return fieldD01EXMUCX.getString();
  }

  /**
  * Set field E01EXMCOM using a String value.
  */
  public void setE01EXMCOM(String newvalue)
  {
    fieldE01EXMCOM.setString(newvalue);
  }

  /**
  * Get value of field E01EXMCOM as a String.
  */
  public String getE01EXMCOM()
  {
    return fieldE01EXMCOM.getString();
  }

  /**
  * Set field D01EXMCOM using a String value.
  */
  public void setD01EXMCOM(String newvalue)
  {
    fieldD01EXMCOM.setString(newvalue);
  }

  /**
  * Get value of field D01EXMCOM as a String.
  */
  public String getD01EXMCOM()
  {
    return fieldD01EXMCOM.getString();
  }

  /**
  * Set field E01EXMSDY using a String value.
  */
  public void setE01EXMSDY(String newvalue)
  {
    fieldE01EXMSDY.setString(newvalue);
  }

  /**
  * Get value of field E01EXMSDY as a String.
  */
  public String getE01EXMSDY()
  {
    return fieldE01EXMSDY.getString();
  }

  /**
  * Set numeric field E01EXMSDY using a BigDecimal value.
  */
  public void setE01EXMSDY(BigDecimal newvalue)
  {
    fieldE01EXMSDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMSDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMSDY()
  {
    return fieldE01EXMSDY.getBigDecimal();
  }

  /**
  * Set field E01EXMSDM using a String value.
  */
  public void setE01EXMSDM(String newvalue)
  {
    fieldE01EXMSDM.setString(newvalue);
  }

  /**
  * Get value of field E01EXMSDM as a String.
  */
  public String getE01EXMSDM()
  {
    return fieldE01EXMSDM.getString();
  }

  /**
  * Set numeric field E01EXMSDM using a BigDecimal value.
  */
  public void setE01EXMSDM(BigDecimal newvalue)
  {
    fieldE01EXMSDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMSDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMSDM()
  {
    return fieldE01EXMSDM.getBigDecimal();
  }

  /**
  * Set field E01EXMSDD using a String value.
  */
  public void setE01EXMSDD(String newvalue)
  {
    fieldE01EXMSDD.setString(newvalue);
  }

  /**
  * Get value of field E01EXMSDD as a String.
  */
  public String getE01EXMSDD()
  {
    return fieldE01EXMSDD.getString();
  }

  /**
  * Set numeric field E01EXMSDD using a BigDecimal value.
  */
  public void setE01EXMSDD(BigDecimal newvalue)
  {
    fieldE01EXMSDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMSDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMSDD()
  {
    return fieldE01EXMSDD.getBigDecimal();
  }

  /**
  * Set field E01EXMMAY using a String value.
  */
  public void setE01EXMMAY(String newvalue)
  {
    fieldE01EXMMAY.setString(newvalue);
  }

  /**
  * Get value of field E01EXMMAY as a String.
  */
  public String getE01EXMMAY()
  {
    return fieldE01EXMMAY.getString();
  }

  /**
  * Set numeric field E01EXMMAY using a BigDecimal value.
  */
  public void setE01EXMMAY(BigDecimal newvalue)
  {
    fieldE01EXMMAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMMAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMMAY()
  {
    return fieldE01EXMMAY.getBigDecimal();
  }

  /**
  * Set field E01EXMMAM using a String value.
  */
  public void setE01EXMMAM(String newvalue)
  {
    fieldE01EXMMAM.setString(newvalue);
  }

  /**
  * Get value of field E01EXMMAM as a String.
  */
  public String getE01EXMMAM()
  {
    return fieldE01EXMMAM.getString();
  }

  /**
  * Set numeric field E01EXMMAM using a BigDecimal value.
  */
  public void setE01EXMMAM(BigDecimal newvalue)
  {
    fieldE01EXMMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMMAM()
  {
    return fieldE01EXMMAM.getBigDecimal();
  }

  /**
  * Set field E01EXMMAD using a String value.
  */
  public void setE01EXMMAD(String newvalue)
  {
    fieldE01EXMMAD.setString(newvalue);
  }

  /**
  * Get value of field E01EXMMAD as a String.
  */
  public String getE01EXMMAD()
  {
    return fieldE01EXMMAD.getString();
  }

  /**
  * Set numeric field E01EXMMAD using a BigDecimal value.
  */
  public void setE01EXMMAD(BigDecimal newvalue)
  {
    fieldE01EXMMAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMMAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMMAD()
  {
    return fieldE01EXMMAD.getBigDecimal();
  }

  /**
  * Set field E01EXMUSR using a String value.
  */
  public void setE01EXMUSR(String newvalue)
  {
    fieldE01EXMUSR.setString(newvalue);
  }

  /**
  * Get value of field E01EXMUSR as a String.
  */
  public String getE01EXMUSR()
  {
    return fieldE01EXMUSR.getString();
  }

  /**
  * Set field E01EXMDTE using a String value.
  */
  public void setE01EXMDTE(String newvalue)
  {
    fieldE01EXMDTE.setString(newvalue);
  }

  /**
  * Get value of field E01EXMDTE as a String.
  */
  public String getE01EXMDTE()
  {
    return fieldE01EXMDTE.getString();
  }

  /**
  * Set numeric field E01EXMDTE using a BigDecimal value.
  */
  public void setE01EXMDTE(BigDecimal newvalue)
  {
    fieldE01EXMDTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMDTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMDTE()
  {
    return fieldE01EXMDTE.getBigDecimal();
  }

  /**
  * Set field E01EXMTIM using a String value.
  */
  public void setE01EXMTIM(String newvalue)
  {
    fieldE01EXMTIM.setString(newvalue);
  }

  /**
  * Get value of field E01EXMTIM as a String.
  */
  public String getE01EXMTIM()
  {
    return fieldE01EXMTIM.getString();
  }

  /**
  * Set numeric field E01EXMTIM using a BigDecimal value.
  */
  public void setE01EXMTIM(BigDecimal newvalue)
  {
    fieldE01EXMTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXMTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXMTIM()
  {
    return fieldE01EXMTIM.getBigDecimal();
  }

}
