package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0013DS physical file definition.
* 
* File level identifier is 1030129190825.
* Record format level identifier is 55B4A812EF144.
*/

public class EWD0013DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSHR",
                                     "EWDBRN",
                                     "EWDNME",
                                     "EWDADR",
                                     "EWDCIT",
                                     "EWDPHN",
                                     "EWDDID",
                                     "EWDUS1",
                                     "EWDUS2",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSHR",
                                   "EWDBRN",
                                   "EWDNME",
                                   "EWDADR",
                                   "EWDCIT",
                                   "EWDPHN",
                                   "EWDDID",
                                   "EWDUS1",
                                   "EWDUS2",
                                   "EWDOPE"
                                 };
  final static String fid = "1030129190825";
  final static String rid = "55B4A812EF144";
  final static String fmtname = "EWD0013DS";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSHR = null;
  private DecimalField fieldEWDBRN = null;
  private CharacterField fieldEWDNME = null;
  private CharacterField fieldEWDADR = null;
  private CharacterField fieldEWDCIT = null;
  private DecimalField fieldEWDPHN = null;
  private CharacterField fieldEWDDID = null;
  private CharacterField fieldEWDUS1 = null;
  private CharacterField fieldEWDUS2 = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0013DSMessage.
  */
  public EWD0013DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 147;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSHR =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDSHR");
    fields[1] = fieldEWDBRN =
    new DecimalField(message, HEADERSIZE + 2, 4, 0, "EWDBRN");
    fields[2] = fieldEWDNME =
    new CharacterField(message, HEADERSIZE + 6, 35, "EWDNME");
    fields[3] = fieldEWDADR =
    new CharacterField(message, HEADERSIZE + 41, 35, "EWDADR");
    fields[4] = fieldEWDCIT =
    new CharacterField(message, HEADERSIZE + 76, 35, "EWDCIT");
    fields[5] = fieldEWDPHN =
    new DecimalField(message, HEADERSIZE + 111, 12, 0, "EWDPHN");
    fields[6] = fieldEWDDID =
    new CharacterField(message, HEADERSIZE + 123, 15, "EWDDID");
    fields[7] = fieldEWDUS1 =
    new CharacterField(message, HEADERSIZE + 138, 4, "EWDUS1");
    fields[8] = fieldEWDUS2 =
    new CharacterField(message, HEADERSIZE + 142, 4, "EWDUS2");
    fields[9] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 146, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSHR using a String value.
  */
  public void setEWDSHR(String newvalue)
  {
    fieldEWDSHR.setString(newvalue);
  }

  /**
  * Get value of field EWDSHR as a String.
  */
  public String getEWDSHR()
  {
    return fieldEWDSHR.getString();
  }

  /**
  * Set field EWDBRN using a String value.
  */
  public void setEWDBRN(String newvalue)
  {
    fieldEWDBRN.setString(newvalue);
  }

  /**
  * Get value of field EWDBRN as a String.
  */
  public String getEWDBRN()
  {
    return fieldEWDBRN.getString();
  }

  /**
  * Set numeric field EWDBRN using a BigDecimal value.
  */
  public void setEWDBRN(BigDecimal newvalue)
  {
    fieldEWDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDBRN()
  {
    return fieldEWDBRN.getBigDecimal();
  }

  /**
  * Set field EWDNME using a String value.
  */
  public void setEWDNME(String newvalue)
  {
    fieldEWDNME.setString(newvalue);
  }

  /**
  * Get value of field EWDNME as a String.
  */
  public String getEWDNME()
  {
    return fieldEWDNME.getString();
  }

  /**
  * Set field EWDADR using a String value.
  */
  public void setEWDADR(String newvalue)
  {
    fieldEWDADR.setString(newvalue);
  }

  /**
  * Get value of field EWDADR as a String.
  */
  public String getEWDADR()
  {
    return fieldEWDADR.getString();
  }

  /**
  * Set field EWDCIT using a String value.
  */
  public void setEWDCIT(String newvalue)
  {
    fieldEWDCIT.setString(newvalue);
  }

  /**
  * Get value of field EWDCIT as a String.
  */
  public String getEWDCIT()
  {
    return fieldEWDCIT.getString();
  }

  /**
  * Set field EWDPHN using a String value.
  */
  public void setEWDPHN(String newvalue)
  {
    fieldEWDPHN.setString(newvalue);
  }

  /**
  * Get value of field EWDPHN as a String.
  */
  public String getEWDPHN()
  {
    return fieldEWDPHN.getString();
  }

  /**
  * Set numeric field EWDPHN using a BigDecimal value.
  */
  public void setEWDPHN(BigDecimal newvalue)
  {
    fieldEWDPHN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDPHN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDPHN()
  {
    return fieldEWDPHN.getBigDecimal();
  }

  /**
  * Set field EWDDID using a String value.
  */
  public void setEWDDID(String newvalue)
  {
    fieldEWDDID.setString(newvalue);
  }

  /**
  * Get value of field EWDDID as a String.
  */
  public String getEWDDID()
  {
    return fieldEWDDID.getString();
  }

  /**
  * Set field EWDUS1 using a String value.
  */
  public void setEWDUS1(String newvalue)
  {
    fieldEWDUS1.setString(newvalue);
  }

  /**
  * Get value of field EWDUS1 as a String.
  */
  public String getEWDUS1()
  {
    return fieldEWDUS1.getString();
  }

  /**
  * Set field EWDUS2 using a String value.
  */
  public void setEWDUS2(String newvalue)
  {
    fieldEWDUS2.setString(newvalue);
  }

  /**
  * Get value of field EWDUS2 as a String.
  */
  public String getEWDUS2()
  {
    return fieldEWDUS2.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
