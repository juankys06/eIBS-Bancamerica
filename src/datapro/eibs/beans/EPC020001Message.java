package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPC020001 physical file definition.
* 
* File level identifier is 1080220203738.
* Record format level identifier is 4CABF442649C7.
*/

public class EPC020001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNOCFL",
                                     "E01CNORCD",
                                     "E01CNODSC",
                                     "E01PCMNUM",
                                     "E01PCMBRN",
                                     "E01PCMCCY",
                                     "E01PCMACC",
                                     "E01PCMCCN",
                                     "E01PCMOPM",
                                     "E01PCMOPD",
                                     "E01PCMOPY",
                                     "E01PCMCUN",
                                     "E01PCMNME",
                                     "E01PCMVSL",
                                     "E01TOTVSL",
                                     "E01TOTNUM",
                                     "D01PCMCUN"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNOCFL",
                                   "E01CNORCD",
                                   "E01CNODSC",
                                   "E01PCMNUM",
                                   "E01PCMBRN",
                                   "E01PCMCCY",
                                   "E01PCMACC",
                                   "E01PCMCCN",
                                   "E01PCMOPM",
                                   "E01PCMOPD",
                                   "E01PCMOPY",
                                   "E01PCMCUN",
                                   "E01PCMNME",
                                   "E01PCMVSL",
                                   "E01TOTVSL",
                                   "E01TOTNUM",
                                   "D01PCMCUN"
                                 };
  final static String fid = "1080220203738";
  final static String rid = "4CABF442649C7";
  final static String fmtname = "EPC020001";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNOCFL = null;
  private CharacterField fieldE01CNORCD = null;
  private CharacterField fieldE01CNODSC = null;
  private DecimalField fieldE01PCMNUM = null;
  private DecimalField fieldE01PCMBRN = null;
  private CharacterField fieldE01PCMCCY = null;
  private DecimalField fieldE01PCMACC = null;
  private DecimalField fieldE01PCMCCN = null;
  private DecimalField fieldE01PCMOPM = null;
  private DecimalField fieldE01PCMOPD = null;
  private DecimalField fieldE01PCMOPY = null;
  private DecimalField fieldE01PCMCUN = null;
  private CharacterField fieldE01PCMNME = null;
  private DecimalField fieldE01PCMVSL = null;
  private DecimalField fieldE01TOTVSL = null;
  private DecimalField fieldE01TOTNUM = null;
  private CharacterField fieldD01PCMCUN = null;

  /**
  * Constructor for EPC020001Message.
  */
  public EPC020001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 269;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNOCFL =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01CNOCFL");
    fields[10] = fieldE01CNORCD =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01CNORCD");
    fields[11] = fieldE01CNODSC =
    new CharacterField(message, HEADERSIZE + 48, 35, "E01CNODSC");
    fields[12] = fieldE01PCMNUM =
    new DecimalField(message, HEADERSIZE + 83, 7, 0, "E01PCMNUM");
    fields[13] = fieldE01PCMBRN =
    new DecimalField(message, HEADERSIZE + 90, 4, 0, "E01PCMBRN");
    fields[14] = fieldE01PCMCCY =
    new CharacterField(message, HEADERSIZE + 94, 3, "E01PCMCCY");
    fields[15] = fieldE01PCMACC =
    new DecimalField(message, HEADERSIZE + 97, 13, 0, "E01PCMACC");
    fields[16] = fieldE01PCMCCN =
    new DecimalField(message, HEADERSIZE + 110, 9, 0, "E01PCMCCN");
    fields[17] = fieldE01PCMOPM =
    new DecimalField(message, HEADERSIZE + 119, 3, 0, "E01PCMOPM");
    fields[18] = fieldE01PCMOPD =
    new DecimalField(message, HEADERSIZE + 122, 3, 0, "E01PCMOPD");
    fields[19] = fieldE01PCMOPY =
    new DecimalField(message, HEADERSIZE + 125, 3, 0, "E01PCMOPY");
    fields[20] = fieldE01PCMCUN =
    new DecimalField(message, HEADERSIZE + 128, 10, 0, "E01PCMCUN");
    fields[21] = fieldE01PCMNME =
    new CharacterField(message, HEADERSIZE + 138, 45, "E01PCMNME");
    fields[22] = fieldE01PCMVSL =
    new DecimalField(message, HEADERSIZE + 183, 17, 2, "E01PCMVSL");
    fields[23] = fieldE01TOTVSL =
    new DecimalField(message, HEADERSIZE + 200, 17, 2, "E01TOTVSL");
    fields[24] = fieldE01TOTNUM =
    new DecimalField(message, HEADERSIZE + 217, 7, 0, "E01TOTNUM");
    fields[25] = fieldD01PCMCUN =
    new CharacterField(message, HEADERSIZE + 224, 45, "D01PCMCUN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNOCFL using a String value.
  */
  public void setE01CNOCFL(String newvalue)
  {
    fieldE01CNOCFL.setString(newvalue);
  }

  /**
  * Get value of field E01CNOCFL as a String.
  */
  public String getE01CNOCFL()
  {
    return fieldE01CNOCFL.getString();
  }

  /**
  * Set field E01CNORCD using a String value.
  */
  public void setE01CNORCD(String newvalue)
  {
    fieldE01CNORCD.setString(newvalue);
  }

  /**
  * Get value of field E01CNORCD as a String.
  */
  public String getE01CNORCD()
  {
    return fieldE01CNORCD.getString();
  }

  /**
  * Set field E01CNODSC using a String value.
  */
  public void setE01CNODSC(String newvalue)
  {
    fieldE01CNODSC.setString(newvalue);
  }

  /**
  * Get value of field E01CNODSC as a String.
  */
  public String getE01CNODSC()
  {
    return fieldE01CNODSC.getString();
  }

  /**
  * Set field E01PCMNUM using a String value.
  */
  public void setE01PCMNUM(String newvalue)
  {
    fieldE01PCMNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PCMNUM as a String.
  */
  public String getE01PCMNUM()
  {
    return fieldE01PCMNUM.getString();
  }

  /**
  * Set numeric field E01PCMNUM using a BigDecimal value.
  */
  public void setE01PCMNUM(BigDecimal newvalue)
  {
    fieldE01PCMNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMNUM()
  {
    return fieldE01PCMNUM.getBigDecimal();
  }

  /**
  * Set field E01PCMBRN using a String value.
  */
  public void setE01PCMBRN(String newvalue)
  {
    fieldE01PCMBRN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMBRN as a String.
  */
  public String getE01PCMBRN()
  {
    return fieldE01PCMBRN.getString();
  }

  /**
  * Set numeric field E01PCMBRN using a BigDecimal value.
  */
  public void setE01PCMBRN(BigDecimal newvalue)
  {
    fieldE01PCMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMBRN()
  {
    return fieldE01PCMBRN.getBigDecimal();
  }

  /**
  * Set field E01PCMCCY using a String value.
  */
  public void setE01PCMCCY(String newvalue)
  {
    fieldE01PCMCCY.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCCY as a String.
  */
  public String getE01PCMCCY()
  {
    return fieldE01PCMCCY.getString();
  }

  /**
  * Set field E01PCMACC using a String value.
  */
  public void setE01PCMACC(String newvalue)
  {
    fieldE01PCMACC.setString(newvalue);
  }

  /**
  * Get value of field E01PCMACC as a String.
  */
  public String getE01PCMACC()
  {
    return fieldE01PCMACC.getString();
  }

  /**
  * Set numeric field E01PCMACC using a BigDecimal value.
  */
  public void setE01PCMACC(BigDecimal newvalue)
  {
    fieldE01PCMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMACC()
  {
    return fieldE01PCMACC.getBigDecimal();
  }

  /**
  * Set field E01PCMCCN using a String value.
  */
  public void setE01PCMCCN(String newvalue)
  {
    fieldE01PCMCCN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCCN as a String.
  */
  public String getE01PCMCCN()
  {
    return fieldE01PCMCCN.getString();
  }

  /**
  * Set numeric field E01PCMCCN using a BigDecimal value.
  */
  public void setE01PCMCCN(BigDecimal newvalue)
  {
    fieldE01PCMCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMCCN()
  {
    return fieldE01PCMCCN.getBigDecimal();
  }

  /**
  * Set field E01PCMOPM using a String value.
  */
  public void setE01PCMOPM(String newvalue)
  {
    fieldE01PCMOPM.setString(newvalue);
  }

  /**
  * Get value of field E01PCMOPM as a String.
  */
  public String getE01PCMOPM()
  {
    return fieldE01PCMOPM.getString();
  }

  /**
  * Set numeric field E01PCMOPM using a BigDecimal value.
  */
  public void setE01PCMOPM(BigDecimal newvalue)
  {
    fieldE01PCMOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMOPM()
  {
    return fieldE01PCMOPM.getBigDecimal();
  }

  /**
  * Set field E01PCMOPD using a String value.
  */
  public void setE01PCMOPD(String newvalue)
  {
    fieldE01PCMOPD.setString(newvalue);
  }

  /**
  * Get value of field E01PCMOPD as a String.
  */
  public String getE01PCMOPD()
  {
    return fieldE01PCMOPD.getString();
  }

  /**
  * Set numeric field E01PCMOPD using a BigDecimal value.
  */
  public void setE01PCMOPD(BigDecimal newvalue)
  {
    fieldE01PCMOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMOPD()
  {
    return fieldE01PCMOPD.getBigDecimal();
  }

  /**
  * Set field E01PCMOPY using a String value.
  */
  public void setE01PCMOPY(String newvalue)
  {
    fieldE01PCMOPY.setString(newvalue);
  }

  /**
  * Get value of field E01PCMOPY as a String.
  */
  public String getE01PCMOPY()
  {
    return fieldE01PCMOPY.getString();
  }

  /**
  * Set numeric field E01PCMOPY using a BigDecimal value.
  */
  public void setE01PCMOPY(BigDecimal newvalue)
  {
    fieldE01PCMOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMOPY()
  {
    return fieldE01PCMOPY.getBigDecimal();
  }

  /**
  * Set field E01PCMCUN using a String value.
  */
  public void setE01PCMCUN(String newvalue)
  {
    fieldE01PCMCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PCMCUN as a String.
  */
  public String getE01PCMCUN()
  {
    return fieldE01PCMCUN.getString();
  }

  /**
  * Set numeric field E01PCMCUN using a BigDecimal value.
  */
  public void setE01PCMCUN(BigDecimal newvalue)
  {
    fieldE01PCMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMCUN()
  {
    return fieldE01PCMCUN.getBigDecimal();
  }

  /**
  * Set field E01PCMNME using a String value.
  */
  public void setE01PCMNME(String newvalue)
  {
    fieldE01PCMNME.setString(newvalue);
  }

  /**
  * Get value of field E01PCMNME as a String.
  */
  public String getE01PCMNME()
  {
    return fieldE01PCMNME.getString();
  }

  /**
  * Set field E01PCMVSL using a String value.
  */
  public void setE01PCMVSL(String newvalue)
  {
    fieldE01PCMVSL.setString(newvalue);
  }

  /**
  * Get value of field E01PCMVSL as a String.
  */
  public String getE01PCMVSL()
  {
    return fieldE01PCMVSL.getString();
  }

  /**
  * Set numeric field E01PCMVSL using a BigDecimal value.
  */
  public void setE01PCMVSL(BigDecimal newvalue)
  {
    fieldE01PCMVSL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCMVSL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCMVSL()
  {
    return fieldE01PCMVSL.getBigDecimal();
  }

  /**
  * Set field E01TOTVSL using a String value.
  */
  public void setE01TOTVSL(String newvalue)
  {
    fieldE01TOTVSL.setString(newvalue);
  }

  /**
  * Get value of field E01TOTVSL as a String.
  */
  public String getE01TOTVSL()
  {
    return fieldE01TOTVSL.getString();
  }

  /**
  * Set numeric field E01TOTVSL using a BigDecimal value.
  */
  public void setE01TOTVSL(BigDecimal newvalue)
  {
    fieldE01TOTVSL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TOTVSL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TOTVSL()
  {
    return fieldE01TOTVSL.getBigDecimal();
  }

  /**
  * Set field E01TOTNUM using a String value.
  */
  public void setE01TOTNUM(String newvalue)
  {
    fieldE01TOTNUM.setString(newvalue);
  }

  /**
  * Get value of field E01TOTNUM as a String.
  */
  public String getE01TOTNUM()
  {
    return fieldE01TOTNUM.getString();
  }

  /**
  * Set numeric field E01TOTNUM using a BigDecimal value.
  */
  public void setE01TOTNUM(BigDecimal newvalue)
  {
    fieldE01TOTNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TOTNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TOTNUM()
  {
    return fieldE01TOTNUM.getBigDecimal();
  }

  /**
  * Set field D01PCMCUN using a String value.
  */
  public void setD01PCMCUN(String newvalue)
  {
    fieldD01PCMCUN.setString(newvalue);
  }

  /**
  * Get value of field D01PCMCUN as a String.
  */
  public String getD01PCMCUN()
  {
    return fieldD01PCMCUN.getString();
  }

}
