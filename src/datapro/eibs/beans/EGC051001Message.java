package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC051001 physical file definition.
* 
* File level identifier is 1030121191928.
* Record format level identifier is 46B3CF33B3CBE.
*/

public class EGC051001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "H01CODACC",
                                     "E01GCAFINY",
                                     "E01GCAFINM",
                                     "E01GCAFIND",
                                     "E01GCAFFNY",
                                     "E01GCAFFNM",
                                     "E01GCAFFND",
                                     "E01GCSALDC",
                                     "E01GCESTAD"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "H01CODACC",
                                   "E01GCAFINY",
                                   "E01GCAFINM",
                                   "E01GCAFIND",
                                   "E01GCAFFNY",
                                   "E01GCAFFNM",
                                   "E01GCAFFND",
                                   "E01GCSALDC",
                                   "E01GCESTAD"
                                 };
  final static String fid = "1030121191928";
  final static String rid = "46B3CF33B3CBE";
  final static String fmtname = "EGC051001";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldH01CODACC = null;
  private DecimalField fieldE01GCAFINY = null;
  private DecimalField fieldE01GCAFINM = null;
  private DecimalField fieldE01GCAFIND = null;
  private DecimalField fieldE01GCAFFNY = null;
  private DecimalField fieldE01GCAFFNM = null;
  private DecimalField fieldE01GCAFFND = null;
  private DecimalField fieldE01GCSALDC = null;
  private CharacterField fieldE01GCESTAD = null;

  /**
  * Constructor for EGC051001Message.
  */
  public EGC051001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 82;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldH01CODACC =
    new CharacterField(message, HEADERSIZE + 42, 4, "H01CODACC");
    fields[10] = fieldE01GCAFINY =
    new DecimalField(message, HEADERSIZE + 46, 3, 0, "E01GCAFINY");
    fields[11] = fieldE01GCAFINM =
    new DecimalField(message, HEADERSIZE + 49, 3, 0, "E01GCAFINM");
    fields[12] = fieldE01GCAFIND =
    new DecimalField(message, HEADERSIZE + 52, 3, 0, "E01GCAFIND");
    fields[13] = fieldE01GCAFFNY =
    new DecimalField(message, HEADERSIZE + 55, 3, 0, "E01GCAFFNY");
    fields[14] = fieldE01GCAFFNM =
    new DecimalField(message, HEADERSIZE + 58, 3, 0, "E01GCAFFNM");
    fields[15] = fieldE01GCAFFND =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "E01GCAFFND");
    fields[16] = fieldE01GCSALDC =
    new DecimalField(message, HEADERSIZE + 64, 17, 2, "E01GCSALDC");
    fields[17] = fieldE01GCESTAD =
    new CharacterField(message, HEADERSIZE + 81, 1, "E01GCESTAD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field H01CODACC using a String value.
  */
  public void setH01CODACC(String newvalue)
  {
    fieldH01CODACC.setString(newvalue);
  }

  /**
  * Get value of field H01CODACC as a String.
  */
  public String getH01CODACC()
  {
    return fieldH01CODACC.getString();
  }

  /**
  * Set field E01GCAFINY using a String value.
  */
  public void setE01GCAFINY(String newvalue)
  {
    fieldE01GCAFINY.setString(newvalue);
  }

  /**
  * Get value of field E01GCAFINY as a String.
  */
  public String getE01GCAFINY()
  {
    return fieldE01GCAFINY.getString();
  }

  /**
  * Set numeric field E01GCAFINY using a BigDecimal value.
  */
  public void setE01GCAFINY(BigDecimal newvalue)
  {
    fieldE01GCAFINY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCAFINY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCAFINY()
  {
    return fieldE01GCAFINY.getBigDecimal();
  }

  /**
  * Set field E01GCAFINM using a String value.
  */
  public void setE01GCAFINM(String newvalue)
  {
    fieldE01GCAFINM.setString(newvalue);
  }

  /**
  * Get value of field E01GCAFINM as a String.
  */
  public String getE01GCAFINM()
  {
    return fieldE01GCAFINM.getString();
  }

  /**
  * Set numeric field E01GCAFINM using a BigDecimal value.
  */
  public void setE01GCAFINM(BigDecimal newvalue)
  {
    fieldE01GCAFINM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCAFINM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCAFINM()
  {
    return fieldE01GCAFINM.getBigDecimal();
  }

  /**
  * Set field E01GCAFIND using a String value.
  */
  public void setE01GCAFIND(String newvalue)
  {
    fieldE01GCAFIND.setString(newvalue);
  }

  /**
  * Get value of field E01GCAFIND as a String.
  */
  public String getE01GCAFIND()
  {
    return fieldE01GCAFIND.getString();
  }

  /**
  * Set numeric field E01GCAFIND using a BigDecimal value.
  */
  public void setE01GCAFIND(BigDecimal newvalue)
  {
    fieldE01GCAFIND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCAFIND as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCAFIND()
  {
    return fieldE01GCAFIND.getBigDecimal();
  }

  /**
  * Set field E01GCAFFNY using a String value.
  */
  public void setE01GCAFFNY(String newvalue)
  {
    fieldE01GCAFFNY.setString(newvalue);
  }

  /**
  * Get value of field E01GCAFFNY as a String.
  */
  public String getE01GCAFFNY()
  {
    return fieldE01GCAFFNY.getString();
  }

  /**
  * Set numeric field E01GCAFFNY using a BigDecimal value.
  */
  public void setE01GCAFFNY(BigDecimal newvalue)
  {
    fieldE01GCAFFNY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCAFFNY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCAFFNY()
  {
    return fieldE01GCAFFNY.getBigDecimal();
  }

  /**
  * Set field E01GCAFFNM using a String value.
  */
  public void setE01GCAFFNM(String newvalue)
  {
    fieldE01GCAFFNM.setString(newvalue);
  }

  /**
  * Get value of field E01GCAFFNM as a String.
  */
  public String getE01GCAFFNM()
  {
    return fieldE01GCAFFNM.getString();
  }

  /**
  * Set numeric field E01GCAFFNM using a BigDecimal value.
  */
  public void setE01GCAFFNM(BigDecimal newvalue)
  {
    fieldE01GCAFFNM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCAFFNM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCAFFNM()
  {
    return fieldE01GCAFFNM.getBigDecimal();
  }

  /**
  * Set field E01GCAFFND using a String value.
  */
  public void setE01GCAFFND(String newvalue)
  {
    fieldE01GCAFFND.setString(newvalue);
  }

  /**
  * Get value of field E01GCAFFND as a String.
  */
  public String getE01GCAFFND()
  {
    return fieldE01GCAFFND.getString();
  }

  /**
  * Set numeric field E01GCAFFND using a BigDecimal value.
  */
  public void setE01GCAFFND(BigDecimal newvalue)
  {
    fieldE01GCAFFND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCAFFND as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCAFFND()
  {
    return fieldE01GCAFFND.getBigDecimal();
  }

  /**
  * Set field E01GCSALDC using a String value.
  */
  public void setE01GCSALDC(String newvalue)
  {
    fieldE01GCSALDC.setString(newvalue);
  }

  /**
  * Get value of field E01GCSALDC as a String.
  */
  public String getE01GCSALDC()
  {
    return fieldE01GCSALDC.getString();
  }

  /**
  * Set numeric field E01GCSALDC using a BigDecimal value.
  */
  public void setE01GCSALDC(BigDecimal newvalue)
  {
    fieldE01GCSALDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GCSALDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GCSALDC()
  {
    return fieldE01GCSALDC.getBigDecimal();
  }

  /**
  * Set field E01GCESTAD using a String value.
  */
  public void setE01GCESTAD(String newvalue)
  {
    fieldE01GCESTAD.setString(newvalue);
  }

  /**
  * Get value of field E01GCESTAD as a String.
  */
  public String getE01GCESTAD()
  {
    return fieldE01GCESTAD.getString();
  }

}
