package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from EDC00030 physical file definition.
* 
* File level identifier is 1020722183615.
* Record format level identifier is 3490E67EF4570.
*/

public class EDC00030Message extends MessageRecord
{
  final int FIELDCOUNT = 19;
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldEDCCUN = null;
  private DecimalField fieldEDCMES = null;
  private DecimalField fieldEDCANO = null;
  private CharacterField fieldDCRPRO = null;
  private DecimalField fieldDCRACC = null;
  private CharacterField fieldDCRCCY = null;
  private CharacterField fieldDCRCLA = null;
  private DecimalField fieldDCRDMP = null;
  private DecimalField fieldDCRDVP = null;
  private DecimalField fieldEDCXRT = null;

  /**
  * Constructor for EDC00030Message.
  */
  public EDC00030Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 122;
    fileid = "1020722183615";
    recordid = "3490E67EF4570";
    message = new byte[getByteLength()];
    formatname = "EDC00030";
    fieldnames = new String[FIELDCOUNT];
    tagnames = new String[FIELDCOUNT];
    fields = new MessageField[FIELDCOUNT];

    fieldnames[0] = "H01USERID";
    tagnames[0] = "H01USERID";
    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fieldnames[1] = "H01PROGRM";
    tagnames[1] = "H01PROGRM";
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fieldnames[2] = "H01TIMSYS";
    tagnames[2] = "H01TIMSYS";
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fieldnames[3] = "H01SCRCOD";
    tagnames[3] = "H01SCRCOD";
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fieldnames[4] = "H01OPECOD";
    tagnames[4] = "H01OPECOD";
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fieldnames[5] = "H01FLGMAS";
    tagnames[5] = "H01FLGMAS";
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fieldnames[6] = "H01FLGWK1";
    tagnames[6] = "H01FLGWK1";
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fieldnames[7] = "H01FLGWK2";
    tagnames[7] = "H01FLGWK2";
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fieldnames[8] = "H01FLGWK3";
    tagnames[8] = "H01FLGWK3";
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fieldnames[9] = "EDCCUN";
    tagnames[9] = "EDCCUN";
    fields[9] = fieldEDCCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "EDCCUN");
    fieldnames[10] = "EDCMES";
    tagnames[10] = "EDCMES";
    fields[10] = fieldEDCMES =
    new DecimalField(message, HEADERSIZE + 52, 3, 0, "EDCMES");
    fieldnames[11] = "EDCANO";
    tagnames[11] = "EDCANO";
    fields[11] = fieldEDCANO =
    new DecimalField(message, HEADERSIZE + 55, 5, 0, "EDCANO");
    fieldnames[12] = "DCRPRO";
    tagnames[12] = "DCRPRO";
    fields[12] = fieldDCRPRO =
    new CharacterField(message, HEADERSIZE + 60, 4, "DCRPRO");
    fieldnames[13] = "DCRACC";
    tagnames[13] = "DCRACC";
    fields[13] = fieldDCRACC =
    new DecimalField(message, HEADERSIZE + 64, 13, 0, "DCRACC");
    fieldnames[14] = "DCRCCY";
    tagnames[14] = "DCRCCY";
    fields[14] = fieldDCRCCY =
    new CharacterField(message, HEADERSIZE + 77, 3, "DCRCCY");
    fieldnames[15] = "DCRCLA";
    tagnames[15] = "DCRCLA";
    fields[15] = fieldDCRCLA =
    new CharacterField(message, HEADERSIZE + 80, 2, "DCRCLA");
    fieldnames[16] = "DCRDMP";
    tagnames[16] = "DCRDMP";
    fields[16] = fieldDCRDMP =
    new DecimalField(message, HEADERSIZE + 82, 19, 2, "DCRDMP");
    fieldnames[17] = "DCRDVP";
    tagnames[17] = "DCRDVP";
    fields[17] = fieldDCRDVP =
    new DecimalField(message, HEADERSIZE + 101, 19, 2, "DCRDVP");
    fieldnames[18] = "EDCXRT";
    tagnames[18] = "EDCXRT";
    fields[18] = fieldEDCXRT =
    new DecimalField(message, HEADERSIZE + 120, 2, 0, "EDCXRT");
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field EDCCUN using a String value.
  */
  public void setEDCCUN(String newvalue)
  {
    fieldEDCCUN.setString(newvalue);
  }

  /**
  * Get value of field EDCCUN as a String.
  */
  public String getEDCCUN()
  {
    return fieldEDCCUN.getString();
  }

  /**
  * Set numeric field EDCCUN using a BigDecimal value.
  */
  public void setEDCCUN(BigDecimal newvalue)
  {
    fieldEDCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EDCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEDCCUN()
  {
    return fieldEDCCUN.getBigDecimal();
  }

  /**
  * Set field EDCMES using a String value.
  */
  public void setEDCMES(String newvalue)
  {
    fieldEDCMES.setString(newvalue);
  }

  /**
  * Get value of field EDCMES as a String.
  */
  public String getEDCMES()
  {
    return fieldEDCMES.getString();
  }

  /**
  * Set numeric field EDCMES using a BigDecimal value.
  */
  public void setEDCMES(BigDecimal newvalue)
  {
    fieldEDCMES.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EDCMES as a BigDecimal.
  */
  public BigDecimal getBigDecimalEDCMES()
  {
    return fieldEDCMES.getBigDecimal();
  }

  /**
  * Set field EDCANO using a String value.
  */
  public void setEDCANO(String newvalue)
  {
    fieldEDCANO.setString(newvalue);
  }

  /**
  * Get value of field EDCANO as a String.
  */
  public String getEDCANO()
  {
    return fieldEDCANO.getString();
  }

  /**
  * Set numeric field EDCANO using a BigDecimal value.
  */
  public void setEDCANO(BigDecimal newvalue)
  {
    fieldEDCANO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EDCANO as a BigDecimal.
  */
  public BigDecimal getBigDecimalEDCANO()
  {
    return fieldEDCANO.getBigDecimal();
  }

  /**
  * Set field DCRPRO using a String value.
  */
  public void setDCRPRO(String newvalue)
  {
    fieldDCRPRO.setString(newvalue);
  }

  /**
  * Get value of field DCRPRO as a String.
  */
  public String getDCRPRO()
  {
    return fieldDCRPRO.getString();
  }

  /**
  * Set field DCRACC using a String value.
  */
  public void setDCRACC(String newvalue)
  {
    fieldDCRACC.setString(newvalue);
  }

  /**
  * Get value of field DCRACC as a String.
  */
  public String getDCRACC()
  {
    return fieldDCRACC.getString();
  }

  /**
  * Set numeric field DCRACC using a BigDecimal value.
  */
  public void setDCRACC(BigDecimal newvalue)
  {
    fieldDCRACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field DCRACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalDCRACC()
  {
    return fieldDCRACC.getBigDecimal();
  }

  /**
  * Set field DCRCCY using a String value.
  */
  public void setDCRCCY(String newvalue)
  {
    fieldDCRCCY.setString(newvalue);
  }

  /**
  * Get value of field DCRCCY as a String.
  */
  public String getDCRCCY()
  {
    return fieldDCRCCY.getString();
  }

  /**
  * Set field DCRCLA using a String value.
  */
  public void setDCRCLA(String newvalue)
  {
    fieldDCRCLA.setString(newvalue);
  }

  /**
  * Get value of field DCRCLA as a String.
  */
  public String getDCRCLA()
  {
    return fieldDCRCLA.getString();
  }

  /**
  * Set field DCRDMP using a String value.
  */
  public void setDCRDMP(String newvalue)
  {
    fieldDCRDMP.setString(newvalue);
  }

  /**
  * Get value of field DCRDMP as a String.
  */
  public String getDCRDMP()
  {
    return fieldDCRDMP.getString();
  }

  /**
  * Set numeric field DCRDMP using a BigDecimal value.
  */
  public void setDCRDMP(BigDecimal newvalue)
  {
    fieldDCRDMP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field DCRDMP as a BigDecimal.
  */
  public BigDecimal getBigDecimalDCRDMP()
  {
    return fieldDCRDMP.getBigDecimal();
  }

  /**
  * Set field DCRDVP using a String value.
  */
  public void setDCRDVP(String newvalue)
  {
    fieldDCRDVP.setString(newvalue);
  }

  /**
  * Get value of field DCRDVP as a String.
  */
  public String getDCRDVP()
  {
    return fieldDCRDVP.getString();
  }

  /**
  * Set numeric field DCRDVP using a BigDecimal value.
  */
  public void setDCRDVP(BigDecimal newvalue)
  {
    fieldDCRDVP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field DCRDVP as a BigDecimal.
  */
  public BigDecimal getBigDecimalDCRDVP()
  {
    return fieldDCRDVP.getBigDecimal();
  }

  /**
  * Set field EDCXRT using a String value.
  */
  public void setEDCXRT(String newvalue)
  {
    fieldEDCXRT.setString(newvalue);
  }

  /**
  * Get value of field EDCXRT as a String.
  */
  public String getEDCXRT()
  {
    return fieldEDCXRT.getString();
  }

  /**
  * Set numeric field EDCXRT using a BigDecimal value.
  */
  public void setEDCXRT(BigDecimal newvalue)
  {
    fieldEDCXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EDCXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEDCXRT()
  {
    return fieldEDCXRT.getBigDecimal();
  }

}
