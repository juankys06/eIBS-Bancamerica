package datapro.eibs.beans;


import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP070201 physical file definition.
* 
* File level identifier is 1060403113457.
* Record format level identifier is 435600A2244F2.
*/

public class EDP070201Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01DPFFMT",
                                     "E01DPFDSC",
                                     "E01DPFLGT",
                                     "E01DPFVAL",
                                     "E01DPFCLF",
                                     "E01DPFFV1",
                                     "E01DPFFVN",
                                     "E01DPFUVN",
                                     "E01DPFCMP",
                                     "E01DPFAUT",
                                     "E01DPFCTO",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01DPFFMT",
                                   "E01DPFDSC",
                                   "E01DPFLGT",
                                   "E01DPFVAL",
                                   "E01DPFCLF",
                                   "E01DPFFV1",
                                   "E01DPFFVN",
                                   "E01DPFUVN",
                                   "E01DPFCMP",
                                   "E01DPFAUT",
                                   "E01DPFCTO",
                                   "E01OPECDE"
                                 };
  final static String fid = "1060403113457";
  final static String rid = "435600A2244F2";
  final static String fmtname = "EDP070201";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private CharacterField fieldE01DPFFMT = null;
  private CharacterField fieldE01DPFDSC = null;
  private CharacterField fieldE01DPFLGT = null;
  private CharacterField fieldE01DPFVAL = null;
  private CharacterField fieldE01DPFCLF = null;
  private DecimalField fieldE01DPFFV1 = null;
  private DecimalField fieldE01DPFFVN = null;
  private CharacterField fieldE01DPFUVN = null;
  private CharacterField fieldE01DPFCMP = null;
  private CharacterField fieldE01DPFAUT = null;
  private CharacterField fieldE01DPFCTO = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP070201Message.
  */
  public EDP070201Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 99;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01DPFFMT =
    new CharacterField(message, HEADERSIZE + 43, 1, "E01DPFFMT");
    fields[11] = fieldE01DPFDSC =
    new CharacterField(message, HEADERSIZE + 44, 35, "E01DPFDSC");
    fields[12] = fieldE01DPFLGT =
    new CharacterField(message, HEADERSIZE + 79, 1, "E01DPFLGT");
    fields[13] = fieldE01DPFVAL =
    new CharacterField(message, HEADERSIZE + 80, 1, "E01DPFVAL");
    fields[14] = fieldE01DPFCLF =
    new CharacterField(message, HEADERSIZE + 81, 1, "E01DPFCLF");
    fields[15] = fieldE01DPFFV1 =
    new DecimalField(message, HEADERSIZE + 82, 6, 0, "E01DPFFV1");
    fields[16] = fieldE01DPFFVN =
    new DecimalField(message, HEADERSIZE + 88, 6, 0, "E01DPFFVN");
    fields[17] = fieldE01DPFUVN =
    new CharacterField(message, HEADERSIZE + 94, 1, "E01DPFUVN");
    fields[18] = fieldE01DPFCMP =
    new CharacterField(message, HEADERSIZE + 95, 1, "E01DPFCMP");
    fields[19] = fieldE01DPFAUT =
    new CharacterField(message, HEADERSIZE + 96, 1, "E01DPFAUT");
    fields[20] = fieldE01DPFCTO =
    new CharacterField(message, HEADERSIZE + 97, 1, "E01DPFCTO");
    fields[21] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 98, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01DPFFMT using a String value.
  */
  public void setE01DPFFMT(String newvalue)
  {
    fieldE01DPFFMT.setString(newvalue);
  }

  /**
  * Get value of field E01DPFFMT as a String.
  */
  public String getE01DPFFMT()
  {
    return fieldE01DPFFMT.getString();
  }

  /**
  * Set field E01DPFDSC using a String value.
  */
  public void setE01DPFDSC(String newvalue)
  {
    fieldE01DPFDSC.setString(newvalue);
  }

  /**
  * Get value of field E01DPFDSC as a String.
  */
  public String getE01DPFDSC()
  {
    return fieldE01DPFDSC.getString();
  }

  /**
  * Set field E01DPFLGT using a String value.
  */
  public void setE01DPFLGT(String newvalue)
  {
    fieldE01DPFLGT.setString(newvalue);
  }

  /**
  * Get value of field E01DPFLGT as a String.
  */
  public String getE01DPFLGT()
  {
    return fieldE01DPFLGT.getString();
  }

  /**
  * Set field E01DPFVAL using a String value.
  */
  public void setE01DPFVAL(String newvalue)
  {
    fieldE01DPFVAL.setString(newvalue);
  }

  /**
  * Get value of field E01DPFVAL as a String.
  */
  public String getE01DPFVAL()
  {
    return fieldE01DPFVAL.getString();
  }

  /**
  * Set field E01DPFCLF using a String value.
  */
  public void setE01DPFCLF(String newvalue)
  {
    fieldE01DPFCLF.setString(newvalue);
  }

  /**
  * Get value of field E01DPFCLF as a String.
  */
  public String getE01DPFCLF()
  {
    return fieldE01DPFCLF.getString();
  }

  /**
  * Set field E01DPFFV1 using a String value.
  */
  public void setE01DPFFV1(String newvalue)
  {
    fieldE01DPFFV1.setString(newvalue);
  }

  /**
  * Get value of field E01DPFFV1 as a String.
  */
  public String getE01DPFFV1()
  {
    return fieldE01DPFFV1.getString();
  }

  /**
  * Set numeric field E01DPFFV1 using a BigDecimal value.
  */
  public void setE01DPFFV1(BigDecimal newvalue)
  {
    fieldE01DPFFV1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPFFV1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPFFV1()
  {
    return fieldE01DPFFV1.getBigDecimal();
  }

  /**
  * Set field E01DPFFVN using a String value.
  */
  public void setE01DPFFVN(String newvalue)
  {
    fieldE01DPFFVN.setString(newvalue);
  }

  /**
  * Get value of field E01DPFFVN as a String.
  */
  public String getE01DPFFVN()
  {
    return fieldE01DPFFVN.getString();
  }

  /**
  * Set numeric field E01DPFFVN using a BigDecimal value.
  */
  public void setE01DPFFVN(BigDecimal newvalue)
  {
    fieldE01DPFFVN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPFFVN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPFFVN()
  {
    return fieldE01DPFFVN.getBigDecimal();
  }

  /**
  * Set field E01DPFUVN using a String value.
  */
  public void setE01DPFUVN(String newvalue)
  {
    fieldE01DPFUVN.setString(newvalue);
  }

  /**
  * Get value of field E01DPFUVN as a String.
  */
  public String getE01DPFUVN()
  {
    return fieldE01DPFUVN.getString();
  }

  /**
  * Set field E01DPFCMP using a String value.
  */
  public void setE01DPFCMP(String newvalue)
  {
    fieldE01DPFCMP.setString(newvalue);
  }

  /**
  * Get value of field E01DPFCMP as a String.
  */
  public String getE01DPFCMP()
  {
    return fieldE01DPFCMP.getString();
  }

  /**
  * Set field E01DPFAUT using a String value.
  */
  public void setE01DPFAUT(String newvalue)
  {
    fieldE01DPFAUT.setString(newvalue);
  }

  /**
  * Get value of field E01DPFAUT as a String.
  */
  public String getE01DPFAUT()
  {
    return fieldE01DPFAUT.getString();
  }

  /**
  * Set field E01DPFCTO using a String value.
  */
  public void setE01DPFCTO(String newvalue)
  {
    fieldE01DPFCTO.setString(newvalue);
  }

  /**
  * Get value of field E01DPFCTO as a String.
  */
  public String getE01DPFCTO()
  {
    return fieldE01DPFCTO.getString();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
