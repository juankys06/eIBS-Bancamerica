package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP082001 physical file definition.
* 
* File level identifier is 1081203120525.
* Record format level identifier is 3CF145E398BE8.
*/

public class EDP082001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01MODLGT",
                                     "E01MODCOD",
                                     "E01MODDSC",
                                     "E01MODPER",
                                     "E01MODPET",
                                     "E01RECPOS",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01MODLGT",
                                   "E01MODCOD",
                                   "E01MODDSC",
                                   "E01MODPER",
                                   "E01MODPET",
                                   "E01RECPOS",
                                   "E01OPECDE"
                                 };
  final static String fid = "1081203120525";
  final static String rid = "3CF145E398BE8";
  final static String fmtname = "EDP082001";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private CharacterField fieldE01MODLGT = null;
  private CharacterField fieldE01MODCOD = null;
  private CharacterField fieldE01MODDSC = null;
  private DecimalField fieldE01MODPER = null;
  private DecimalField fieldE01MODPET = null;
  private DecimalField fieldE01RECPOS = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP082001Message.
  */
  public EDP082001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 114;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01MODLGT =
    new CharacterField(message, HEADERSIZE + 43, 1, "E01MODLGT");
    fields[11] = fieldE01MODCOD =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01MODCOD");
    fields[12] = fieldE01MODDSC =
    new CharacterField(message, HEADERSIZE + 48, 35, "E01MODDSC");
    fields[13] = fieldE01MODPER =
    new DecimalField(message, HEADERSIZE + 83, 11, 6, "E01MODPER");
    fields[14] = fieldE01MODPET =
    new DecimalField(message, HEADERSIZE + 94, 11, 6, "E01MODPET");
    fields[15] = fieldE01RECPOS =
    new DecimalField(message, HEADERSIZE + 105, 8, 0, "E01RECPOS");
    fields[16] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 113, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01MODLGT using a String value.
  */
  public void setE01MODLGT(String newvalue)
  {
    fieldE01MODLGT.setString(newvalue);
  }

  /**
  * Get value of field E01MODLGT as a String.
  */
  public String getE01MODLGT()
  {
    return fieldE01MODLGT.getString();
  }

  /**
  * Set field E01MODCOD using a String value.
  */
  public void setE01MODCOD(String newvalue)
  {
    fieldE01MODCOD.setString(newvalue);
  }

  /**
  * Get value of field E01MODCOD as a String.
  */
  public String getE01MODCOD()
  {
    return fieldE01MODCOD.getString();
  }

  /**
  * Set field E01MODDSC using a String value.
  */
  public void setE01MODDSC(String newvalue)
  {
    fieldE01MODDSC.setString(newvalue);
  }

  /**
  * Get value of field E01MODDSC as a String.
  */
  public String getE01MODDSC()
  {
    return fieldE01MODDSC.getString();
  }

  /**
  * Set field E01MODPER using a String value.
  */
  public void setE01MODPER(String newvalue)
  {
    fieldE01MODPER.setString(newvalue);
  }

  /**
  * Get value of field E01MODPER as a String.
  */
  public String getE01MODPER()
  {
    return fieldE01MODPER.getString();
  }

  /**
  * Set numeric field E01MODPER using a BigDecimal value.
  */
  public void setE01MODPER(BigDecimal newvalue)
  {
    fieldE01MODPER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MODPER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MODPER()
  {
    return fieldE01MODPER.getBigDecimal();
  }

  /**
  * Set field E01MODPET using a String value.
  */
  public void setE01MODPET(String newvalue)
  {
    fieldE01MODPET.setString(newvalue);
  }

  /**
  * Get value of field E01MODPET as a String.
  */
  public String getE01MODPET()
  {
    return fieldE01MODPET.getString();
  }

  /**
  * Set numeric field E01MODPET using a BigDecimal value.
  */
  public void setE01MODPET(BigDecimal newvalue)
  {
    fieldE01MODPET.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MODPET as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MODPET()
  {
    return fieldE01MODPET.getBigDecimal();
  }

  /**
  * Set field E01RECPOS using a String value.
  */
  public void setE01RECPOS(String newvalue)
  {
    fieldE01RECPOS.setString(newvalue);
  }

  /**
  * Get value of field E01RECPOS as a String.
  */
  public String getE01RECPOS()
  {
    return fieldE01RECPOS.getString();
  }

  /**
  * Set numeric field E01RECPOS using a BigDecimal value.
  */
  public void setE01RECPOS(BigDecimal newvalue)
  {
    fieldE01RECPOS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RECPOS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RECPOS()
  {
    return fieldE01RECPOS.getBigDecimal();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
