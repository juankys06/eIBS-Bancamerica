package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESI000004 physical file definition.
* 
* File level identifier is 1051020145634.
* Record format level identifier is 48B199518ADF3.
*/

public class ESI000004Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H04USERID",
                                     "H04PROGRM",
                                     "H04TIMSYS",
                                     "H04SCRCOD",
                                     "H04OPECOD",
                                     "H04FLGMAS",
                                     "H04FLGWK1",
                                     "H04FLGWK2",
                                     "H04FLGWK3",
                                     "E04WTIPOI",
                                     "E04WRIF",
                                     "E04WTIPGA",
                                     "E04WDESGA",
                                     "E04WTIPIG",
                                     "E04WRIFGA",
                                     "E04WMONAV",
                                     "E04WTOAVA",
                                     "E04NUMREC",
                                     "E04INDOPE"
                                   };
  final static String tnames[] = {
                                   "H04USERID",
                                   "H04PROGRM",
                                   "H04TIMSYS",
                                   "H04SCRCOD",
                                   "H04OPECOD",
                                   "H04FLGMAS",
                                   "H04FLGWK1",
                                   "H04FLGWK2",
                                   "H04FLGWK3",
                                   "E04WTIPOI",
                                   "E04WRIF",
                                   "E04WTIPGA",
                                   "E04WDESGA",
                                   "E04WTIPIG",
                                   "E04WRIFGA",
                                   "E04WMONAV",
                                   "E04WTOAVA",
                                   "E04NUMREC",
                                   "E04INDOPE"
                                 };
  final static String fid = "1051020145634";
  final static String rid = "48B199518ADF3";
  final static String fmtname = "ESI000004";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH04USERID = null;
  private CharacterField fieldH04PROGRM = null;
  private CharacterField fieldH04TIMSYS = null;
  private CharacterField fieldH04SCRCOD = null;
  private CharacterField fieldH04OPECOD = null;
  private CharacterField fieldH04FLGMAS = null;
  private CharacterField fieldH04FLGWK1 = null;
  private CharacterField fieldH04FLGWK2 = null;
  private CharacterField fieldH04FLGWK3 = null;
  private CharacterField fieldE04WTIPOI = null;
  private DecimalField fieldE04WRIF = null;
  private DecimalField fieldE04WTIPGA = null;
  private CharacterField fieldE04WDESGA = null;
  private CharacterField fieldE04WTIPIG = null;
  private DecimalField fieldE04WRIFGA = null;
  private DecimalField fieldE04WMONAV = null;
  private DecimalField fieldE04WTOAVA = null;
  private DecimalField fieldE04NUMREC = null;
  private CharacterField fieldE04INDOPE = null;

  /**
  * Constructor for ESI000004Message.
  */
  public ESI000004Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 170;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH04USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H04USERID");
    fields[1] = fieldH04PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H04PROGRM");
    fields[2] = fieldH04TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H04TIMSYS");
    fields[3] = fieldH04SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H04SCRCOD");
    fields[4] = fieldH04OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H04OPECOD");
    fields[5] = fieldH04FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H04FLGMAS");
    fields[6] = fieldH04FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H04FLGWK1");
    fields[7] = fieldH04FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H04FLGWK2");
    fields[8] = fieldH04FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H04FLGWK3");
    fields[9] = fieldE04WTIPOI =
    new CharacterField(message, HEADERSIZE + 42, 1, "E04WTIPOI");
    fields[10] = fieldE04WRIF =
    new DecimalField(message, HEADERSIZE + 43, 20, 0, "E04WRIF");
    fields[11] = fieldE04WTIPGA =
    new DecimalField(message, HEADERSIZE + 63, 3, 0, "E04WTIPGA");
    fields[12] = fieldE04WDESGA =
    new CharacterField(message, HEADERSIZE + 66, 30, "E04WDESGA");
    fields[13] = fieldE04WTIPIG =
    new CharacterField(message, HEADERSIZE + 96, 1, "E04WTIPIG");
    fields[14] = fieldE04WRIFGA =
    new DecimalField(message, HEADERSIZE + 97, 20, 0, "E04WRIFGA");
    fields[15] = fieldE04WMONAV =
    new DecimalField(message, HEADERSIZE + 117, 22, 2, "E04WMONAV");
    fields[16] = fieldE04WTOAVA =
    new DecimalField(message, HEADERSIZE + 139, 22, 2, "E04WTOAVA");
    fields[17] = fieldE04NUMREC =
    new DecimalField(message, HEADERSIZE + 161, 8, 0, "E04NUMREC");
    fields[18] = fieldE04INDOPE =
    new CharacterField(message, HEADERSIZE + 169, 1, "E04INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H04USERID using a String value.
  */
  public void setH04USERID(String newvalue)
  {
    fieldH04USERID.setString(newvalue);
  }

  /**
  * Get value of field H04USERID as a String.
  */
  public String getH04USERID()
  {
    return fieldH04USERID.getString();
  }

  /**
  * Set field H04PROGRM using a String value.
  */
  public void setH04PROGRM(String newvalue)
  {
    fieldH04PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H04PROGRM as a String.
  */
  public String getH04PROGRM()
  {
    return fieldH04PROGRM.getString();
  }

  /**
  * Set field H04TIMSYS using a String value.
  */
  public void setH04TIMSYS(String newvalue)
  {
    fieldH04TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H04TIMSYS as a String.
  */
  public String getH04TIMSYS()
  {
    return fieldH04TIMSYS.getString();
  }

  /**
  * Set field H04SCRCOD using a String value.
  */
  public void setH04SCRCOD(String newvalue)
  {
    fieldH04SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H04SCRCOD as a String.
  */
  public String getH04SCRCOD()
  {
    return fieldH04SCRCOD.getString();
  }

  /**
  * Set field H04OPECOD using a String value.
  */
  public void setH04OPECOD(String newvalue)
  {
    fieldH04OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H04OPECOD as a String.
  */
  public String getH04OPECOD()
  {
    return fieldH04OPECOD.getString();
  }

  /**
  * Set field H04FLGMAS using a String value.
  */
  public void setH04FLGMAS(String newvalue)
  {
    fieldH04FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H04FLGMAS as a String.
  */
  public String getH04FLGMAS()
  {
    return fieldH04FLGMAS.getString();
  }

  /**
  * Set field H04FLGWK1 using a String value.
  */
  public void setH04FLGWK1(String newvalue)
  {
    fieldH04FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK1 as a String.
  */
  public String getH04FLGWK1()
  {
    return fieldH04FLGWK1.getString();
  }

  /**
  * Set field H04FLGWK2 using a String value.
  */
  public void setH04FLGWK2(String newvalue)
  {
    fieldH04FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK2 as a String.
  */
  public String getH04FLGWK2()
  {
    return fieldH04FLGWK2.getString();
  }

  /**
  * Set field H04FLGWK3 using a String value.
  */
  public void setH04FLGWK3(String newvalue)
  {
    fieldH04FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK3 as a String.
  */
  public String getH04FLGWK3()
  {
    return fieldH04FLGWK3.getString();
  }

  /**
  * Set field E04WTIPOI using a String value.
  */
  public void setE04WTIPOI(String newvalue)
  {
    fieldE04WTIPOI.setString(newvalue);
  }

  /**
  * Get value of field E04WTIPOI as a String.
  */
  public String getE04WTIPOI()
  {
    return fieldE04WTIPOI.getString();
  }

  /**
  * Set field E04WRIF using a String value.
  */
  public void setE04WRIF(String newvalue)
  {
    fieldE04WRIF.setString(newvalue);
  }

  /**
  * Get value of field E04WRIF as a String.
  */
  public String getE04WRIF()
  {
    return fieldE04WRIF.getString();
  }

  /**
  * Set numeric field E04WRIF using a BigDecimal value.
  */
  public void setE04WRIF(BigDecimal newvalue)
  {
    fieldE04WRIF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04WRIF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04WRIF()
  {
    return fieldE04WRIF.getBigDecimal();
  }

  /**
  * Set field E04WTIPGA using a String value.
  */
  public void setE04WTIPGA(String newvalue)
  {
    fieldE04WTIPGA.setString(newvalue);
  }

  /**
  * Get value of field E04WTIPGA as a String.
  */
  public String getE04WTIPGA()
  {
    return fieldE04WTIPGA.getString();
  }

  /**
  * Set numeric field E04WTIPGA using a BigDecimal value.
  */
  public void setE04WTIPGA(BigDecimal newvalue)
  {
    fieldE04WTIPGA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04WTIPGA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04WTIPGA()
  {
    return fieldE04WTIPGA.getBigDecimal();
  }

  /**
  * Set field E04WDESGA using a String value.
  */
  public void setE04WDESGA(String newvalue)
  {
    fieldE04WDESGA.setString(newvalue);
  }

  /**
  * Get value of field E04WDESGA as a String.
  */
  public String getE04WDESGA()
  {
    return fieldE04WDESGA.getString();
  }

  /**
  * Set field E04WTIPIG using a String value.
  */
  public void setE04WTIPIG(String newvalue)
  {
    fieldE04WTIPIG.setString(newvalue);
  }

  /**
  * Get value of field E04WTIPIG as a String.
  */
  public String getE04WTIPIG()
  {
    return fieldE04WTIPIG.getString();
  }

  /**
  * Set field E04WRIFGA using a String value.
  */
  public void setE04WRIFGA(String newvalue)
  {
    fieldE04WRIFGA.setString(newvalue);
  }

  /**
  * Get value of field E04WRIFGA as a String.
  */
  public String getE04WRIFGA()
  {
    return fieldE04WRIFGA.getString();
  }

  /**
  * Set numeric field E04WRIFGA using a BigDecimal value.
  */
  public void setE04WRIFGA(BigDecimal newvalue)
  {
    fieldE04WRIFGA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04WRIFGA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04WRIFGA()
  {
    return fieldE04WRIFGA.getBigDecimal();
  }

  /**
  * Set field E04WMONAV using a String value.
  */
  public void setE04WMONAV(String newvalue)
  {
    fieldE04WMONAV.setString(newvalue);
  }

  /**
  * Get value of field E04WMONAV as a String.
  */
  public String getE04WMONAV()
  {
    return fieldE04WMONAV.getString();
  }

  /**
  * Set numeric field E04WMONAV using a BigDecimal value.
  */
  public void setE04WMONAV(BigDecimal newvalue)
  {
    fieldE04WMONAV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04WMONAV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04WMONAV()
  {
    return fieldE04WMONAV.getBigDecimal();
  }

  /**
  * Set field E04WTOAVA using a String value.
  */
  public void setE04WTOAVA(String newvalue)
  {
    fieldE04WTOAVA.setString(newvalue);
  }

  /**
  * Get value of field E04WTOAVA as a String.
  */
  public String getE04WTOAVA()
  {
    return fieldE04WTOAVA.getString();
  }

  /**
  * Set numeric field E04WTOAVA using a BigDecimal value.
  */
  public void setE04WTOAVA(BigDecimal newvalue)
  {
    fieldE04WTOAVA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04WTOAVA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04WTOAVA()
  {
    return fieldE04WTOAVA.getBigDecimal();
  }

  /**
  * Set field E04NUMREC using a String value.
  */
  public void setE04NUMREC(String newvalue)
  {
    fieldE04NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E04NUMREC as a String.
  */
  public String getE04NUMREC()
  {
    return fieldE04NUMREC.getString();
  }

  /**
  * Set numeric field E04NUMREC using a BigDecimal value.
  */
  public void setE04NUMREC(BigDecimal newvalue)
  {
    fieldE04NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04NUMREC()
  {
    return fieldE04NUMREC.getBigDecimal();
  }

  /**
  * Set field E04INDOPE using a String value.
  */
  public void setE04INDOPE(String newvalue)
  {
    fieldE04INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E04INDOPE as a String.
  */
  public String getE04INDOPE()
  {
    return fieldE04INDOPE.getString();
  }

}
