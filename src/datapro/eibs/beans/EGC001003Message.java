package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC001003 physical file definition.
* 
* File level identifier is 1030121191922.
* Record format level identifier is 35037857E0CD7.
*/

public class EGC001003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03CUSCUN",
                                     "E03CUSNA1",
                                     "E03CUSSHN",
                                     "E03CUSIDN",
                                     "E03CUSTID",
                                     "E03CUSPID",
                                     "E03CLILGT",
                                     "E03CLITYP",
                                     "E03CLISTS",
                                     "E03CUSCTY",
                                     "E03CUSCTR",
                                     "E03CUSGRP",
                                     "E03GRPNME",
                                     "E03CUSPHN",
                                     "E03CUSPH1",
                                     "E03CUSFAX",
                                     "E03CUSIAD",
                                     "E03CUSSUC",
                                     "E03CUSOBC",
                                     "E03CUSOFC",
                                     "E03OVDRFT",
                                     "E03LNSMOR",
                                     "E03LNSLSG",
                                     "E03LNSCON",
                                     "E03LNSGRL",
                                     "E03DESDOC",
                                     "E03VALCBR",
                                     "E03INVERA",
                                     "E03ACEPTA",
                                     "E03LCCONF",
                                     "E03SPTPUR",
                                     "E03FRWPUR",
                                     "E03ACPDES",
                                     "E03LCNCON",
                                     "E03COLREC",
                                     "E03CTACTE",
                                     "E03CTAMMK",
                                     "E03CTAAHO",
                                     "E03CDTDPO",
                                     "E03INVERP",
                                     "E03PARTIC",
                                     "E03ACEPTP",
                                     "E03LCPROC",
                                     "E03SPTSAL",
                                     "E03FRWSAL",
                                     "E03GAREFE",
                                     "E03CBZINT",
                                     "E03CBZLOC",
                                     "E03COLATE",
                                     "E03CDTPIG",
                                     "E03LNEAMT",
                                     "E03LNEUSE",
                                     "E03LNEAVA",
                                     "E03LNETDY",
                                     "E03PARVEN",
                                     "E03TOTASS",
                                     "E03TOTLIA",
                                     "E03TOTCDB",
                                     "E03TOTCCR",
                                     "P03OVDRFT",
                                     "P03LNSMOR",
                                     "P03LNSLSG",
                                     "P03LNSCON",
                                     "P03LNSGRL",
                                     "P03DESDOC",
                                     "P03VALCBR",
                                     "P03INVERA",
                                     "P03ACEPTA",
                                     "P03LCCONF",
                                     "P03SPTPUR",
                                     "P03FRWPUR",
                                     "P03ACPDES",
                                     "P03LCNCON",
                                     "P03COLREC",
                                     "P03CTACTE",
                                     "P03CTAMMK",
                                     "P03CTAAHO",
                                     "P03CDTDPO",
                                     "P03INVERP",
                                     "P03PARTIC",
                                     "P03ACEPTP",
                                     "P03LCPROC",
                                     "P03SPTSAL",
                                     "P03FRWSAL",
                                     "P03GAREFE",
                                     "P03CBZINT",
                                     "P03CBZLOC",
                                     "P03COLATE",
                                     "P03CDTPIG"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03CUSCUN",
                                   "E03CUSNA1",
                                   "E03CUSSHN",
                                   "E03CUSIDN",
                                   "E03CUSTID",
                                   "E03CUSPID",
                                   "E03CLILGT",
                                   "E03CLITYP",
                                   "E03CLISTS",
                                   "E03CUSCTY",
                                   "E03CUSCTR",
                                   "E03CUSGRP",
                                   "E03GRPNME",
                                   "E03CUSPHN",
                                   "E03CUSPH1",
                                   "E03CUSFAX",
                                   "E03CUSIAD",
                                   "E03CUSSUC",
                                   "E03CUSOBC",
                                   "E03CUSOFC",
                                   "E03OVDRFT",
                                   "E03LNSMOR",
                                   "E03LNSLSG",
                                   "E03LNSCON",
                                   "E03LNSGRL",
                                   "E03DESDOC",
                                   "E03VALCBR",
                                   "E03INVERA",
                                   "E03ACEPTA",
                                   "E03LCCONF",
                                   "E03SPTPUR",
                                   "E03FRWPUR",
                                   "E03ACPDES",
                                   "E03LCNCON",
                                   "E03COLREC",
                                   "E03CTACTE",
                                   "E03CTAMMK",
                                   "E03CTAAHO",
                                   "E03CDTDPO",
                                   "E03INVERP",
                                   "E03PARTIC",
                                   "E03ACEPTP",
                                   "E03LCPROC",
                                   "E03SPTSAL",
                                   "E03FRWSAL",
                                   "E03GAREFE",
                                   "E03CBZINT",
                                   "E03CBZLOC",
                                   "E03COLATE",
                                   "E03CDTPIG",
                                   "E03LNEAMT",
                                   "E03LNEUSE",
                                   "E03LNEAVA",
                                   "E03LNETDY",
                                   "E03PARVEN",
                                   "E03TOTASS",
                                   "E03TOTLIA",
                                   "E03TOTCDB",
                                   "E03TOTCCR",
                                   "P03OVDRFT",
                                   "P03LNSMOR",
                                   "P03LNSLSG",
                                   "P03LNSCON",
                                   "P03LNSGRL",
                                   "P03DESDOC",
                                   "P03VALCBR",
                                   "P03INVERA",
                                   "P03ACEPTA",
                                   "P03LCCONF",
                                   "P03SPTPUR",
                                   "P03FRWPUR",
                                   "P03ACPDES",
                                   "P03LCNCON",
                                   "P03COLREC",
                                   "P03CTACTE",
                                   "P03CTAMMK",
                                   "P03CTAAHO",
                                   "P03CDTDPO",
                                   "P03INVERP",
                                   "P03PARTIC",
                                   "P03ACEPTP",
                                   "P03LCPROC",
                                   "P03SPTSAL",
                                   "P03FRWSAL",
                                   "P03GAREFE",
                                   "P03CBZINT",
                                   "P03CBZLOC",
                                   "P03COLATE",
                                   "P03CDTPIG"
                                 };
  final static String fid = "1030121191922";
  final static String rid = "35037857E0CD7";
  final static String fmtname = "EGC001003";
  final int FIELDCOUNT = 98;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03CUSCUN = null;
  private CharacterField fieldE03CUSNA1 = null;
  private CharacterField fieldE03CUSSHN = null;
  private CharacterField fieldE03CUSIDN = null;
  private CharacterField fieldE03CUSTID = null;
  private CharacterField fieldE03CUSPID = null;
  private CharacterField fieldE03CLILGT = null;
  private CharacterField fieldE03CLITYP = null;
  private CharacterField fieldE03CLISTS = null;
  private CharacterField fieldE03CUSCTY = null;
  private CharacterField fieldE03CUSCTR = null;
  private DecimalField fieldE03CUSGRP = null;
  private CharacterField fieldE03GRPNME = null;
  private DecimalField fieldE03CUSPHN = null;
  private DecimalField fieldE03CUSPH1 = null;
  private DecimalField fieldE03CUSFAX = null;
  private CharacterField fieldE03CUSIAD = null;
  private CharacterField fieldE03CUSSUC = null;
  private CharacterField fieldE03CUSOBC = null;
  private CharacterField fieldE03CUSOFC = null;
  private DecimalField fieldE03OVDRFT = null;
  private DecimalField fieldE03LNSMOR = null;
  private DecimalField fieldE03LNSLSG = null;
  private DecimalField fieldE03LNSCON = null;
  private DecimalField fieldE03LNSGRL = null;
  private DecimalField fieldE03DESDOC = null;
  private DecimalField fieldE03VALCBR = null;
  private DecimalField fieldE03INVERA = null;
  private DecimalField fieldE03ACEPTA = null;
  private DecimalField fieldE03LCCONF = null;
  private DecimalField fieldE03SPTPUR = null;
  private DecimalField fieldE03FRWPUR = null;
  private DecimalField fieldE03ACPDES = null;
  private DecimalField fieldE03LCNCON = null;
  private DecimalField fieldE03COLREC = null;
  private DecimalField fieldE03CTACTE = null;
  private DecimalField fieldE03CTAMMK = null;
  private DecimalField fieldE03CTAAHO = null;
  private DecimalField fieldE03CDTDPO = null;
  private DecimalField fieldE03INVERP = null;
  private DecimalField fieldE03PARTIC = null;
  private DecimalField fieldE03ACEPTP = null;
  private DecimalField fieldE03LCPROC = null;
  private DecimalField fieldE03SPTSAL = null;
  private DecimalField fieldE03FRWSAL = null;
  private DecimalField fieldE03GAREFE = null;
  private DecimalField fieldE03CBZINT = null;
  private DecimalField fieldE03CBZLOC = null;
  private DecimalField fieldE03COLATE = null;
  private DecimalField fieldE03CDTPIG = null;
  private DecimalField fieldE03LNEAMT = null;
  private DecimalField fieldE03LNEUSE = null;
  private DecimalField fieldE03LNEAVA = null;
  private DecimalField fieldE03LNETDY = null;
  private DecimalField fieldE03PARVEN = null;
  private DecimalField fieldE03TOTASS = null;
  private DecimalField fieldE03TOTLIA = null;
  private DecimalField fieldE03TOTCDB = null;
  private DecimalField fieldE03TOTCCR = null;
  private DecimalField fieldP03OVDRFT = null;
  private DecimalField fieldP03LNSMOR = null;
  private DecimalField fieldP03LNSLSG = null;
  private DecimalField fieldP03LNSCON = null;
  private DecimalField fieldP03LNSGRL = null;
  private DecimalField fieldP03DESDOC = null;
  private DecimalField fieldP03VALCBR = null;
  private DecimalField fieldP03INVERA = null;
  private DecimalField fieldP03ACEPTA = null;
  private DecimalField fieldP03LCCONF = null;
  private DecimalField fieldP03SPTPUR = null;
  private DecimalField fieldP03FRWPUR = null;
  private DecimalField fieldP03ACPDES = null;
  private DecimalField fieldP03LCNCON = null;
  private DecimalField fieldP03COLREC = null;
  private DecimalField fieldP03CTACTE = null;
  private DecimalField fieldP03CTAMMK = null;
  private DecimalField fieldP03CTAAHO = null;
  private DecimalField fieldP03CDTDPO = null;
  private DecimalField fieldP03INVERP = null;
  private DecimalField fieldP03PARTIC = null;
  private DecimalField fieldP03ACEPTP = null;
  private DecimalField fieldP03LCPROC = null;
  private DecimalField fieldP03SPTSAL = null;
  private DecimalField fieldP03FRWSAL = null;
  private DecimalField fieldP03GAREFE = null;
  private DecimalField fieldP03CBZINT = null;
  private DecimalField fieldP03CBZLOC = null;
  private DecimalField fieldP03COLATE = null;
  private DecimalField fieldP03CDTPIG = null;

  /**
  * Constructor for EGC001003Message.
  */
  public EGC001003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1225;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03CUSCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E03CUSCUN");
    fields[10] = fieldE03CUSNA1 =
    new CharacterField(message, HEADERSIZE + 52, 45, "E03CUSNA1");
    fields[11] = fieldE03CUSSHN =
    new CharacterField(message, HEADERSIZE + 97, 15, "E03CUSSHN");
    fields[12] = fieldE03CUSIDN =
    new CharacterField(message, HEADERSIZE + 112, 15, "E03CUSIDN");
    fields[13] = fieldE03CUSTID =
    new CharacterField(message, HEADERSIZE + 127, 4, "E03CUSTID");
    fields[14] = fieldE03CUSPID =
    new CharacterField(message, HEADERSIZE + 131, 4, "E03CUSPID");
    fields[15] = fieldE03CLILGT =
    new CharacterField(message, HEADERSIZE + 135, 10, "E03CLILGT");
    fields[16] = fieldE03CLITYP =
    new CharacterField(message, HEADERSIZE + 145, 10, "E03CLITYP");
    fields[17] = fieldE03CLISTS =
    new CharacterField(message, HEADERSIZE + 155, 20, "E03CLISTS");
    fields[18] = fieldE03CUSCTY =
    new CharacterField(message, HEADERSIZE + 175, 30, "E03CUSCTY");
    fields[19] = fieldE03CUSCTR =
    new CharacterField(message, HEADERSIZE + 205, 20, "E03CUSCTR");
    fields[20] = fieldE03CUSGRP =
    new DecimalField(message, HEADERSIZE + 225, 10, 0, "E03CUSGRP");
    fields[21] = fieldE03GRPNME =
    new CharacterField(message, HEADERSIZE + 235, 35, "E03GRPNME");
    fields[22] = fieldE03CUSPHN =
    new DecimalField(message, HEADERSIZE + 270, 12, 0, "E03CUSPHN");
    fields[23] = fieldE03CUSPH1 =
    new DecimalField(message, HEADERSIZE + 282, 12, 0, "E03CUSPH1");
    fields[24] = fieldE03CUSFAX =
    new DecimalField(message, HEADERSIZE + 294, 12, 0, "E03CUSFAX");
    fields[25] = fieldE03CUSIAD =
    new CharacterField(message, HEADERSIZE + 306, 40, "E03CUSIAD");
    fields[26] = fieldE03CUSSUC =
    new CharacterField(message, HEADERSIZE + 346, 1, "E03CUSSUC");
    fields[27] = fieldE03CUSOBC =
    new CharacterField(message, HEADERSIZE + 347, 1, "E03CUSOBC");
    fields[28] = fieldE03CUSOFC =
    new CharacterField(message, HEADERSIZE + 348, 4, "E03CUSOFC");
    fields[29] = fieldE03OVDRFT =
    new DecimalField(message, HEADERSIZE + 352, 17, 2, "E03OVDRFT");
    fields[30] = fieldE03LNSMOR =
    new DecimalField(message, HEADERSIZE + 369, 17, 2, "E03LNSMOR");
    fields[31] = fieldE03LNSLSG =
    new DecimalField(message, HEADERSIZE + 386, 17, 2, "E03LNSLSG");
    fields[32] = fieldE03LNSCON =
    new DecimalField(message, HEADERSIZE + 403, 17, 2, "E03LNSCON");
    fields[33] = fieldE03LNSGRL =
    new DecimalField(message, HEADERSIZE + 420, 17, 2, "E03LNSGRL");
    fields[34] = fieldE03DESDOC =
    new DecimalField(message, HEADERSIZE + 437, 17, 2, "E03DESDOC");
    fields[35] = fieldE03VALCBR =
    new DecimalField(message, HEADERSIZE + 454, 17, 2, "E03VALCBR");
    fields[36] = fieldE03INVERA =
    new DecimalField(message, HEADERSIZE + 471, 17, 2, "E03INVERA");
    fields[37] = fieldE03ACEPTA =
    new DecimalField(message, HEADERSIZE + 488, 17, 2, "E03ACEPTA");
    fields[38] = fieldE03LCCONF =
    new DecimalField(message, HEADERSIZE + 505, 17, 2, "E03LCCONF");
    fields[39] = fieldE03SPTPUR =
    new DecimalField(message, HEADERSIZE + 522, 17, 2, "E03SPTPUR");
    fields[40] = fieldE03FRWPUR =
    new DecimalField(message, HEADERSIZE + 539, 17, 2, "E03FRWPUR");
    fields[41] = fieldE03ACPDES =
    new DecimalField(message, HEADERSIZE + 556, 17, 2, "E03ACPDES");
    fields[42] = fieldE03LCNCON =
    new DecimalField(message, HEADERSIZE + 573, 17, 2, "E03LCNCON");
    fields[43] = fieldE03COLREC =
    new DecimalField(message, HEADERSIZE + 590, 17, 2, "E03COLREC");
    fields[44] = fieldE03CTACTE =
    new DecimalField(message, HEADERSIZE + 607, 17, 2, "E03CTACTE");
    fields[45] = fieldE03CTAMMK =
    new DecimalField(message, HEADERSIZE + 624, 17, 2, "E03CTAMMK");
    fields[46] = fieldE03CTAAHO =
    new DecimalField(message, HEADERSIZE + 641, 17, 2, "E03CTAAHO");
    fields[47] = fieldE03CDTDPO =
    new DecimalField(message, HEADERSIZE + 658, 17, 2, "E03CDTDPO");
    fields[48] = fieldE03INVERP =
    new DecimalField(message, HEADERSIZE + 675, 17, 2, "E03INVERP");
    fields[49] = fieldE03PARTIC =
    new DecimalField(message, HEADERSIZE + 692, 17, 2, "E03PARTIC");
    fields[50] = fieldE03ACEPTP =
    new DecimalField(message, HEADERSIZE + 709, 17, 2, "E03ACEPTP");
    fields[51] = fieldE03LCPROC =
    new DecimalField(message, HEADERSIZE + 726, 17, 2, "E03LCPROC");
    fields[52] = fieldE03SPTSAL =
    new DecimalField(message, HEADERSIZE + 743, 17, 2, "E03SPTSAL");
    fields[53] = fieldE03FRWSAL =
    new DecimalField(message, HEADERSIZE + 760, 17, 2, "E03FRWSAL");
    fields[54] = fieldE03GAREFE =
    new DecimalField(message, HEADERSIZE + 777, 17, 2, "E03GAREFE");
    fields[55] = fieldE03CBZINT =
    new DecimalField(message, HEADERSIZE + 794, 17, 2, "E03CBZINT");
    fields[56] = fieldE03CBZLOC =
    new DecimalField(message, HEADERSIZE + 811, 17, 2, "E03CBZLOC");
    fields[57] = fieldE03COLATE =
    new DecimalField(message, HEADERSIZE + 828, 17, 2, "E03COLATE");
    fields[58] = fieldE03CDTPIG =
    new DecimalField(message, HEADERSIZE + 845, 17, 2, "E03CDTPIG");
    fields[59] = fieldE03LNEAMT =
    new DecimalField(message, HEADERSIZE + 862, 17, 2, "E03LNEAMT");
    fields[60] = fieldE03LNEUSE =
    new DecimalField(message, HEADERSIZE + 879, 17, 2, "E03LNEUSE");
    fields[61] = fieldE03LNEAVA =
    new DecimalField(message, HEADERSIZE + 896, 17, 2, "E03LNEAVA");
    fields[62] = fieldE03LNETDY =
    new DecimalField(message, HEADERSIZE + 913, 17, 2, "E03LNETDY");
    fields[63] = fieldE03PARVEN =
    new DecimalField(message, HEADERSIZE + 930, 17, 2, "E03PARVEN");
    fields[64] = fieldE03TOTASS =
    new DecimalField(message, HEADERSIZE + 947, 17, 2, "E03TOTASS");
    fields[65] = fieldE03TOTLIA =
    new DecimalField(message, HEADERSIZE + 964, 17, 2, "E03TOTLIA");
    fields[66] = fieldE03TOTCDB =
    new DecimalField(message, HEADERSIZE + 981, 17, 2, "E03TOTCDB");
    fields[67] = fieldE03TOTCCR =
    new DecimalField(message, HEADERSIZE + 998, 17, 2, "E03TOTCCR");
    fields[68] = fieldP03OVDRFT =
    new DecimalField(message, HEADERSIZE + 1015, 7, 2, "P03OVDRFT");
    fields[69] = fieldP03LNSMOR =
    new DecimalField(message, HEADERSIZE + 1022, 7, 2, "P03LNSMOR");
    fields[70] = fieldP03LNSLSG =
    new DecimalField(message, HEADERSIZE + 1029, 7, 2, "P03LNSLSG");
    fields[71] = fieldP03LNSCON =
    new DecimalField(message, HEADERSIZE + 1036, 7, 2, "P03LNSCON");
    fields[72] = fieldP03LNSGRL =
    new DecimalField(message, HEADERSIZE + 1043, 7, 2, "P03LNSGRL");
    fields[73] = fieldP03DESDOC =
    new DecimalField(message, HEADERSIZE + 1050, 7, 2, "P03DESDOC");
    fields[74] = fieldP03VALCBR =
    new DecimalField(message, HEADERSIZE + 1057, 7, 2, "P03VALCBR");
    fields[75] = fieldP03INVERA =
    new DecimalField(message, HEADERSIZE + 1064, 7, 2, "P03INVERA");
    fields[76] = fieldP03ACEPTA =
    new DecimalField(message, HEADERSIZE + 1071, 7, 2, "P03ACEPTA");
    fields[77] = fieldP03LCCONF =
    new DecimalField(message, HEADERSIZE + 1078, 7, 2, "P03LCCONF");
    fields[78] = fieldP03SPTPUR =
    new DecimalField(message, HEADERSIZE + 1085, 7, 2, "P03SPTPUR");
    fields[79] = fieldP03FRWPUR =
    new DecimalField(message, HEADERSIZE + 1092, 7, 2, "P03FRWPUR");
    fields[80] = fieldP03ACPDES =
    new DecimalField(message, HEADERSIZE + 1099, 7, 2, "P03ACPDES");
    fields[81] = fieldP03LCNCON =
    new DecimalField(message, HEADERSIZE + 1106, 7, 2, "P03LCNCON");
    fields[82] = fieldP03COLREC =
    new DecimalField(message, HEADERSIZE + 1113, 7, 2, "P03COLREC");
    fields[83] = fieldP03CTACTE =
    new DecimalField(message, HEADERSIZE + 1120, 7, 2, "P03CTACTE");
    fields[84] = fieldP03CTAMMK =
    new DecimalField(message, HEADERSIZE + 1127, 7, 2, "P03CTAMMK");
    fields[85] = fieldP03CTAAHO =
    new DecimalField(message, HEADERSIZE + 1134, 7, 2, "P03CTAAHO");
    fields[86] = fieldP03CDTDPO =
    new DecimalField(message, HEADERSIZE + 1141, 7, 2, "P03CDTDPO");
    fields[87] = fieldP03INVERP =
    new DecimalField(message, HEADERSIZE + 1148, 7, 2, "P03INVERP");
    fields[88] = fieldP03PARTIC =
    new DecimalField(message, HEADERSIZE + 1155, 7, 2, "P03PARTIC");
    fields[89] = fieldP03ACEPTP =
    new DecimalField(message, HEADERSIZE + 1162, 7, 2, "P03ACEPTP");
    fields[90] = fieldP03LCPROC =
    new DecimalField(message, HEADERSIZE + 1169, 7, 2, "P03LCPROC");
    fields[91] = fieldP03SPTSAL =
    new DecimalField(message, HEADERSIZE + 1176, 7, 2, "P03SPTSAL");
    fields[92] = fieldP03FRWSAL =
    new DecimalField(message, HEADERSIZE + 1183, 7, 2, "P03FRWSAL");
    fields[93] = fieldP03GAREFE =
    new DecimalField(message, HEADERSIZE + 1190, 7, 2, "P03GAREFE");
    fields[94] = fieldP03CBZINT =
    new DecimalField(message, HEADERSIZE + 1197, 7, 2, "P03CBZINT");
    fields[95] = fieldP03CBZLOC =
    new DecimalField(message, HEADERSIZE + 1204, 7, 2, "P03CBZLOC");
    fields[96] = fieldP03COLATE =
    new DecimalField(message, HEADERSIZE + 1211, 7, 2, "P03COLATE");
    fields[97] = fieldP03CDTPIG =
    new DecimalField(message, HEADERSIZE + 1218, 7, 2, "P03CDTPIG");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03CUSCUN using a String value.
  */
  public void setE03CUSCUN(String newvalue)
  {
    fieldE03CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E03CUSCUN as a String.
  */
  public String getE03CUSCUN()
  {
    return fieldE03CUSCUN.getString();
  }

  /**
  * Set numeric field E03CUSCUN using a BigDecimal value.
  */
  public void setE03CUSCUN(BigDecimal newvalue)
  {
    fieldE03CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CUSCUN()
  {
    return fieldE03CUSCUN.getBigDecimal();
  }

  /**
  * Set field E03CUSNA1 using a String value.
  */
  public void setE03CUSNA1(String newvalue)
  {
    fieldE03CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSNA1 as a String.
  */
  public String getE03CUSNA1()
  {
    return fieldE03CUSNA1.getString();
  }

  /**
  * Set field E03CUSSHN using a String value.
  */
  public void setE03CUSSHN(String newvalue)
  {
    fieldE03CUSSHN.setString(newvalue);
  }

  /**
  * Get value of field E03CUSSHN as a String.
  */
  public String getE03CUSSHN()
  {
    return fieldE03CUSSHN.getString();
  }

  /**
  * Set field E03CUSIDN using a String value.
  */
  public void setE03CUSIDN(String newvalue)
  {
    fieldE03CUSIDN.setString(newvalue);
  }

  /**
  * Get value of field E03CUSIDN as a String.
  */
  public String getE03CUSIDN()
  {
    return fieldE03CUSIDN.getString();
  }

  /**
  * Set field E03CUSTID using a String value.
  */
  public void setE03CUSTID(String newvalue)
  {
    fieldE03CUSTID.setString(newvalue);
  }

  /**
  * Get value of field E03CUSTID as a String.
  */
  public String getE03CUSTID()
  {
    return fieldE03CUSTID.getString();
  }

  /**
  * Set field E03CUSPID using a String value.
  */
  public void setE03CUSPID(String newvalue)
  {
    fieldE03CUSPID.setString(newvalue);
  }

  /**
  * Get value of field E03CUSPID as a String.
  */
  public String getE03CUSPID()
  {
    return fieldE03CUSPID.getString();
  }

  /**
  * Set field E03CLILGT using a String value.
  */
  public void setE03CLILGT(String newvalue)
  {
    fieldE03CLILGT.setString(newvalue);
  }

  /**
  * Get value of field E03CLILGT as a String.
  */
  public String getE03CLILGT()
  {
    return fieldE03CLILGT.getString();
  }

  /**
  * Set field E03CLITYP using a String value.
  */
  public void setE03CLITYP(String newvalue)
  {
    fieldE03CLITYP.setString(newvalue);
  }

  /**
  * Get value of field E03CLITYP as a String.
  */
  public String getE03CLITYP()
  {
    return fieldE03CLITYP.getString();
  }

  /**
  * Set field E03CLISTS using a String value.
  */
  public void setE03CLISTS(String newvalue)
  {
    fieldE03CLISTS.setString(newvalue);
  }

  /**
  * Get value of field E03CLISTS as a String.
  */
  public String getE03CLISTS()
  {
    return fieldE03CLISTS.getString();
  }

  /**
  * Set field E03CUSCTY using a String value.
  */
  public void setE03CUSCTY(String newvalue)
  {
    fieldE03CUSCTY.setString(newvalue);
  }

  /**
  * Get value of field E03CUSCTY as a String.
  */
  public String getE03CUSCTY()
  {
    return fieldE03CUSCTY.getString();
  }

  /**
  * Set field E03CUSCTR using a String value.
  */
  public void setE03CUSCTR(String newvalue)
  {
    fieldE03CUSCTR.setString(newvalue);
  }

  /**
  * Get value of field E03CUSCTR as a String.
  */
  public String getE03CUSCTR()
  {
    return fieldE03CUSCTR.getString();
  }

  /**
  * Set field E03CUSGRP using a String value.
  */
  public void setE03CUSGRP(String newvalue)
  {
    fieldE03CUSGRP.setString(newvalue);
  }

  /**
  * Get value of field E03CUSGRP as a String.
  */
  public String getE03CUSGRP()
  {
    return fieldE03CUSGRP.getString();
  }

  /**
  * Set numeric field E03CUSGRP using a BigDecimal value.
  */
  public void setE03CUSGRP(BigDecimal newvalue)
  {
    fieldE03CUSGRP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CUSGRP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CUSGRP()
  {
    return fieldE03CUSGRP.getBigDecimal();
  }

  /**
  * Set field E03GRPNME using a String value.
  */
  public void setE03GRPNME(String newvalue)
  {
    fieldE03GRPNME.setString(newvalue);
  }

  /**
  * Get value of field E03GRPNME as a String.
  */
  public String getE03GRPNME()
  {
    return fieldE03GRPNME.getString();
  }

  /**
  * Set field E03CUSPHN using a String value.
  */
  public void setE03CUSPHN(String newvalue)
  {
    fieldE03CUSPHN.setString(newvalue);
  }

  /**
  * Get value of field E03CUSPHN as a String.
  */
  public String getE03CUSPHN()
  {
    return fieldE03CUSPHN.getString();
  }

  /**
  * Set numeric field E03CUSPHN using a BigDecimal value.
  */
  public void setE03CUSPHN(BigDecimal newvalue)
  {
    fieldE03CUSPHN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CUSPHN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CUSPHN()
  {
    return fieldE03CUSPHN.getBigDecimal();
  }

  /**
  * Set field E03CUSPH1 using a String value.
  */
  public void setE03CUSPH1(String newvalue)
  {
    fieldE03CUSPH1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSPH1 as a String.
  */
  public String getE03CUSPH1()
  {
    return fieldE03CUSPH1.getString();
  }

  /**
  * Set numeric field E03CUSPH1 using a BigDecimal value.
  */
  public void setE03CUSPH1(BigDecimal newvalue)
  {
    fieldE03CUSPH1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CUSPH1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CUSPH1()
  {
    return fieldE03CUSPH1.getBigDecimal();
  }

  /**
  * Set field E03CUSFAX using a String value.
  */
  public void setE03CUSFAX(String newvalue)
  {
    fieldE03CUSFAX.setString(newvalue);
  }

  /**
  * Get value of field E03CUSFAX as a String.
  */
  public String getE03CUSFAX()
  {
    return fieldE03CUSFAX.getString();
  }

  /**
  * Set numeric field E03CUSFAX using a BigDecimal value.
  */
  public void setE03CUSFAX(BigDecimal newvalue)
  {
    fieldE03CUSFAX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CUSFAX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CUSFAX()
  {
    return fieldE03CUSFAX.getBigDecimal();
  }

  /**
  * Set field E03CUSIAD using a String value.
  */
  public void setE03CUSIAD(String newvalue)
  {
    fieldE03CUSIAD.setString(newvalue);
  }

  /**
  * Get value of field E03CUSIAD as a String.
  */
  public String getE03CUSIAD()
  {
    return fieldE03CUSIAD.getString();
  }

  /**
  * Set field E03CUSSUC using a String value.
  */
  public void setE03CUSSUC(String newvalue)
  {
    fieldE03CUSSUC.setString(newvalue);
  }

  /**
  * Get value of field E03CUSSUC as a String.
  */
  public String getE03CUSSUC()
  {
    return fieldE03CUSSUC.getString();
  }

  /**
  * Set field E03CUSOBC using a String value.
  */
  public void setE03CUSOBC(String newvalue)
  {
    fieldE03CUSOBC.setString(newvalue);
  }

  /**
  * Get value of field E03CUSOBC as a String.
  */
  public String getE03CUSOBC()
  {
    return fieldE03CUSOBC.getString();
  }

  /**
  * Set field E03CUSOFC using a String value.
  */
  public void setE03CUSOFC(String newvalue)
  {
    fieldE03CUSOFC.setString(newvalue);
  }

  /**
  * Get value of field E03CUSOFC as a String.
  */
  public String getE03CUSOFC()
  {
    return fieldE03CUSOFC.getString();
  }

  /**
  * Set field E03OVDRFT using a String value.
  */
  public void setE03OVDRFT(String newvalue)
  {
    fieldE03OVDRFT.setString(newvalue);
  }

  /**
  * Get value of field E03OVDRFT as a String.
  */
  public String getE03OVDRFT()
  {
    return fieldE03OVDRFT.getString();
  }

  /**
  * Set numeric field E03OVDRFT using a BigDecimal value.
  */
  public void setE03OVDRFT(BigDecimal newvalue)
  {
    fieldE03OVDRFT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03OVDRFT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03OVDRFT()
  {
    return fieldE03OVDRFT.getBigDecimal();
  }

  /**
  * Set field E03LNSMOR using a String value.
  */
  public void setE03LNSMOR(String newvalue)
  {
    fieldE03LNSMOR.setString(newvalue);
  }

  /**
  * Get value of field E03LNSMOR as a String.
  */
  public String getE03LNSMOR()
  {
    return fieldE03LNSMOR.getString();
  }

  /**
  * Set numeric field E03LNSMOR using a BigDecimal value.
  */
  public void setE03LNSMOR(BigDecimal newvalue)
  {
    fieldE03LNSMOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNSMOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNSMOR()
  {
    return fieldE03LNSMOR.getBigDecimal();
  }

  /**
  * Set field E03LNSLSG using a String value.
  */
  public void setE03LNSLSG(String newvalue)
  {
    fieldE03LNSLSG.setString(newvalue);
  }

  /**
  * Get value of field E03LNSLSG as a String.
  */
  public String getE03LNSLSG()
  {
    return fieldE03LNSLSG.getString();
  }

  /**
  * Set numeric field E03LNSLSG using a BigDecimal value.
  */
  public void setE03LNSLSG(BigDecimal newvalue)
  {
    fieldE03LNSLSG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNSLSG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNSLSG()
  {
    return fieldE03LNSLSG.getBigDecimal();
  }

  /**
  * Set field E03LNSCON using a String value.
  */
  public void setE03LNSCON(String newvalue)
  {
    fieldE03LNSCON.setString(newvalue);
  }

  /**
  * Get value of field E03LNSCON as a String.
  */
  public String getE03LNSCON()
  {
    return fieldE03LNSCON.getString();
  }

  /**
  * Set numeric field E03LNSCON using a BigDecimal value.
  */
  public void setE03LNSCON(BigDecimal newvalue)
  {
    fieldE03LNSCON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNSCON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNSCON()
  {
    return fieldE03LNSCON.getBigDecimal();
  }

  /**
  * Set field E03LNSGRL using a String value.
  */
  public void setE03LNSGRL(String newvalue)
  {
    fieldE03LNSGRL.setString(newvalue);
  }

  /**
  * Get value of field E03LNSGRL as a String.
  */
  public String getE03LNSGRL()
  {
    return fieldE03LNSGRL.getString();
  }

  /**
  * Set numeric field E03LNSGRL using a BigDecimal value.
  */
  public void setE03LNSGRL(BigDecimal newvalue)
  {
    fieldE03LNSGRL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNSGRL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNSGRL()
  {
    return fieldE03LNSGRL.getBigDecimal();
  }

  /**
  * Set field E03DESDOC using a String value.
  */
  public void setE03DESDOC(String newvalue)
  {
    fieldE03DESDOC.setString(newvalue);
  }

  /**
  * Get value of field E03DESDOC as a String.
  */
  public String getE03DESDOC()
  {
    return fieldE03DESDOC.getString();
  }

  /**
  * Set numeric field E03DESDOC using a BigDecimal value.
  */
  public void setE03DESDOC(BigDecimal newvalue)
  {
    fieldE03DESDOC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DESDOC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DESDOC()
  {
    return fieldE03DESDOC.getBigDecimal();
  }

  /**
  * Set field E03VALCBR using a String value.
  */
  public void setE03VALCBR(String newvalue)
  {
    fieldE03VALCBR.setString(newvalue);
  }

  /**
  * Get value of field E03VALCBR as a String.
  */
  public String getE03VALCBR()
  {
    return fieldE03VALCBR.getString();
  }

  /**
  * Set numeric field E03VALCBR using a BigDecimal value.
  */
  public void setE03VALCBR(BigDecimal newvalue)
  {
    fieldE03VALCBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03VALCBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03VALCBR()
  {
    return fieldE03VALCBR.getBigDecimal();
  }

  /**
  * Set field E03INVERA using a String value.
  */
  public void setE03INVERA(String newvalue)
  {
    fieldE03INVERA.setString(newvalue);
  }

  /**
  * Get value of field E03INVERA as a String.
  */
  public String getE03INVERA()
  {
    return fieldE03INVERA.getString();
  }

  /**
  * Set numeric field E03INVERA using a BigDecimal value.
  */
  public void setE03INVERA(BigDecimal newvalue)
  {
    fieldE03INVERA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVERA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVERA()
  {
    return fieldE03INVERA.getBigDecimal();
  }

  /**
  * Set field E03ACEPTA using a String value.
  */
  public void setE03ACEPTA(String newvalue)
  {
    fieldE03ACEPTA.setString(newvalue);
  }

  /**
  * Get value of field E03ACEPTA as a String.
  */
  public String getE03ACEPTA()
  {
    return fieldE03ACEPTA.getString();
  }

  /**
  * Set numeric field E03ACEPTA using a BigDecimal value.
  */
  public void setE03ACEPTA(BigDecimal newvalue)
  {
    fieldE03ACEPTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03ACEPTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03ACEPTA()
  {
    return fieldE03ACEPTA.getBigDecimal();
  }

  /**
  * Set field E03LCCONF using a String value.
  */
  public void setE03LCCONF(String newvalue)
  {
    fieldE03LCCONF.setString(newvalue);
  }

  /**
  * Get value of field E03LCCONF as a String.
  */
  public String getE03LCCONF()
  {
    return fieldE03LCCONF.getString();
  }

  /**
  * Set numeric field E03LCCONF using a BigDecimal value.
  */
  public void setE03LCCONF(BigDecimal newvalue)
  {
    fieldE03LCCONF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LCCONF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LCCONF()
  {
    return fieldE03LCCONF.getBigDecimal();
  }

  /**
  * Set field E03SPTPUR using a String value.
  */
  public void setE03SPTPUR(String newvalue)
  {
    fieldE03SPTPUR.setString(newvalue);
  }

  /**
  * Get value of field E03SPTPUR as a String.
  */
  public String getE03SPTPUR()
  {
    return fieldE03SPTPUR.getString();
  }

  /**
  * Set numeric field E03SPTPUR using a BigDecimal value.
  */
  public void setE03SPTPUR(BigDecimal newvalue)
  {
    fieldE03SPTPUR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03SPTPUR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03SPTPUR()
  {
    return fieldE03SPTPUR.getBigDecimal();
  }

  /**
  * Set field E03FRWPUR using a String value.
  */
  public void setE03FRWPUR(String newvalue)
  {
    fieldE03FRWPUR.setString(newvalue);
  }

  /**
  * Get value of field E03FRWPUR as a String.
  */
  public String getE03FRWPUR()
  {
    return fieldE03FRWPUR.getString();
  }

  /**
  * Set numeric field E03FRWPUR using a BigDecimal value.
  */
  public void setE03FRWPUR(BigDecimal newvalue)
  {
    fieldE03FRWPUR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03FRWPUR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03FRWPUR()
  {
    return fieldE03FRWPUR.getBigDecimal();
  }

  /**
  * Set field E03ACPDES using a String value.
  */
  public void setE03ACPDES(String newvalue)
  {
    fieldE03ACPDES.setString(newvalue);
  }

  /**
  * Get value of field E03ACPDES as a String.
  */
  public String getE03ACPDES()
  {
    return fieldE03ACPDES.getString();
  }

  /**
  * Set numeric field E03ACPDES using a BigDecimal value.
  */
  public void setE03ACPDES(BigDecimal newvalue)
  {
    fieldE03ACPDES.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03ACPDES as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03ACPDES()
  {
    return fieldE03ACPDES.getBigDecimal();
  }

  /**
  * Set field E03LCNCON using a String value.
  */
  public void setE03LCNCON(String newvalue)
  {
    fieldE03LCNCON.setString(newvalue);
  }

  /**
  * Get value of field E03LCNCON as a String.
  */
  public String getE03LCNCON()
  {
    return fieldE03LCNCON.getString();
  }

  /**
  * Set numeric field E03LCNCON using a BigDecimal value.
  */
  public void setE03LCNCON(BigDecimal newvalue)
  {
    fieldE03LCNCON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LCNCON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LCNCON()
  {
    return fieldE03LCNCON.getBigDecimal();
  }

  /**
  * Set field E03COLREC using a String value.
  */
  public void setE03COLREC(String newvalue)
  {
    fieldE03COLREC.setString(newvalue);
  }

  /**
  * Get value of field E03COLREC as a String.
  */
  public String getE03COLREC()
  {
    return fieldE03COLREC.getString();
  }

  /**
  * Set numeric field E03COLREC using a BigDecimal value.
  */
  public void setE03COLREC(BigDecimal newvalue)
  {
    fieldE03COLREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03COLREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03COLREC()
  {
    return fieldE03COLREC.getBigDecimal();
  }

  /**
  * Set field E03CTACTE using a String value.
  */
  public void setE03CTACTE(String newvalue)
  {
    fieldE03CTACTE.setString(newvalue);
  }

  /**
  * Get value of field E03CTACTE as a String.
  */
  public String getE03CTACTE()
  {
    return fieldE03CTACTE.getString();
  }

  /**
  * Set numeric field E03CTACTE using a BigDecimal value.
  */
  public void setE03CTACTE(BigDecimal newvalue)
  {
    fieldE03CTACTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CTACTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CTACTE()
  {
    return fieldE03CTACTE.getBigDecimal();
  }

  /**
  * Set field E03CTAMMK using a String value.
  */
  public void setE03CTAMMK(String newvalue)
  {
    fieldE03CTAMMK.setString(newvalue);
  }

  /**
  * Get value of field E03CTAMMK as a String.
  */
  public String getE03CTAMMK()
  {
    return fieldE03CTAMMK.getString();
  }

  /**
  * Set numeric field E03CTAMMK using a BigDecimal value.
  */
  public void setE03CTAMMK(BigDecimal newvalue)
  {
    fieldE03CTAMMK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CTAMMK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CTAMMK()
  {
    return fieldE03CTAMMK.getBigDecimal();
  }

  /**
  * Set field E03CTAAHO using a String value.
  */
  public void setE03CTAAHO(String newvalue)
  {
    fieldE03CTAAHO.setString(newvalue);
  }

  /**
  * Get value of field E03CTAAHO as a String.
  */
  public String getE03CTAAHO()
  {
    return fieldE03CTAAHO.getString();
  }

  /**
  * Set numeric field E03CTAAHO using a BigDecimal value.
  */
  public void setE03CTAAHO(BigDecimal newvalue)
  {
    fieldE03CTAAHO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CTAAHO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CTAAHO()
  {
    return fieldE03CTAAHO.getBigDecimal();
  }

  /**
  * Set field E03CDTDPO using a String value.
  */
  public void setE03CDTDPO(String newvalue)
  {
    fieldE03CDTDPO.setString(newvalue);
  }

  /**
  * Get value of field E03CDTDPO as a String.
  */
  public String getE03CDTDPO()
  {
    return fieldE03CDTDPO.getString();
  }

  /**
  * Set numeric field E03CDTDPO using a BigDecimal value.
  */
  public void setE03CDTDPO(BigDecimal newvalue)
  {
    fieldE03CDTDPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CDTDPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CDTDPO()
  {
    return fieldE03CDTDPO.getBigDecimal();
  }

  /**
  * Set field E03INVERP using a String value.
  */
  public void setE03INVERP(String newvalue)
  {
    fieldE03INVERP.setString(newvalue);
  }

  /**
  * Get value of field E03INVERP as a String.
  */
  public String getE03INVERP()
  {
    return fieldE03INVERP.getString();
  }

  /**
  * Set numeric field E03INVERP using a BigDecimal value.
  */
  public void setE03INVERP(BigDecimal newvalue)
  {
    fieldE03INVERP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVERP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVERP()
  {
    return fieldE03INVERP.getBigDecimal();
  }

  /**
  * Set field E03PARTIC using a String value.
  */
  public void setE03PARTIC(String newvalue)
  {
    fieldE03PARTIC.setString(newvalue);
  }

  /**
  * Get value of field E03PARTIC as a String.
  */
  public String getE03PARTIC()
  {
    return fieldE03PARTIC.getString();
  }

  /**
  * Set numeric field E03PARTIC using a BigDecimal value.
  */
  public void setE03PARTIC(BigDecimal newvalue)
  {
    fieldE03PARTIC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03PARTIC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03PARTIC()
  {
    return fieldE03PARTIC.getBigDecimal();
  }

  /**
  * Set field E03ACEPTP using a String value.
  */
  public void setE03ACEPTP(String newvalue)
  {
    fieldE03ACEPTP.setString(newvalue);
  }

  /**
  * Get value of field E03ACEPTP as a String.
  */
  public String getE03ACEPTP()
  {
    return fieldE03ACEPTP.getString();
  }

  /**
  * Set numeric field E03ACEPTP using a BigDecimal value.
  */
  public void setE03ACEPTP(BigDecimal newvalue)
  {
    fieldE03ACEPTP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03ACEPTP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03ACEPTP()
  {
    return fieldE03ACEPTP.getBigDecimal();
  }

  /**
  * Set field E03LCPROC using a String value.
  */
  public void setE03LCPROC(String newvalue)
  {
    fieldE03LCPROC.setString(newvalue);
  }

  /**
  * Get value of field E03LCPROC as a String.
  */
  public String getE03LCPROC()
  {
    return fieldE03LCPROC.getString();
  }

  /**
  * Set numeric field E03LCPROC using a BigDecimal value.
  */
  public void setE03LCPROC(BigDecimal newvalue)
  {
    fieldE03LCPROC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LCPROC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LCPROC()
  {
    return fieldE03LCPROC.getBigDecimal();
  }

  /**
  * Set field E03SPTSAL using a String value.
  */
  public void setE03SPTSAL(String newvalue)
  {
    fieldE03SPTSAL.setString(newvalue);
  }

  /**
  * Get value of field E03SPTSAL as a String.
  */
  public String getE03SPTSAL()
  {
    return fieldE03SPTSAL.getString();
  }

  /**
  * Set numeric field E03SPTSAL using a BigDecimal value.
  */
  public void setE03SPTSAL(BigDecimal newvalue)
  {
    fieldE03SPTSAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03SPTSAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03SPTSAL()
  {
    return fieldE03SPTSAL.getBigDecimal();
  }

  /**
  * Set field E03FRWSAL using a String value.
  */
  public void setE03FRWSAL(String newvalue)
  {
    fieldE03FRWSAL.setString(newvalue);
  }

  /**
  * Get value of field E03FRWSAL as a String.
  */
  public String getE03FRWSAL()
  {
    return fieldE03FRWSAL.getString();
  }

  /**
  * Set numeric field E03FRWSAL using a BigDecimal value.
  */
  public void setE03FRWSAL(BigDecimal newvalue)
  {
    fieldE03FRWSAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03FRWSAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03FRWSAL()
  {
    return fieldE03FRWSAL.getBigDecimal();
  }

  /**
  * Set field E03GAREFE using a String value.
  */
  public void setE03GAREFE(String newvalue)
  {
    fieldE03GAREFE.setString(newvalue);
  }

  /**
  * Get value of field E03GAREFE as a String.
  */
  public String getE03GAREFE()
  {
    return fieldE03GAREFE.getString();
  }

  /**
  * Set numeric field E03GAREFE using a BigDecimal value.
  */
  public void setE03GAREFE(BigDecimal newvalue)
  {
    fieldE03GAREFE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03GAREFE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03GAREFE()
  {
    return fieldE03GAREFE.getBigDecimal();
  }

  /**
  * Set field E03CBZINT using a String value.
  */
  public void setE03CBZINT(String newvalue)
  {
    fieldE03CBZINT.setString(newvalue);
  }

  /**
  * Get value of field E03CBZINT as a String.
  */
  public String getE03CBZINT()
  {
    return fieldE03CBZINT.getString();
  }

  /**
  * Set numeric field E03CBZINT using a BigDecimal value.
  */
  public void setE03CBZINT(BigDecimal newvalue)
  {
    fieldE03CBZINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CBZINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CBZINT()
  {
    return fieldE03CBZINT.getBigDecimal();
  }

  /**
  * Set field E03CBZLOC using a String value.
  */
  public void setE03CBZLOC(String newvalue)
  {
    fieldE03CBZLOC.setString(newvalue);
  }

  /**
  * Get value of field E03CBZLOC as a String.
  */
  public String getE03CBZLOC()
  {
    return fieldE03CBZLOC.getString();
  }

  /**
  * Set numeric field E03CBZLOC using a BigDecimal value.
  */
  public void setE03CBZLOC(BigDecimal newvalue)
  {
    fieldE03CBZLOC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CBZLOC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CBZLOC()
  {
    return fieldE03CBZLOC.getBigDecimal();
  }

  /**
  * Set field E03COLATE using a String value.
  */
  public void setE03COLATE(String newvalue)
  {
    fieldE03COLATE.setString(newvalue);
  }

  /**
  * Get value of field E03COLATE as a String.
  */
  public String getE03COLATE()
  {
    return fieldE03COLATE.getString();
  }

  /**
  * Set numeric field E03COLATE using a BigDecimal value.
  */
  public void setE03COLATE(BigDecimal newvalue)
  {
    fieldE03COLATE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03COLATE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03COLATE()
  {
    return fieldE03COLATE.getBigDecimal();
  }

  /**
  * Set field E03CDTPIG using a String value.
  */
  public void setE03CDTPIG(String newvalue)
  {
    fieldE03CDTPIG.setString(newvalue);
  }

  /**
  * Get value of field E03CDTPIG as a String.
  */
  public String getE03CDTPIG()
  {
    return fieldE03CDTPIG.getString();
  }

  /**
  * Set numeric field E03CDTPIG using a BigDecimal value.
  */
  public void setE03CDTPIG(BigDecimal newvalue)
  {
    fieldE03CDTPIG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CDTPIG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CDTPIG()
  {
    return fieldE03CDTPIG.getBigDecimal();
  }

  /**
  * Set field E03LNEAMT using a String value.
  */
  public void setE03LNEAMT(String newvalue)
  {
    fieldE03LNEAMT.setString(newvalue);
  }

  /**
  * Get value of field E03LNEAMT as a String.
  */
  public String getE03LNEAMT()
  {
    return fieldE03LNEAMT.getString();
  }

  /**
  * Set numeric field E03LNEAMT using a BigDecimal value.
  */
  public void setE03LNEAMT(BigDecimal newvalue)
  {
    fieldE03LNEAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNEAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNEAMT()
  {
    return fieldE03LNEAMT.getBigDecimal();
  }

  /**
  * Set field E03LNEUSE using a String value.
  */
  public void setE03LNEUSE(String newvalue)
  {
    fieldE03LNEUSE.setString(newvalue);
  }

  /**
  * Get value of field E03LNEUSE as a String.
  */
  public String getE03LNEUSE()
  {
    return fieldE03LNEUSE.getString();
  }

  /**
  * Set numeric field E03LNEUSE using a BigDecimal value.
  */
  public void setE03LNEUSE(BigDecimal newvalue)
  {
    fieldE03LNEUSE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNEUSE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNEUSE()
  {
    return fieldE03LNEUSE.getBigDecimal();
  }

  /**
  * Set field E03LNEAVA using a String value.
  */
  public void setE03LNEAVA(String newvalue)
  {
    fieldE03LNEAVA.setString(newvalue);
  }

  /**
  * Get value of field E03LNEAVA as a String.
  */
  public String getE03LNEAVA()
  {
    return fieldE03LNEAVA.getString();
  }

  /**
  * Set numeric field E03LNEAVA using a BigDecimal value.
  */
  public void setE03LNEAVA(BigDecimal newvalue)
  {
    fieldE03LNEAVA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNEAVA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNEAVA()
  {
    return fieldE03LNEAVA.getBigDecimal();
  }

  /**
  * Set field E03LNETDY using a String value.
  */
  public void setE03LNETDY(String newvalue)
  {
    fieldE03LNETDY.setString(newvalue);
  }

  /**
  * Get value of field E03LNETDY as a String.
  */
  public String getE03LNETDY()
  {
    return fieldE03LNETDY.getString();
  }

  /**
  * Set numeric field E03LNETDY using a BigDecimal value.
  */
  public void setE03LNETDY(BigDecimal newvalue)
  {
    fieldE03LNETDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LNETDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LNETDY()
  {
    return fieldE03LNETDY.getBigDecimal();
  }

  /**
  * Set field E03PARVEN using a String value.
  */
  public void setE03PARVEN(String newvalue)
  {
    fieldE03PARVEN.setString(newvalue);
  }

  /**
  * Get value of field E03PARVEN as a String.
  */
  public String getE03PARVEN()
  {
    return fieldE03PARVEN.getString();
  }

  /**
  * Set numeric field E03PARVEN using a BigDecimal value.
  */
  public void setE03PARVEN(BigDecimal newvalue)
  {
    fieldE03PARVEN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03PARVEN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03PARVEN()
  {
    return fieldE03PARVEN.getBigDecimal();
  }

  /**
  * Set field E03TOTASS using a String value.
  */
  public void setE03TOTASS(String newvalue)
  {
    fieldE03TOTASS.setString(newvalue);
  }

  /**
  * Get value of field E03TOTASS as a String.
  */
  public String getE03TOTASS()
  {
    return fieldE03TOTASS.getString();
  }

  /**
  * Set numeric field E03TOTASS using a BigDecimal value.
  */
  public void setE03TOTASS(BigDecimal newvalue)
  {
    fieldE03TOTASS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTASS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTASS()
  {
    return fieldE03TOTASS.getBigDecimal();
  }

  /**
  * Set field E03TOTLIA using a String value.
  */
  public void setE03TOTLIA(String newvalue)
  {
    fieldE03TOTLIA.setString(newvalue);
  }

  /**
  * Get value of field E03TOTLIA as a String.
  */
  public String getE03TOTLIA()
  {
    return fieldE03TOTLIA.getString();
  }

  /**
  * Set numeric field E03TOTLIA using a BigDecimal value.
  */
  public void setE03TOTLIA(BigDecimal newvalue)
  {
    fieldE03TOTLIA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTLIA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTLIA()
  {
    return fieldE03TOTLIA.getBigDecimal();
  }

  /**
  * Set field E03TOTCDB using a String value.
  */
  public void setE03TOTCDB(String newvalue)
  {
    fieldE03TOTCDB.setString(newvalue);
  }

  /**
  * Get value of field E03TOTCDB as a String.
  */
  public String getE03TOTCDB()
  {
    return fieldE03TOTCDB.getString();
  }

  /**
  * Set numeric field E03TOTCDB using a BigDecimal value.
  */
  public void setE03TOTCDB(BigDecimal newvalue)
  {
    fieldE03TOTCDB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTCDB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTCDB()
  {
    return fieldE03TOTCDB.getBigDecimal();
  }

  /**
  * Set field E03TOTCCR using a String value.
  */
  public void setE03TOTCCR(String newvalue)
  {
    fieldE03TOTCCR.setString(newvalue);
  }

  /**
  * Get value of field E03TOTCCR as a String.
  */
  public String getE03TOTCCR()
  {
    return fieldE03TOTCCR.getString();
  }

  /**
  * Set numeric field E03TOTCCR using a BigDecimal value.
  */
  public void setE03TOTCCR(BigDecimal newvalue)
  {
    fieldE03TOTCCR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTCCR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTCCR()
  {
    return fieldE03TOTCCR.getBigDecimal();
  }

  /**
  * Set field P03OVDRFT using a String value.
  */
  public void setP03OVDRFT(String newvalue)
  {
    fieldP03OVDRFT.setString(newvalue);
  }

  /**
  * Get value of field P03OVDRFT as a String.
  */
  public String getP03OVDRFT()
  {
    return fieldP03OVDRFT.getString();
  }

  /**
  * Set numeric field P03OVDRFT using a BigDecimal value.
  */
  public void setP03OVDRFT(BigDecimal newvalue)
  {
    fieldP03OVDRFT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03OVDRFT as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03OVDRFT()
  {
    return fieldP03OVDRFT.getBigDecimal();
  }

  /**
  * Set field P03LNSMOR using a String value.
  */
  public void setP03LNSMOR(String newvalue)
  {
    fieldP03LNSMOR.setString(newvalue);
  }

  /**
  * Get value of field P03LNSMOR as a String.
  */
  public String getP03LNSMOR()
  {
    return fieldP03LNSMOR.getString();
  }

  /**
  * Set numeric field P03LNSMOR using a BigDecimal value.
  */
  public void setP03LNSMOR(BigDecimal newvalue)
  {
    fieldP03LNSMOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LNSMOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LNSMOR()
  {
    return fieldP03LNSMOR.getBigDecimal();
  }

  /**
  * Set field P03LNSLSG using a String value.
  */
  public void setP03LNSLSG(String newvalue)
  {
    fieldP03LNSLSG.setString(newvalue);
  }

  /**
  * Get value of field P03LNSLSG as a String.
  */
  public String getP03LNSLSG()
  {
    return fieldP03LNSLSG.getString();
  }

  /**
  * Set numeric field P03LNSLSG using a BigDecimal value.
  */
  public void setP03LNSLSG(BigDecimal newvalue)
  {
    fieldP03LNSLSG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LNSLSG as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LNSLSG()
  {
    return fieldP03LNSLSG.getBigDecimal();
  }

  /**
  * Set field P03LNSCON using a String value.
  */
  public void setP03LNSCON(String newvalue)
  {
    fieldP03LNSCON.setString(newvalue);
  }

  /**
  * Get value of field P03LNSCON as a String.
  */
  public String getP03LNSCON()
  {
    return fieldP03LNSCON.getString();
  }

  /**
  * Set numeric field P03LNSCON using a BigDecimal value.
  */
  public void setP03LNSCON(BigDecimal newvalue)
  {
    fieldP03LNSCON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LNSCON as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LNSCON()
  {
    return fieldP03LNSCON.getBigDecimal();
  }

  /**
  * Set field P03LNSGRL using a String value.
  */
  public void setP03LNSGRL(String newvalue)
  {
    fieldP03LNSGRL.setString(newvalue);
  }

  /**
  * Get value of field P03LNSGRL as a String.
  */
  public String getP03LNSGRL()
  {
    return fieldP03LNSGRL.getString();
  }

  /**
  * Set numeric field P03LNSGRL using a BigDecimal value.
  */
  public void setP03LNSGRL(BigDecimal newvalue)
  {
    fieldP03LNSGRL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LNSGRL as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LNSGRL()
  {
    return fieldP03LNSGRL.getBigDecimal();
  }

  /**
  * Set field P03DESDOC using a String value.
  */
  public void setP03DESDOC(String newvalue)
  {
    fieldP03DESDOC.setString(newvalue);
  }

  /**
  * Get value of field P03DESDOC as a String.
  */
  public String getP03DESDOC()
  {
    return fieldP03DESDOC.getString();
  }

  /**
  * Set numeric field P03DESDOC using a BigDecimal value.
  */
  public void setP03DESDOC(BigDecimal newvalue)
  {
    fieldP03DESDOC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03DESDOC as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03DESDOC()
  {
    return fieldP03DESDOC.getBigDecimal();
  }

  /**
  * Set field P03VALCBR using a String value.
  */
  public void setP03VALCBR(String newvalue)
  {
    fieldP03VALCBR.setString(newvalue);
  }

  /**
  * Get value of field P03VALCBR as a String.
  */
  public String getP03VALCBR()
  {
    return fieldP03VALCBR.getString();
  }

  /**
  * Set numeric field P03VALCBR using a BigDecimal value.
  */
  public void setP03VALCBR(BigDecimal newvalue)
  {
    fieldP03VALCBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03VALCBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03VALCBR()
  {
    return fieldP03VALCBR.getBigDecimal();
  }

  /**
  * Set field P03INVERA using a String value.
  */
  public void setP03INVERA(String newvalue)
  {
    fieldP03INVERA.setString(newvalue);
  }

  /**
  * Get value of field P03INVERA as a String.
  */
  public String getP03INVERA()
  {
    return fieldP03INVERA.getString();
  }

  /**
  * Set numeric field P03INVERA using a BigDecimal value.
  */
  public void setP03INVERA(BigDecimal newvalue)
  {
    fieldP03INVERA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03INVERA as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03INVERA()
  {
    return fieldP03INVERA.getBigDecimal();
  }

  /**
  * Set field P03ACEPTA using a String value.
  */
  public void setP03ACEPTA(String newvalue)
  {
    fieldP03ACEPTA.setString(newvalue);
  }

  /**
  * Get value of field P03ACEPTA as a String.
  */
  public String getP03ACEPTA()
  {
    return fieldP03ACEPTA.getString();
  }

  /**
  * Set numeric field P03ACEPTA using a BigDecimal value.
  */
  public void setP03ACEPTA(BigDecimal newvalue)
  {
    fieldP03ACEPTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03ACEPTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03ACEPTA()
  {
    return fieldP03ACEPTA.getBigDecimal();
  }

  /**
  * Set field P03LCCONF using a String value.
  */
  public void setP03LCCONF(String newvalue)
  {
    fieldP03LCCONF.setString(newvalue);
  }

  /**
  * Get value of field P03LCCONF as a String.
  */
  public String getP03LCCONF()
  {
    return fieldP03LCCONF.getString();
  }

  /**
  * Set numeric field P03LCCONF using a BigDecimal value.
  */
  public void setP03LCCONF(BigDecimal newvalue)
  {
    fieldP03LCCONF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LCCONF as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LCCONF()
  {
    return fieldP03LCCONF.getBigDecimal();
  }

  /**
  * Set field P03SPTPUR using a String value.
  */
  public void setP03SPTPUR(String newvalue)
  {
    fieldP03SPTPUR.setString(newvalue);
  }

  /**
  * Get value of field P03SPTPUR as a String.
  */
  public String getP03SPTPUR()
  {
    return fieldP03SPTPUR.getString();
  }

  /**
  * Set numeric field P03SPTPUR using a BigDecimal value.
  */
  public void setP03SPTPUR(BigDecimal newvalue)
  {
    fieldP03SPTPUR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03SPTPUR as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03SPTPUR()
  {
    return fieldP03SPTPUR.getBigDecimal();
  }

  /**
  * Set field P03FRWPUR using a String value.
  */
  public void setP03FRWPUR(String newvalue)
  {
    fieldP03FRWPUR.setString(newvalue);
  }

  /**
  * Get value of field P03FRWPUR as a String.
  */
  public String getP03FRWPUR()
  {
    return fieldP03FRWPUR.getString();
  }

  /**
  * Set numeric field P03FRWPUR using a BigDecimal value.
  */
  public void setP03FRWPUR(BigDecimal newvalue)
  {
    fieldP03FRWPUR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03FRWPUR as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03FRWPUR()
  {
    return fieldP03FRWPUR.getBigDecimal();
  }

  /**
  * Set field P03ACPDES using a String value.
  */
  public void setP03ACPDES(String newvalue)
  {
    fieldP03ACPDES.setString(newvalue);
  }

  /**
  * Get value of field P03ACPDES as a String.
  */
  public String getP03ACPDES()
  {
    return fieldP03ACPDES.getString();
  }

  /**
  * Set numeric field P03ACPDES using a BigDecimal value.
  */
  public void setP03ACPDES(BigDecimal newvalue)
  {
    fieldP03ACPDES.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03ACPDES as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03ACPDES()
  {
    return fieldP03ACPDES.getBigDecimal();
  }

  /**
  * Set field P03LCNCON using a String value.
  */
  public void setP03LCNCON(String newvalue)
  {
    fieldP03LCNCON.setString(newvalue);
  }

  /**
  * Get value of field P03LCNCON as a String.
  */
  public String getP03LCNCON()
  {
    return fieldP03LCNCON.getString();
  }

  /**
  * Set numeric field P03LCNCON using a BigDecimal value.
  */
  public void setP03LCNCON(BigDecimal newvalue)
  {
    fieldP03LCNCON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LCNCON as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LCNCON()
  {
    return fieldP03LCNCON.getBigDecimal();
  }

  /**
  * Set field P03COLREC using a String value.
  */
  public void setP03COLREC(String newvalue)
  {
    fieldP03COLREC.setString(newvalue);
  }

  /**
  * Get value of field P03COLREC as a String.
  */
  public String getP03COLREC()
  {
    return fieldP03COLREC.getString();
  }

  /**
  * Set numeric field P03COLREC using a BigDecimal value.
  */
  public void setP03COLREC(BigDecimal newvalue)
  {
    fieldP03COLREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03COLREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03COLREC()
  {
    return fieldP03COLREC.getBigDecimal();
  }

  /**
  * Set field P03CTACTE using a String value.
  */
  public void setP03CTACTE(String newvalue)
  {
    fieldP03CTACTE.setString(newvalue);
  }

  /**
  * Get value of field P03CTACTE as a String.
  */
  public String getP03CTACTE()
  {
    return fieldP03CTACTE.getString();
  }

  /**
  * Set numeric field P03CTACTE using a BigDecimal value.
  */
  public void setP03CTACTE(BigDecimal newvalue)
  {
    fieldP03CTACTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CTACTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CTACTE()
  {
    return fieldP03CTACTE.getBigDecimal();
  }

  /**
  * Set field P03CTAMMK using a String value.
  */
  public void setP03CTAMMK(String newvalue)
  {
    fieldP03CTAMMK.setString(newvalue);
  }

  /**
  * Get value of field P03CTAMMK as a String.
  */
  public String getP03CTAMMK()
  {
    return fieldP03CTAMMK.getString();
  }

  /**
  * Set numeric field P03CTAMMK using a BigDecimal value.
  */
  public void setP03CTAMMK(BigDecimal newvalue)
  {
    fieldP03CTAMMK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CTAMMK as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CTAMMK()
  {
    return fieldP03CTAMMK.getBigDecimal();
  }

  /**
  * Set field P03CTAAHO using a String value.
  */
  public void setP03CTAAHO(String newvalue)
  {
    fieldP03CTAAHO.setString(newvalue);
  }

  /**
  * Get value of field P03CTAAHO as a String.
  */
  public String getP03CTAAHO()
  {
    return fieldP03CTAAHO.getString();
  }

  /**
  * Set numeric field P03CTAAHO using a BigDecimal value.
  */
  public void setP03CTAAHO(BigDecimal newvalue)
  {
    fieldP03CTAAHO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CTAAHO as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CTAAHO()
  {
    return fieldP03CTAAHO.getBigDecimal();
  }

  /**
  * Set field P03CDTDPO using a String value.
  */
  public void setP03CDTDPO(String newvalue)
  {
    fieldP03CDTDPO.setString(newvalue);
  }

  /**
  * Get value of field P03CDTDPO as a String.
  */
  public String getP03CDTDPO()
  {
    return fieldP03CDTDPO.getString();
  }

  /**
  * Set numeric field P03CDTDPO using a BigDecimal value.
  */
  public void setP03CDTDPO(BigDecimal newvalue)
  {
    fieldP03CDTDPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CDTDPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CDTDPO()
  {
    return fieldP03CDTDPO.getBigDecimal();
  }

  /**
  * Set field P03INVERP using a String value.
  */
  public void setP03INVERP(String newvalue)
  {
    fieldP03INVERP.setString(newvalue);
  }

  /**
  * Get value of field P03INVERP as a String.
  */
  public String getP03INVERP()
  {
    return fieldP03INVERP.getString();
  }

  /**
  * Set numeric field P03INVERP using a BigDecimal value.
  */
  public void setP03INVERP(BigDecimal newvalue)
  {
    fieldP03INVERP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03INVERP as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03INVERP()
  {
    return fieldP03INVERP.getBigDecimal();
  }

  /**
  * Set field P03PARTIC using a String value.
  */
  public void setP03PARTIC(String newvalue)
  {
    fieldP03PARTIC.setString(newvalue);
  }

  /**
  * Get value of field P03PARTIC as a String.
  */
  public String getP03PARTIC()
  {
    return fieldP03PARTIC.getString();
  }

  /**
  * Set numeric field P03PARTIC using a BigDecimal value.
  */
  public void setP03PARTIC(BigDecimal newvalue)
  {
    fieldP03PARTIC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03PARTIC as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03PARTIC()
  {
    return fieldP03PARTIC.getBigDecimal();
  }

  /**
  * Set field P03ACEPTP using a String value.
  */
  public void setP03ACEPTP(String newvalue)
  {
    fieldP03ACEPTP.setString(newvalue);
  }

  /**
  * Get value of field P03ACEPTP as a String.
  */
  public String getP03ACEPTP()
  {
    return fieldP03ACEPTP.getString();
  }

  /**
  * Set numeric field P03ACEPTP using a BigDecimal value.
  */
  public void setP03ACEPTP(BigDecimal newvalue)
  {
    fieldP03ACEPTP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03ACEPTP as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03ACEPTP()
  {
    return fieldP03ACEPTP.getBigDecimal();
  }

  /**
  * Set field P03LCPROC using a String value.
  */
  public void setP03LCPROC(String newvalue)
  {
    fieldP03LCPROC.setString(newvalue);
  }

  /**
  * Get value of field P03LCPROC as a String.
  */
  public String getP03LCPROC()
  {
    return fieldP03LCPROC.getString();
  }

  /**
  * Set numeric field P03LCPROC using a BigDecimal value.
  */
  public void setP03LCPROC(BigDecimal newvalue)
  {
    fieldP03LCPROC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03LCPROC as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03LCPROC()
  {
    return fieldP03LCPROC.getBigDecimal();
  }

  /**
  * Set field P03SPTSAL using a String value.
  */
  public void setP03SPTSAL(String newvalue)
  {
    fieldP03SPTSAL.setString(newvalue);
  }

  /**
  * Get value of field P03SPTSAL as a String.
  */
  public String getP03SPTSAL()
  {
    return fieldP03SPTSAL.getString();
  }

  /**
  * Set numeric field P03SPTSAL using a BigDecimal value.
  */
  public void setP03SPTSAL(BigDecimal newvalue)
  {
    fieldP03SPTSAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03SPTSAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03SPTSAL()
  {
    return fieldP03SPTSAL.getBigDecimal();
  }

  /**
  * Set field P03FRWSAL using a String value.
  */
  public void setP03FRWSAL(String newvalue)
  {
    fieldP03FRWSAL.setString(newvalue);
  }

  /**
  * Get value of field P03FRWSAL as a String.
  */
  public String getP03FRWSAL()
  {
    return fieldP03FRWSAL.getString();
  }

  /**
  * Set numeric field P03FRWSAL using a BigDecimal value.
  */
  public void setP03FRWSAL(BigDecimal newvalue)
  {
    fieldP03FRWSAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03FRWSAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03FRWSAL()
  {
    return fieldP03FRWSAL.getBigDecimal();
  }

  /**
  * Set field P03GAREFE using a String value.
  */
  public void setP03GAREFE(String newvalue)
  {
    fieldP03GAREFE.setString(newvalue);
  }

  /**
  * Get value of field P03GAREFE as a String.
  */
  public String getP03GAREFE()
  {
    return fieldP03GAREFE.getString();
  }

  /**
  * Set numeric field P03GAREFE using a BigDecimal value.
  */
  public void setP03GAREFE(BigDecimal newvalue)
  {
    fieldP03GAREFE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03GAREFE as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03GAREFE()
  {
    return fieldP03GAREFE.getBigDecimal();
  }

  /**
  * Set field P03CBZINT using a String value.
  */
  public void setP03CBZINT(String newvalue)
  {
    fieldP03CBZINT.setString(newvalue);
  }

  /**
  * Get value of field P03CBZINT as a String.
  */
  public String getP03CBZINT()
  {
    return fieldP03CBZINT.getString();
  }

  /**
  * Set numeric field P03CBZINT using a BigDecimal value.
  */
  public void setP03CBZINT(BigDecimal newvalue)
  {
    fieldP03CBZINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CBZINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CBZINT()
  {
    return fieldP03CBZINT.getBigDecimal();
  }

  /**
  * Set field P03CBZLOC using a String value.
  */
  public void setP03CBZLOC(String newvalue)
  {
    fieldP03CBZLOC.setString(newvalue);
  }

  /**
  * Get value of field P03CBZLOC as a String.
  */
  public String getP03CBZLOC()
  {
    return fieldP03CBZLOC.getString();
  }

  /**
  * Set numeric field P03CBZLOC using a BigDecimal value.
  */
  public void setP03CBZLOC(BigDecimal newvalue)
  {
    fieldP03CBZLOC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CBZLOC as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CBZLOC()
  {
    return fieldP03CBZLOC.getBigDecimal();
  }

  /**
  * Set field P03COLATE using a String value.
  */
  public void setP03COLATE(String newvalue)
  {
    fieldP03COLATE.setString(newvalue);
  }

  /**
  * Get value of field P03COLATE as a String.
  */
  public String getP03COLATE()
  {
    return fieldP03COLATE.getString();
  }

  /**
  * Set numeric field P03COLATE using a BigDecimal value.
  */
  public void setP03COLATE(BigDecimal newvalue)
  {
    fieldP03COLATE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03COLATE as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03COLATE()
  {
    return fieldP03COLATE.getBigDecimal();
  }

  /**
  * Set field P03CDTPIG using a String value.
  */
  public void setP03CDTPIG(String newvalue)
  {
    fieldP03CDTPIG.setString(newvalue);
  }

  /**
  * Get value of field P03CDTPIG as a String.
  */
  public String getP03CDTPIG()
  {
    return fieldP03CDTPIG.getString();
  }

  /**
  * Set numeric field P03CDTPIG using a BigDecimal value.
  */
  public void setP03CDTPIG(BigDecimal newvalue)
  {
    fieldP03CDTPIG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field P03CDTPIG as a BigDecimal.
  */
  public BigDecimal getBigDecimalP03CDTPIG()
  {
    return fieldP03CDTPIG.getBigDecimal();
  }

}
