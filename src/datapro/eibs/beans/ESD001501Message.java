package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD001501 physical file definition.
* 
* File level identifier is 1040712191522.
* Record format level identifier is 3C105B27DA476.
*/

public class ESD001501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USR",
                                     "H01PGM",
                                     "H01TIM",
                                     "H01SCR",
                                     "H01OPE",
                                     "H01MAS",
                                     "H01WK1",
                                     "H01WK2",
                                     "H01WK3",
                                     "E01MID",
                                     "E01BNK",
                                     "E01BRN",
                                     "E01CCY",
                                     "E01GLN",
                                     "E01DSC",
                                     "E01BBL"
                                   };
  final static String tnames[] = {
                                   "H01USR",
                                   "H01PGM",
                                   "H01TIM",
                                   "H01SCR",
                                   "H01OPE",
                                   "H01MAS",
                                   "H01WK1",
                                   "H01WK2",
                                   "H01WK3",
                                   "E01MID",
                                   "E01BNK",
                                   "E01BRN",
                                   "E01CCY",
                                   "E01GLN",
                                   "E01DSC",
                                   "E01BBL"
                                 };
  final static String fid = "1040712191522";
  final static String rid = "3C105B27DA476";
  final static String fmtname = "ESD001501";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USR = null;
  private CharacterField fieldH01PGM = null;
  private CharacterField fieldH01TIM = null;
  private CharacterField fieldH01SCR = null;
  private CharacterField fieldH01OPE = null;
  private CharacterField fieldH01MAS = null;
  private CharacterField fieldH01WK1 = null;
  private CharacterField fieldH01WK2 = null;
  private CharacterField fieldH01WK3 = null;
  private CharacterField fieldE01MID = null;
  private CharacterField fieldE01BNK = null;
  private DecimalField fieldE01BRN = null;
  private CharacterField fieldE01CCY = null;
  private DecimalField fieldE01GLN = null;
  private CharacterField fieldE01DSC = null;
  private DecimalField fieldE01BBL = null;

  /**
  * Constructor for ESD001501Message.
  */
  public ESD001501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 130;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USR");
    fields[1] = fieldH01PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PGM");
    fields[2] = fieldH01TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIM");
    fields[3] = fieldH01SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCR");
    fields[4] = fieldH01OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPE");
    fields[5] = fieldH01MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01MAS");
    fields[6] = fieldH01WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01WK1");
    fields[7] = fieldH01WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01WK2");
    fields[8] = fieldH01WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01WK3");
    fields[9] = fieldE01MID =
    new CharacterField(message, HEADERSIZE + 42, 16, "E01MID");
    fields[10] = fieldE01BNK =
    new CharacterField(message, HEADERSIZE + 58, 2, "E01BNK");
    fields[11] = fieldE01BRN =
    new DecimalField(message, HEADERSIZE + 60, 4, 0, "E01BRN");
    fields[12] = fieldE01CCY =
    new CharacterField(message, HEADERSIZE + 64, 3, "E01CCY");
    fields[13] = fieldE01GLN =
    new DecimalField(message, HEADERSIZE + 67, 13, 0, "E01GLN");
    fields[14] = fieldE01DSC =
    new CharacterField(message, HEADERSIZE + 80, 35, "E01DSC");
    fields[15] = fieldE01BBL =
    new DecimalField(message, HEADERSIZE + 115, 15, 2, "E01BBL");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USR using a String value.
  */
  public void setH01USR(String newvalue)
  {
    fieldH01USR.setString(newvalue);
  }

  /**
  * Get value of field H01USR as a String.
  */
  public String getH01USR()
  {
    return fieldH01USR.getString();
  }

  /**
  * Set field H01PGM using a String value.
  */
  public void setH01PGM(String newvalue)
  {
    fieldH01PGM.setString(newvalue);
  }

  /**
  * Get value of field H01PGM as a String.
  */
  public String getH01PGM()
  {
    return fieldH01PGM.getString();
  }

  /**
  * Set field H01TIM using a String value.
  */
  public void setH01TIM(String newvalue)
  {
    fieldH01TIM.setString(newvalue);
  }

  /**
  * Get value of field H01TIM as a String.
  */
  public String getH01TIM()
  {
    return fieldH01TIM.getString();
  }

  /**
  * Set field H01SCR using a String value.
  */
  public void setH01SCR(String newvalue)
  {
    fieldH01SCR.setString(newvalue);
  }

  /**
  * Get value of field H01SCR as a String.
  */
  public String getH01SCR()
  {
    return fieldH01SCR.getString();
  }

  /**
  * Set field H01OPE using a String value.
  */
  public void setH01OPE(String newvalue)
  {
    fieldH01OPE.setString(newvalue);
  }

  /**
  * Get value of field H01OPE as a String.
  */
  public String getH01OPE()
  {
    return fieldH01OPE.getString();
  }

  /**
  * Set field H01MAS using a String value.
  */
  public void setH01MAS(String newvalue)
  {
    fieldH01MAS.setString(newvalue);
  }

  /**
  * Get value of field H01MAS as a String.
  */
  public String getH01MAS()
  {
    return fieldH01MAS.getString();
  }

  /**
  * Set field H01WK1 using a String value.
  */
  public void setH01WK1(String newvalue)
  {
    fieldH01WK1.setString(newvalue);
  }

  /**
  * Get value of field H01WK1 as a String.
  */
  public String getH01WK1()
  {
    return fieldH01WK1.getString();
  }

  /**
  * Set field H01WK2 using a String value.
  */
  public void setH01WK2(String newvalue)
  {
    fieldH01WK2.setString(newvalue);
  }

  /**
  * Get value of field H01WK2 as a String.
  */
  public String getH01WK2()
  {
    return fieldH01WK2.getString();
  }

  /**
  * Set field H01WK3 using a String value.
  */
  public void setH01WK3(String newvalue)
  {
    fieldH01WK3.setString(newvalue);
  }

  /**
  * Get value of field H01WK3 as a String.
  */
  public String getH01WK3()
  {
    return fieldH01WK3.getString();
  }

  /**
  * Set field E01MID using a String value.
  */
  public void setE01MID(String newvalue)
  {
    fieldE01MID.setString(newvalue);
  }

  /**
  * Get value of field E01MID as a String.
  */
  public String getE01MID()
  {
    return fieldE01MID.getString();
  }

  /**
  * Set field E01BNK using a String value.
  */
  public void setE01BNK(String newvalue)
  {
    fieldE01BNK.setString(newvalue);
  }

  /**
  * Get value of field E01BNK as a String.
  */
  public String getE01BNK()
  {
    return fieldE01BNK.getString();
  }

  /**
  * Set field E01BRN using a String value.
  */
  public void setE01BRN(String newvalue)
  {
    fieldE01BRN.setString(newvalue);
  }

  /**
  * Get value of field E01BRN as a String.
  */
  public String getE01BRN()
  {
    return fieldE01BRN.getString();
  }

  /**
  * Set numeric field E01BRN using a BigDecimal value.
  */
  public void setE01BRN(BigDecimal newvalue)
  {
    fieldE01BRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BRN()
  {
    return fieldE01BRN.getBigDecimal();
  }

  /**
  * Set field E01CCY using a String value.
  */
  public void setE01CCY(String newvalue)
  {
    fieldE01CCY.setString(newvalue);
  }

  /**
  * Get value of field E01CCY as a String.
  */
  public String getE01CCY()
  {
    return fieldE01CCY.getString();
  }

  /**
  * Set field E01GLN using a String value.
  */
  public void setE01GLN(String newvalue)
  {
    fieldE01GLN.setString(newvalue);
  }

  /**
  * Get value of field E01GLN as a String.
  */
  public String getE01GLN()
  {
    return fieldE01GLN.getString();
  }

  /**
  * Set numeric field E01GLN using a BigDecimal value.
  */
  public void setE01GLN(BigDecimal newvalue)
  {
    fieldE01GLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01GLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01GLN()
  {
    return fieldE01GLN.getBigDecimal();
  }

  /**
  * Set field E01DSC using a String value.
  */
  public void setE01DSC(String newvalue)
  {
    fieldE01DSC.setString(newvalue);
  }

  /**
  * Get value of field E01DSC as a String.
  */
  public String getE01DSC()
  {
    return fieldE01DSC.getString();
  }

  /**
  * Set field E01BBL using a String value.
  */
  public void setE01BBL(String newvalue)
  {
    fieldE01BBL.setString(newvalue);
  }

  /**
  * Get value of field E01BBL as a String.
  */
  public String getE01BBL()
  {
    return fieldE01BBL.getString();
  }

  /**
  * Set numeric field E01BBL using a BigDecimal value.
  */
  public void setE01BBL(BigDecimal newvalue)
  {
    fieldE01BBL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BBL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BBL()
  {
    return fieldE01BBL.getBigDecimal();
  }

}
