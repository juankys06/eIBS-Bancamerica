package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECLI00101 physical file definition.
* 
* File level identifier is 1030121191839.
* Record format level identifier is 372A4DD1C2110.
*/

public class ECLI00101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USR",
                                     "H01PGM",
                                     "H01TIM",
                                     "H01SCR",
                                     "H01OPE",
                                     "H01MAS",
                                     "H01WK1",
                                     "H01WK2",
                                     "H01WK3",
                                     "E01CUN",
                                     "E01NA1",
                                     "E01NA2",
                                     "E01NA3",
                                     "E01NA4",
                                     "E01CTY",
                                     "E01CTR"
                                   };
  final static String tnames[] = {
                                   "H01USR",
                                   "H01PGM",
                                   "H01TIM",
                                   "H01SCR",
                                   "H01OPE",
                                   "H01MAS",
                                   "H01WK1",
                                   "H01WK2",
                                   "H01WK3",
                                   "E01CUN",
                                   "E01NA1",
                                   "E01NA2",
                                   "E01NA3",
                                   "E01NA4",
                                   "E01CTY",
                                   "E01CTR"
                                 };
  final static String fid = "1030121191839";
  final static String rid = "372A4DD1C2110";
  final static String fmtname = "ECLI00101";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USR = null;
  private CharacterField fieldH01PGM = null;
  private CharacterField fieldH01TIM = null;
  private CharacterField fieldH01SCR = null;
  private CharacterField fieldH01OPE = null;
  private CharacterField fieldH01MAS = null;
  private CharacterField fieldH01WK1 = null;
  private CharacterField fieldH01WK2 = null;
  private CharacterField fieldH01WK3 = null;
  private DecimalField fieldE01CUN = null;
  private CharacterField fieldE01NA1 = null;
  private CharacterField fieldE01NA2 = null;
  private CharacterField fieldE01NA3 = null;
  private CharacterField fieldE01NA4 = null;
  private CharacterField fieldE01CTY = null;
  private CharacterField fieldE01CTR = null;

  /**
  * Constructor for ECLI00101Message.
  */
  public ECLI00101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 252;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USR");
    fields[1] = fieldH01PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PGM");
    fields[2] = fieldH01TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIM");
    fields[3] = fieldH01SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCR");
    fields[4] = fieldH01OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPE");
    fields[5] = fieldH01MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01MAS");
    fields[6] = fieldH01WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01WK1");
    fields[7] = fieldH01WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01WK2");
    fields[8] = fieldH01WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01WK3");
    fields[9] = fieldE01CUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01CUN");
    fields[10] = fieldE01NA1 =
    new CharacterField(message, HEADERSIZE + 52, 45, "E01NA1");
    fields[11] = fieldE01NA2 =
    new CharacterField(message, HEADERSIZE + 97, 35, "E01NA2");
    fields[12] = fieldE01NA3 =
    new CharacterField(message, HEADERSIZE + 132, 35, "E01NA3");
    fields[13] = fieldE01NA4 =
    new CharacterField(message, HEADERSIZE + 167, 35, "E01NA4");
    fields[14] = fieldE01CTY =
    new CharacterField(message, HEADERSIZE + 202, 30, "E01CTY");
    fields[15] = fieldE01CTR =
    new CharacterField(message, HEADERSIZE + 232, 20, "E01CTR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USR using a String value.
  */
  public void setH01USR(String newvalue)
  {
    fieldH01USR.setString(newvalue);
  }

  /**
  * Get value of field H01USR as a String.
  */
  public String getH01USR()
  {
    return fieldH01USR.getString();
  }

  /**
  * Set field H01PGM using a String value.
  */
  public void setH01PGM(String newvalue)
  {
    fieldH01PGM.setString(newvalue);
  }

  /**
  * Get value of field H01PGM as a String.
  */
  public String getH01PGM()
  {
    return fieldH01PGM.getString();
  }

  /**
  * Set field H01TIM using a String value.
  */
  public void setH01TIM(String newvalue)
  {
    fieldH01TIM.setString(newvalue);
  }

  /**
  * Get value of field H01TIM as a String.
  */
  public String getH01TIM()
  {
    return fieldH01TIM.getString();
  }

  /**
  * Set field H01SCR using a String value.
  */
  public void setH01SCR(String newvalue)
  {
    fieldH01SCR.setString(newvalue);
  }

  /**
  * Get value of field H01SCR as a String.
  */
  public String getH01SCR()
  {
    return fieldH01SCR.getString();
  }

  /**
  * Set field H01OPE using a String value.
  */
  public void setH01OPE(String newvalue)
  {
    fieldH01OPE.setString(newvalue);
  }

  /**
  * Get value of field H01OPE as a String.
  */
  public String getH01OPE()
  {
    return fieldH01OPE.getString();
  }

  /**
  * Set field H01MAS using a String value.
  */
  public void setH01MAS(String newvalue)
  {
    fieldH01MAS.setString(newvalue);
  }

  /**
  * Get value of field H01MAS as a String.
  */
  public String getH01MAS()
  {
    return fieldH01MAS.getString();
  }

  /**
  * Set field H01WK1 using a String value.
  */
  public void setH01WK1(String newvalue)
  {
    fieldH01WK1.setString(newvalue);
  }

  /**
  * Get value of field H01WK1 as a String.
  */
  public String getH01WK1()
  {
    return fieldH01WK1.getString();
  }

  /**
  * Set field H01WK2 using a String value.
  */
  public void setH01WK2(String newvalue)
  {
    fieldH01WK2.setString(newvalue);
  }

  /**
  * Get value of field H01WK2 as a String.
  */
  public String getH01WK2()
  {
    return fieldH01WK2.getString();
  }

  /**
  * Set field H01WK3 using a String value.
  */
  public void setH01WK3(String newvalue)
  {
    fieldH01WK3.setString(newvalue);
  }

  /**
  * Get value of field H01WK3 as a String.
  */
  public String getH01WK3()
  {
    return fieldH01WK3.getString();
  }

  /**
  * Set field E01CUN using a String value.
  */
  public void setE01CUN(String newvalue)
  {
    fieldE01CUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUN as a String.
  */
  public String getE01CUN()
  {
    return fieldE01CUN.getString();
  }

  /**
  * Set numeric field E01CUN using a BigDecimal value.
  */
  public void setE01CUN(BigDecimal newvalue)
  {
    fieldE01CUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUN()
  {
    return fieldE01CUN.getBigDecimal();
  }

  /**
  * Set field E01NA1 using a String value.
  */
  public void setE01NA1(String newvalue)
  {
    fieldE01NA1.setString(newvalue);
  }

  /**
  * Get value of field E01NA1 as a String.
  */
  public String getE01NA1()
  {
    return fieldE01NA1.getString();
  }

  /**
  * Set field E01NA2 using a String value.
  */
  public void setE01NA2(String newvalue)
  {
    fieldE01NA2.setString(newvalue);
  }

  /**
  * Get value of field E01NA2 as a String.
  */
  public String getE01NA2()
  {
    return fieldE01NA2.getString();
  }

  /**
  * Set field E01NA3 using a String value.
  */
  public void setE01NA3(String newvalue)
  {
    fieldE01NA3.setString(newvalue);
  }

  /**
  * Get value of field E01NA3 as a String.
  */
  public String getE01NA3()
  {
    return fieldE01NA3.getString();
  }

  /**
  * Set field E01NA4 using a String value.
  */
  public void setE01NA4(String newvalue)
  {
    fieldE01NA4.setString(newvalue);
  }

  /**
  * Get value of field E01NA4 as a String.
  */
  public String getE01NA4()
  {
    return fieldE01NA4.getString();
  }

  /**
  * Set field E01CTY using a String value.
  */
  public void setE01CTY(String newvalue)
  {
    fieldE01CTY.setString(newvalue);
  }

  /**
  * Get value of field E01CTY as a String.
  */
  public String getE01CTY()
  {
    return fieldE01CTY.getString();
  }

  /**
  * Set field E01CTR using a String value.
  */
  public void setE01CTR(String newvalue)
  {
    fieldE01CTR.setString(newvalue);
  }

  /**
  * Get value of field E01CTR as a String.
  */
  public String getE01CTR()
  {
    return fieldE01CTR.getString();
  }

}
