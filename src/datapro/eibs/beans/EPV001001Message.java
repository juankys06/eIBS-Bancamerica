package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPV001001 physical file definition.
* 
* File level identifier is 1041203172158.
* Record format level identifier is 2F181B2A22686.
*/

public class EPV001001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PVMNUM",
                                     "E01PVMCUN",
                                     "E01PVMNA1",
                                     "E01PVMIDE",
                                     "E01PVBFMR",
                                     "E01PVBDAM",
                                     "E01PVBDVE",
                                     "E01PVBDCA",
                                     "E01PVBIAM",
                                     "E01PVBIVE",
                                     "E01PVBICA",
                                     "E01PVBNPO",
                                     "E01PVBMPO",
                                     "E01PVBFOR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PVMNUM",
                                   "E01PVMCUN",
                                   "E01PVMNA1",
                                   "E01PVMIDE",
                                   "E01PVBFMR",
                                   "E01PVBDAM",
                                   "E01PVBDVE",
                                   "E01PVBDCA",
                                   "E01PVBIAM",
                                   "E01PVBIVE",
                                   "E01PVBICA",
                                   "E01PVBNPO",
                                   "E01PVBMPO",
                                   "E01PVBFOR"
                                 };
  final static String fid = "1041203172158";
  final static String rid = "2F181B2A22686";
  final static String fmtname = "EPV001001";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PVMNUM = null;
  private DecimalField fieldE01PVMCUN = null;
  private CharacterField fieldE01PVMNA1 = null;
  private CharacterField fieldE01PVMIDE = null;
  private CharacterField fieldE01PVBFMR = null;
  private DecimalField fieldE01PVBDAM = null;
  private DecimalField fieldE01PVBDVE = null;
  private DecimalField fieldE01PVBDCA = null;
  private DecimalField fieldE01PVBIAM = null;
  private DecimalField fieldE01PVBIVE = null;
  private DecimalField fieldE01PVBICA = null;
  private DecimalField fieldE01PVBNPO = null;
  private DecimalField fieldE01PVBMPO = null;
  private DecimalField fieldE01PVBFOR = null;

  /**
  * Constructor for EPV001001Message.
  */
  public EPV001001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 252;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PVMNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01PVMNUM");
    fields[10] = fieldE01PVMCUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E01PVMCUN");
    fields[11] = fieldE01PVMNA1 =
    new CharacterField(message, HEADERSIZE + 65, 45, "E01PVMNA1");
    fields[12] = fieldE01PVMIDE =
    new CharacterField(message, HEADERSIZE + 110, 15, "E01PVMIDE");
    fields[13] = fieldE01PVBFMR =
    new CharacterField(message, HEADERSIZE + 125, 1, "E01PVBFMR");
    fields[14] = fieldE01PVBDAM =
    new DecimalField(message, HEADERSIZE + 126, 17, 2, "E01PVBDAM");
    fields[15] = fieldE01PVBDVE =
    new DecimalField(message, HEADERSIZE + 143, 17, 2, "E01PVBDVE");
    fields[16] = fieldE01PVBDCA =
    new DecimalField(message, HEADERSIZE + 160, 17, 2, "E01PVBDCA");
    fields[17] = fieldE01PVBIAM =
    new DecimalField(message, HEADERSIZE + 177, 17, 2, "E01PVBIAM");
    fields[18] = fieldE01PVBIVE =
    new DecimalField(message, HEADERSIZE + 194, 17, 2, "E01PVBIVE");
    fields[19] = fieldE01PVBICA =
    new DecimalField(message, HEADERSIZE + 211, 17, 2, "E01PVBICA");
    fields[20] = fieldE01PVBNPO =
    new DecimalField(message, HEADERSIZE + 228, 4, 0, "E01PVBNPO");
    fields[21] = fieldE01PVBMPO =
    new DecimalField(message, HEADERSIZE + 232, 17, 2, "E01PVBMPO");
    fields[22] = fieldE01PVBFOR =
    new DecimalField(message, HEADERSIZE + 249, 3, 0, "E01PVBFOR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PVMNUM using a String value.
  */
  public void setE01PVMNUM(String newvalue)
  {
    fieldE01PVMNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PVMNUM as a String.
  */
  public String getE01PVMNUM()
  {
    return fieldE01PVMNUM.getString();
  }

  /**
  * Set numeric field E01PVMNUM using a BigDecimal value.
  */
  public void setE01PVMNUM(BigDecimal newvalue)
  {
    fieldE01PVMNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVMNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVMNUM()
  {
    return fieldE01PVMNUM.getBigDecimal();
  }

  /**
  * Set field E01PVMCUN using a String value.
  */
  public void setE01PVMCUN(String newvalue)
  {
    fieldE01PVMCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PVMCUN as a String.
  */
  public String getE01PVMCUN()
  {
    return fieldE01PVMCUN.getString();
  }

  /**
  * Set numeric field E01PVMCUN using a BigDecimal value.
  */
  public void setE01PVMCUN(BigDecimal newvalue)
  {
    fieldE01PVMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVMCUN()
  {
    return fieldE01PVMCUN.getBigDecimal();
  }

  /**
  * Set field E01PVMNA1 using a String value.
  */
  public void setE01PVMNA1(String newvalue)
  {
    fieldE01PVMNA1.setString(newvalue);
  }

  /**
  * Get value of field E01PVMNA1 as a String.
  */
  public String getE01PVMNA1()
  {
    return fieldE01PVMNA1.getString();
  }

  /**
  * Set field E01PVMIDE using a String value.
  */
  public void setE01PVMIDE(String newvalue)
  {
    fieldE01PVMIDE.setString(newvalue);
  }

  /**
  * Get value of field E01PVMIDE as a String.
  */
  public String getE01PVMIDE()
  {
    return fieldE01PVMIDE.getString();
  }

  /**
  * Set field E01PVBFMR using a String value.
  */
  public void setE01PVBFMR(String newvalue)
  {
    fieldE01PVBFMR.setString(newvalue);
  }

  /**
  * Get value of field E01PVBFMR as a String.
  */
  public String getE01PVBFMR()
  {
    return fieldE01PVBFMR.getString();
  }

  /**
  * Set field E01PVBDAM using a String value.
  */
  public void setE01PVBDAM(String newvalue)
  {
    fieldE01PVBDAM.setString(newvalue);
  }

  /**
  * Get value of field E01PVBDAM as a String.
  */
  public String getE01PVBDAM()
  {
    return fieldE01PVBDAM.getString();
  }

  /**
  * Set numeric field E01PVBDAM using a BigDecimal value.
  */
  public void setE01PVBDAM(BigDecimal newvalue)
  {
    fieldE01PVBDAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBDAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBDAM()
  {
    return fieldE01PVBDAM.getBigDecimal();
  }

  /**
  * Set field E01PVBDVE using a String value.
  */
  public void setE01PVBDVE(String newvalue)
  {
    fieldE01PVBDVE.setString(newvalue);
  }

  /**
  * Get value of field E01PVBDVE as a String.
  */
  public String getE01PVBDVE()
  {
    return fieldE01PVBDVE.getString();
  }

  /**
  * Set numeric field E01PVBDVE using a BigDecimal value.
  */
  public void setE01PVBDVE(BigDecimal newvalue)
  {
    fieldE01PVBDVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBDVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBDVE()
  {
    return fieldE01PVBDVE.getBigDecimal();
  }

  /**
  * Set field E01PVBDCA using a String value.
  */
  public void setE01PVBDCA(String newvalue)
  {
    fieldE01PVBDCA.setString(newvalue);
  }

  /**
  * Get value of field E01PVBDCA as a String.
  */
  public String getE01PVBDCA()
  {
    return fieldE01PVBDCA.getString();
  }

  /**
  * Set numeric field E01PVBDCA using a BigDecimal value.
  */
  public void setE01PVBDCA(BigDecimal newvalue)
  {
    fieldE01PVBDCA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBDCA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBDCA()
  {
    return fieldE01PVBDCA.getBigDecimal();
  }

  /**
  * Set field E01PVBIAM using a String value.
  */
  public void setE01PVBIAM(String newvalue)
  {
    fieldE01PVBIAM.setString(newvalue);
  }

  /**
  * Get value of field E01PVBIAM as a String.
  */
  public String getE01PVBIAM()
  {
    return fieldE01PVBIAM.getString();
  }

  /**
  * Set numeric field E01PVBIAM using a BigDecimal value.
  */
  public void setE01PVBIAM(BigDecimal newvalue)
  {
    fieldE01PVBIAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBIAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBIAM()
  {
    return fieldE01PVBIAM.getBigDecimal();
  }

  /**
  * Set field E01PVBIVE using a String value.
  */
  public void setE01PVBIVE(String newvalue)
  {
    fieldE01PVBIVE.setString(newvalue);
  }

  /**
  * Get value of field E01PVBIVE as a String.
  */
  public String getE01PVBIVE()
  {
    return fieldE01PVBIVE.getString();
  }

  /**
  * Set numeric field E01PVBIVE using a BigDecimal value.
  */
  public void setE01PVBIVE(BigDecimal newvalue)
  {
    fieldE01PVBIVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBIVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBIVE()
  {
    return fieldE01PVBIVE.getBigDecimal();
  }

  /**
  * Set field E01PVBICA using a String value.
  */
  public void setE01PVBICA(String newvalue)
  {
    fieldE01PVBICA.setString(newvalue);
  }

  /**
  * Get value of field E01PVBICA as a String.
  */
  public String getE01PVBICA()
  {
    return fieldE01PVBICA.getString();
  }

  /**
  * Set numeric field E01PVBICA using a BigDecimal value.
  */
  public void setE01PVBICA(BigDecimal newvalue)
  {
    fieldE01PVBICA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBICA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBICA()
  {
    return fieldE01PVBICA.getBigDecimal();
  }

  /**
  * Set field E01PVBNPO using a String value.
  */
  public void setE01PVBNPO(String newvalue)
  {
    fieldE01PVBNPO.setString(newvalue);
  }

  /**
  * Get value of field E01PVBNPO as a String.
  */
  public String getE01PVBNPO()
  {
    return fieldE01PVBNPO.getString();
  }

  /**
  * Set numeric field E01PVBNPO using a BigDecimal value.
  */
  public void setE01PVBNPO(BigDecimal newvalue)
  {
    fieldE01PVBNPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBNPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBNPO()
  {
    return fieldE01PVBNPO.getBigDecimal();
  }

  /**
  * Set field E01PVBMPO using a String value.
  */
  public void setE01PVBMPO(String newvalue)
  {
    fieldE01PVBMPO.setString(newvalue);
  }

  /**
  * Get value of field E01PVBMPO as a String.
  */
  public String getE01PVBMPO()
  {
    return fieldE01PVBMPO.getString();
  }

  /**
  * Set numeric field E01PVBMPO using a BigDecimal value.
  */
  public void setE01PVBMPO(BigDecimal newvalue)
  {
    fieldE01PVBMPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBMPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBMPO()
  {
    return fieldE01PVBMPO.getBigDecimal();
  }

  /**
  * Set field E01PVBFOR using a String value.
  */
  public void setE01PVBFOR(String newvalue)
  {
    fieldE01PVBFOR.setString(newvalue);
  }

  /**
  * Get value of field E01PVBFOR as a String.
  */
  public String getE01PVBFOR()
  {
    return fieldE01PVBFOR.getString();
  }

  /**
  * Set numeric field E01PVBFOR using a BigDecimal value.
  */
  public void setE01PVBFOR(BigDecimal newvalue)
  {
    fieldE01PVBFOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVBFOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVBFOR()
  {
    return fieldE01PVBFOR.getBigDecimal();
  }

}
