package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC049008 physical file definition.
* 
* File level identifier is 1030121191926.
* Record format level identifier is 535C5A8E2B74A.
*/

public class EGC049008Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H08USERID",
                                     "H08PROGRM",
                                     "H08TIMSYS",
                                     "H08SCRCOD",
                                     "H08OPECOD",
                                     "H08FLGMAS",
                                     "H08FLGWK1",
                                     "H08FLGWK2",
                                     "H08FLGWK3",
                                     "E08CUSCUN",
                                     "E08CUSNA1",
                                     "E08CUSIDN",
                                     "E08CUSPID",
                                     "E08CUSIDF",
                                     "E08CUSLGT",
                                     "E08CUSTYP"
                                   };
  final static String tnames[] = {
                                   "H08USERID",
                                   "H08PROGRM",
                                   "H08TIMSYS",
                                   "H08SCRCOD",
                                   "H08OPECOD",
                                   "H08FLGMAS",
                                   "H08FLGWK1",
                                   "H08FLGWK2",
                                   "H08FLGWK3",
                                   "E08CUSCUN",
                                   "E08CUSNA1",
                                   "E08CUSIDN",
                                   "E08CUSPID",
                                   "E08CUSIDF",
                                   "E08CUSLGT",
                                   "E08CUSTYP"
                                 };
  final static String fid = "1030121191926";
  final static String rid = "535C5A8E2B74A";
  final static String fmtname = "EGC049008";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH08USERID = null;
  private CharacterField fieldH08PROGRM = null;
  private CharacterField fieldH08TIMSYS = null;
  private CharacterField fieldH08SCRCOD = null;
  private CharacterField fieldH08OPECOD = null;
  private CharacterField fieldH08FLGMAS = null;
  private CharacterField fieldH08FLGWK1 = null;
  private CharacterField fieldH08FLGWK2 = null;
  private CharacterField fieldH08FLGWK3 = null;
  private DecimalField fieldE08CUSCUN = null;
  private CharacterField fieldE08CUSNA1 = null;
  private CharacterField fieldE08CUSIDN = null;
  private CharacterField fieldE08CUSPID = null;
  private CharacterField fieldE08CUSIDF = null;
  private CharacterField fieldE08CUSLGT = null;
  private CharacterField fieldE08CUSTYP = null;

  /**
  * Constructor for EGC049008Message.
  */
  public EGC049008Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 122;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH08USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H08USERID");
    fields[1] = fieldH08PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H08PROGRM");
    fields[2] = fieldH08TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H08TIMSYS");
    fields[3] = fieldH08SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H08SCRCOD");
    fields[4] = fieldH08OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H08OPECOD");
    fields[5] = fieldH08FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H08FLGMAS");
    fields[6] = fieldH08FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H08FLGWK1");
    fields[7] = fieldH08FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H08FLGWK2");
    fields[8] = fieldH08FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H08FLGWK3");
    fields[9] = fieldE08CUSCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E08CUSCUN");
    fields[10] = fieldE08CUSNA1 =
    new CharacterField(message, HEADERSIZE + 52, 45, "E08CUSNA1");
    fields[11] = fieldE08CUSIDN =
    new CharacterField(message, HEADERSIZE + 97, 15, "E08CUSIDN");
    fields[12] = fieldE08CUSPID =
    new CharacterField(message, HEADERSIZE + 112, 4, "E08CUSPID");
    fields[13] = fieldE08CUSIDF =
    new CharacterField(message, HEADERSIZE + 116, 4, "E08CUSIDF");
    fields[14] = fieldE08CUSLGT =
    new CharacterField(message, HEADERSIZE + 120, 1, "E08CUSLGT");
    fields[15] = fieldE08CUSTYP =
    new CharacterField(message, HEADERSIZE + 121, 1, "E08CUSTYP");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H08USERID using a String value.
  */
  public void setH08USERID(String newvalue)
  {
    fieldH08USERID.setString(newvalue);
  }

  /**
  * Get value of field H08USERID as a String.
  */
  public String getH08USERID()
  {
    return fieldH08USERID.getString();
  }

  /**
  * Set field H08PROGRM using a String value.
  */
  public void setH08PROGRM(String newvalue)
  {
    fieldH08PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H08PROGRM as a String.
  */
  public String getH08PROGRM()
  {
    return fieldH08PROGRM.getString();
  }

  /**
  * Set field H08TIMSYS using a String value.
  */
  public void setH08TIMSYS(String newvalue)
  {
    fieldH08TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H08TIMSYS as a String.
  */
  public String getH08TIMSYS()
  {
    return fieldH08TIMSYS.getString();
  }

  /**
  * Set field H08SCRCOD using a String value.
  */
  public void setH08SCRCOD(String newvalue)
  {
    fieldH08SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H08SCRCOD as a String.
  */
  public String getH08SCRCOD()
  {
    return fieldH08SCRCOD.getString();
  }

  /**
  * Set field H08OPECOD using a String value.
  */
  public void setH08OPECOD(String newvalue)
  {
    fieldH08OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H08OPECOD as a String.
  */
  public String getH08OPECOD()
  {
    return fieldH08OPECOD.getString();
  }

  /**
  * Set field H08FLGMAS using a String value.
  */
  public void setH08FLGMAS(String newvalue)
  {
    fieldH08FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H08FLGMAS as a String.
  */
  public String getH08FLGMAS()
  {
    return fieldH08FLGMAS.getString();
  }

  /**
  * Set field H08FLGWK1 using a String value.
  */
  public void setH08FLGWK1(String newvalue)
  {
    fieldH08FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H08FLGWK1 as a String.
  */
  public String getH08FLGWK1()
  {
    return fieldH08FLGWK1.getString();
  }

  /**
  * Set field H08FLGWK2 using a String value.
  */
  public void setH08FLGWK2(String newvalue)
  {
    fieldH08FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H08FLGWK2 as a String.
  */
  public String getH08FLGWK2()
  {
    return fieldH08FLGWK2.getString();
  }

  /**
  * Set field H08FLGWK3 using a String value.
  */
  public void setH08FLGWK3(String newvalue)
  {
    fieldH08FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H08FLGWK3 as a String.
  */
  public String getH08FLGWK3()
  {
    return fieldH08FLGWK3.getString();
  }

  /**
  * Set field E08CUSCUN using a String value.
  */
  public void setE08CUSCUN(String newvalue)
  {
    fieldE08CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E08CUSCUN as a String.
  */
  public String getE08CUSCUN()
  {
    return fieldE08CUSCUN.getString();
  }

  /**
  * Set numeric field E08CUSCUN using a BigDecimal value.
  */
  public void setE08CUSCUN(BigDecimal newvalue)
  {
    fieldE08CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08CUSCUN()
  {
    return fieldE08CUSCUN.getBigDecimal();
  }

  /**
  * Set field E08CUSNA1 using a String value.
  */
  public void setE08CUSNA1(String newvalue)
  {
    fieldE08CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E08CUSNA1 as a String.
  */
  public String getE08CUSNA1()
  {
    return fieldE08CUSNA1.getString();
  }

  /**
  * Set field E08CUSIDN using a String value.
  */
  public void setE08CUSIDN(String newvalue)
  {
    fieldE08CUSIDN.setString(newvalue);
  }

  /**
  * Get value of field E08CUSIDN as a String.
  */
  public String getE08CUSIDN()
  {
    return fieldE08CUSIDN.getString();
  }

  /**
  * Set field E08CUSPID using a String value.
  */
  public void setE08CUSPID(String newvalue)
  {
    fieldE08CUSPID.setString(newvalue);
  }

  /**
  * Get value of field E08CUSPID as a String.
  */
  public String getE08CUSPID()
  {
    return fieldE08CUSPID.getString();
  }

  /**
  * Set field E08CUSIDF using a String value.
  */
  public void setE08CUSIDF(String newvalue)
  {
    fieldE08CUSIDF.setString(newvalue);
  }

  /**
  * Get value of field E08CUSIDF as a String.
  */
  public String getE08CUSIDF()
  {
    return fieldE08CUSIDF.getString();
  }

  /**
  * Set field E08CUSLGT using a String value.
  */
  public void setE08CUSLGT(String newvalue)
  {
    fieldE08CUSLGT.setString(newvalue);
  }

  /**
  * Get value of field E08CUSLGT as a String.
  */
  public String getE08CUSLGT()
  {
    return fieldE08CUSLGT.getString();
  }

  /**
  * Set field E08CUSTYP using a String value.
  */
  public void setE08CUSTYP(String newvalue)
  {
    fieldE08CUSTYP.setString(newvalue);
  }

  /**
  * Get value of field E08CUSTYP as a String.
  */
  public String getE08CUSTYP()
  {
    return fieldE08CUSTYP.getString();
  }

}
