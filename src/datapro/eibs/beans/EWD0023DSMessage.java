package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0023DS physical file definition.
* 
* File level identifier is 1030121192019.
* Record format level identifier is 5EC4516CAE041.
*/

public class EWD0023DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDTYP",
                                     "EWDSHR",
                                     "EWDCHN",
                                     "EWDNUM",
                                     "EWDNM1",
                                     "EWDBID",
                                     "EWDSTY",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDTYP",
                                   "EWDSHR",
                                   "EWDCHN",
                                   "EWDNUM",
                                   "EWDNM1",
                                   "EWDBID",
                                   "EWDSTY",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1030121192019";
  final static String rid = "5EC4516CAE041";
  final static String fmtname = "EWD0023DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDTYP = null;
  private CharacterField fieldEWDSHR = null;
  private CharacterField fieldEWDCHN = null;
  private CharacterField fieldEWDNUM = null;
  private CharacterField fieldEWDNM1 = null;
  private CharacterField fieldEWDBID = null;
  private CharacterField fieldEWDSTY = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0023DSMessage.
  */
  public EWD0023DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 110;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDTYP =
    new CharacterField(message, HEADERSIZE + 0, 1, "EWDTYP");
    fields[1] = fieldEWDSHR =
    new CharacterField(message, HEADERSIZE + 1, 20, "EWDSHR");
    fields[2] = fieldEWDCHN =
    new CharacterField(message, HEADERSIZE + 21, 4, "EWDCHN");
    fields[3] = fieldEWDNUM =
    new CharacterField(message, HEADERSIZE + 25, 4, "EWDNUM");
    fields[4] = fieldEWDNM1 =
    new CharacterField(message, HEADERSIZE + 29, 45, "EWDNM1");
    fields[5] = fieldEWDBID =
    new CharacterField(message, HEADERSIZE + 74, 15, "EWDBID");
    fields[6] = fieldEWDSTY =
    new CharacterField(message, HEADERSIZE + 89, 12, "EWDSTY");
    fields[7] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 101, 8, 0, "EWDREC");
    fields[8] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 109, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDTYP using a String value.
  */
  public void setEWDTYP(String newvalue)
  {
    fieldEWDTYP.setString(newvalue);
  }

  /**
  * Get value of field EWDTYP as a String.
  */
  public String getEWDTYP()
  {
    return fieldEWDTYP.getString();
  }

  /**
  * Set field EWDSHR using a String value.
  */
  public void setEWDSHR(String newvalue)
  {
    fieldEWDSHR.setString(newvalue);
  }

  /**
  * Get value of field EWDSHR as a String.
  */
  public String getEWDSHR()
  {
    return fieldEWDSHR.getString();
  }

  /**
  * Set field EWDCHN using a String value.
  */
  public void setEWDCHN(String newvalue)
  {
    fieldEWDCHN.setString(newvalue);
  }

  /**
  * Get value of field EWDCHN as a String.
  */
  public String getEWDCHN()
  {
    return fieldEWDCHN.getString();
  }

  /**
  * Set field EWDNUM using a String value.
  */
  public void setEWDNUM(String newvalue)
  {
    fieldEWDNUM.setString(newvalue);
  }

  /**
  * Get value of field EWDNUM as a String.
  */
  public String getEWDNUM()
  {
    return fieldEWDNUM.getString();
  }

  /**
  * Set field EWDNM1 using a String value.
  */
  public void setEWDNM1(String newvalue)
  {
    fieldEWDNM1.setString(newvalue);
  }

  /**
  * Get value of field EWDNM1 as a String.
  */
  public String getEWDNM1()
  {
    return fieldEWDNM1.getString();
  }

  /**
  * Set field EWDBID using a String value.
  */
  public void setEWDBID(String newvalue)
  {
    fieldEWDBID.setString(newvalue);
  }

  /**
  * Get value of field EWDBID as a String.
  */
  public String getEWDBID()
  {
    return fieldEWDBID.getString();
  }

  /**
  * Set field EWDSTY using a String value.
  */
  public void setEWDSTY(String newvalue)
  {
    fieldEWDSTY.setString(newvalue);
  }

  /**
  * Get value of field EWDSTY as a String.
  */
  public String getEWDSTY()
  {
    return fieldEWDSTY.getString();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
