package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EREPORTPRM physical file definition.
* 
* File level identifier is 1050907185357.
* Record format level identifier is 4098A669C098E.
*/

public class EREPORTPRMMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01RPTDSC",
                                     "E01RPTNME",
                                     "E01RPTPRG",
                                     "E01RPTSEQ",
                                     "E01RPTCOD",
                                     "E01PMSDSC",
                                     "E01RPTINS",
                                     "E01PMSPLN",
                                     "E01PMSPTY",
                                     "E01PMSNDC",
                                     "E01PMSDDS",
                                     "E01PMSVAL",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01RPTDSC",
                                   "E01RPTNME",
                                   "E01RPTPRG",
                                   "E01RPTSEQ",
                                   "E01RPTCOD",
                                   "E01PMSDSC",
                                   "E01RPTINS",
                                   "E01PMSPLN",
                                   "E01PMSPTY",
                                   "E01PMSNDC",
                                   "E01PMSDDS",
                                   "E01PMSVAL",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1050907185357";
  final static String rid = "4098A669C098E";
  final static String fmtname = "EREPORTPRM";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01RPTDSC = null;
  private CharacterField fieldE01RPTNME = null;
  private CharacterField fieldE01RPTPRG = null;
  private DecimalField fieldE01RPTSEQ = null;
  private CharacterField fieldE01RPTCOD = null;
  private CharacterField fieldE01PMSDSC = null;
  private CharacterField fieldE01RPTINS = null;
  private DecimalField fieldE01PMSPLN = null;
  private CharacterField fieldE01PMSPTY = null;
  private DecimalField fieldE01PMSNDC = null;
  private CharacterField fieldE01PMSDDS = null;
  private CharacterField fieldE01PMSVAL = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EREPORTPRMMessage.
  */
  public EREPORTPRMMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1243;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01RPTDSC =
    new CharacterField(message, HEADERSIZE + 42, 50, "E01RPTDSC");
    fields[10] = fieldE01RPTNME =
    new CharacterField(message, HEADERSIZE + 92, 10, "E01RPTNME");
    fields[11] = fieldE01RPTPRG =
    new CharacterField(message, HEADERSIZE + 102, 10, "E01RPTPRG");
    fields[12] = fieldE01RPTSEQ =
    new DecimalField(message, HEADERSIZE + 112, 3, 0, "E01RPTSEQ");
    fields[13] = fieldE01RPTCOD =
    new CharacterField(message, HEADERSIZE + 115, 2, "E01RPTCOD");
    fields[14] = fieldE01PMSDSC =
    new CharacterField(message, HEADERSIZE + 117, 50, "E01PMSDSC");
    fields[15] = fieldE01RPTINS =
    new CharacterField(message, HEADERSIZE + 167, 50, "E01RPTINS");
    fields[16] = fieldE01PMSPLN =
    new DecimalField(message, HEADERSIZE + 217, 4, 0, "E01PMSPLN");
    fields[17] = fieldE01PMSPTY =
    new CharacterField(message, HEADERSIZE + 221, 1, "E01PMSPTY");
    fields[18] = fieldE01PMSNDC =
    new DecimalField(message, HEADERSIZE + 222, 3, 0, "E01PMSNDC");
    fields[19] = fieldE01PMSDDS =
    new CharacterField(message, HEADERSIZE + 225, 10, "E01PMSDDS");
    fields[20] = fieldE01PMSVAL =
    new CharacterField(message, HEADERSIZE + 235, 999, "E01PMSVAL");
    fields[21] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 1234, 8, 0, "E01NUMREC");
    fields[22] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 1242, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01RPTDSC using a String value.
  */
  public void setE01RPTDSC(String newvalue)
  {
    fieldE01RPTDSC.setString(newvalue);
  }

  /**
  * Get value of field E01RPTDSC as a String.
  */
  public String getE01RPTDSC()
  {
    return fieldE01RPTDSC.getString();
  }

  /**
  * Set field E01RPTNME using a String value.
  */
  public void setE01RPTNME(String newvalue)
  {
    fieldE01RPTNME.setString(newvalue);
  }

  /**
  * Get value of field E01RPTNME as a String.
  */
  public String getE01RPTNME()
  {
    return fieldE01RPTNME.getString();
  }

  /**
  * Set field E01RPTPRG using a String value.
  */
  public void setE01RPTPRG(String newvalue)
  {
    fieldE01RPTPRG.setString(newvalue);
  }

  /**
  * Get value of field E01RPTPRG as a String.
  */
  public String getE01RPTPRG()
  {
    return fieldE01RPTPRG.getString();
  }

  /**
  * Set field E01RPTSEQ using a String value.
  */
  public void setE01RPTSEQ(String newvalue)
  {
    fieldE01RPTSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01RPTSEQ as a String.
  */
  public String getE01RPTSEQ()
  {
    return fieldE01RPTSEQ.getString();
  }

  /**
  * Set numeric field E01RPTSEQ using a BigDecimal value.
  */
  public void setE01RPTSEQ(BigDecimal newvalue)
  {
    fieldE01RPTSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RPTSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RPTSEQ()
  {
    return fieldE01RPTSEQ.getBigDecimal();
  }

  /**
  * Set field E01RPTCOD using a String value.
  */
  public void setE01RPTCOD(String newvalue)
  {
    fieldE01RPTCOD.setString(newvalue);
  }

  /**
  * Get value of field E01RPTCOD as a String.
  */
  public String getE01RPTCOD()
  {
    return fieldE01RPTCOD.getString();
  }

  /**
  * Set field E01PMSDSC using a String value.
  */
  public void setE01PMSDSC(String newvalue)
  {
    fieldE01PMSDSC.setString(newvalue);
  }

  /**
  * Get value of field E01PMSDSC as a String.
  */
  public String getE01PMSDSC()
  {
    return fieldE01PMSDSC.getString();
  }

  /**
  * Set field E01RPTINS using a String value.
  */
  public void setE01RPTINS(String newvalue)
  {
    fieldE01RPTINS.setString(newvalue);
  }

  /**
  * Get value of field E01RPTINS as a String.
  */
  public String getE01RPTINS()
  {
    return fieldE01RPTINS.getString();
  }

  /**
  * Set field E01PMSPLN using a String value.
  */
  public void setE01PMSPLN(String newvalue)
  {
    fieldE01PMSPLN.setString(newvalue);
  }

  /**
  * Get value of field E01PMSPLN as a String.
  */
  public String getE01PMSPLN()
  {
    return fieldE01PMSPLN.getString();
  }

  /**
  * Set numeric field E01PMSPLN using a BigDecimal value.
  */
  public void setE01PMSPLN(BigDecimal newvalue)
  {
    fieldE01PMSPLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PMSPLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PMSPLN()
  {
    return fieldE01PMSPLN.getBigDecimal();
  }

  /**
  * Set field E01PMSPTY using a String value.
  */
  public void setE01PMSPTY(String newvalue)
  {
    fieldE01PMSPTY.setString(newvalue);
  }

  /**
  * Get value of field E01PMSPTY as a String.
  */
  public String getE01PMSPTY()
  {
    return fieldE01PMSPTY.getString();
  }

  /**
  * Set field E01PMSNDC using a String value.
  */
  public void setE01PMSNDC(String newvalue)
  {
    fieldE01PMSNDC.setString(newvalue);
  }

  /**
  * Get value of field E01PMSNDC as a String.
  */
  public String getE01PMSNDC()
  {
    return fieldE01PMSNDC.getString();
  }

  /**
  * Set numeric field E01PMSNDC using a BigDecimal value.
  */
  public void setE01PMSNDC(BigDecimal newvalue)
  {
    fieldE01PMSNDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PMSNDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PMSNDC()
  {
    return fieldE01PMSNDC.getBigDecimal();
  }

  /**
  * Set field E01PMSDDS using a String value.
  */
  public void setE01PMSDDS(String newvalue)
  {
    fieldE01PMSDDS.setString(newvalue);
  }

  /**
  * Get value of field E01PMSDDS as a String.
  */
  public String getE01PMSDDS()
  {
    return fieldE01PMSDDS.getString();
  }

  /**
  * Set field E01PMSVAL using a String value.
  */
  public void setE01PMSVAL(String newvalue)
  {
    fieldE01PMSVAL.setString(newvalue);
  }

  /**
  * Get value of field E01PMSVAL as a String.
  */
  public String getE01PMSVAL()
  {
    return fieldE01PMSVAL.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
