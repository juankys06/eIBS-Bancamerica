package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD400501 physical file definition.
* 
* File level identifier is 1101105121157.
* Record format level identifier is 4AA0947AD3E32.
*/

public class EDD400501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DDFFIL",
                                     "E01DDFSEQ",
                                     "E01DDFEXT",
                                     "E01DDFTYP",
                                     "E01DDFSEP",
                                     "E01DDFDS1",
                                     "E01DDFDS2",
                                     "E01DDFDS3",
                                     "E01DDFDIP",
                                     "E01DDFINI",
                                     "E01DDFLNG",
                                     "E01DDFALF",
                                     "E01DDFADJ",
                                     "E01DDFCOD",
                                     "E01DDFUSR",
                                     "E01DDFTIM",
                                     "E01DDFDT1"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DDFFIL",
                                   "E01DDFSEQ",
                                   "E01DDFEXT",
                                   "E01DDFTYP",
                                   "E01DDFSEP",
                                   "E01DDFDS1",
                                   "E01DDFDS2",
                                   "E01DDFDS3",
                                   "E01DDFDIP",
                                   "E01DDFINI",
                                   "E01DDFLNG",
                                   "E01DDFALF",
                                   "E01DDFADJ",
                                   "E01DDFCOD",
                                   "E01DDFUSR",
                                   "E01DDFTIM",
                                   "E01DDFDT1"
                                 };
  final static String fid = "1101105121157";
  final static String rid = "4AA0947AD3E32";
  final static String fmtname = "EDD400501";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01DDFFIL = null;
  private DecimalField fieldE01DDFSEQ = null;
  private CharacterField fieldE01DDFEXT = null;
  private CharacterField fieldE01DDFTYP = null;
  private CharacterField fieldE01DDFSEP = null;
  private CharacterField fieldE01DDFDS1 = null;
  private CharacterField fieldE01DDFDS2 = null;
  private CharacterField fieldE01DDFDS3 = null;
  private CharacterField fieldE01DDFDIP = null;
  private DecimalField fieldE01DDFINI = null;
  private DecimalField fieldE01DDFLNG = null;
  private CharacterField fieldE01DDFALF = null;
  private CharacterField fieldE01DDFADJ = null;
  private CharacterField fieldE01DDFCOD = null;
  private CharacterField fieldE01DDFUSR = null;
  private DecimalField fieldE01DDFTIM = null;
  private DecimalField fieldE01DDFDT1 = null;

  /**
  * Constructor for EDD400501Message.
  */
  public EDD400501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 322;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DDFFIL =
    new CharacterField(message, HEADERSIZE + 42, 20, "E01DDFFIL");
    fields[10] = fieldE01DDFSEQ =
    new DecimalField(message, HEADERSIZE + 62, 6, 0, "E01DDFSEQ");
    fields[11] = fieldE01DDFEXT =
    new CharacterField(message, HEADERSIZE + 68, 10, "E01DDFEXT");
    fields[12] = fieldE01DDFTYP =
    new CharacterField(message, HEADERSIZE + 78, 1, "E01DDFTYP");
    fields[13] = fieldE01DDFSEP =
    new CharacterField(message, HEADERSIZE + 79, 1, "E01DDFSEP");
    fields[14] = fieldE01DDFDS1 =
    new CharacterField(message, HEADERSIZE + 80, 60, "E01DDFDS1");
    fields[15] = fieldE01DDFDS2 =
    new CharacterField(message, HEADERSIZE + 140, 60, "E01DDFDS2");
    fields[16] = fieldE01DDFDS3 =
    new CharacterField(message, HEADERSIZE + 200, 60, "E01DDFDS3");
    fields[17] = fieldE01DDFDIP =
    new CharacterField(message, HEADERSIZE + 260, 20, "E01DDFDIP");
    fields[18] = fieldE01DDFINI =
    new DecimalField(message, HEADERSIZE + 280, 6, 0, "E01DDFINI");
    fields[19] = fieldE01DDFLNG =
    new DecimalField(message, HEADERSIZE + 286, 6, 0, "E01DDFLNG");
    fields[20] = fieldE01DDFALF =
    new CharacterField(message, HEADERSIZE + 292, 1, "E01DDFALF");
    fields[21] = fieldE01DDFADJ =
    new CharacterField(message, HEADERSIZE + 293, 1, "E01DDFADJ");
    fields[22] = fieldE01DDFCOD =
    new CharacterField(message, HEADERSIZE + 294, 4, "E01DDFCOD");
    fields[23] = fieldE01DDFUSR =
    new CharacterField(message, HEADERSIZE + 298, 10, "E01DDFUSR");
    fields[24] = fieldE01DDFTIM =
    new DecimalField(message, HEADERSIZE + 308, 7, 0, "E01DDFTIM");
    fields[25] = fieldE01DDFDT1 =
    new DecimalField(message, HEADERSIZE + 315, 7, 0, "E01DDFDT1");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DDFFIL using a String value.
  */
  public void setE01DDFFIL(String newvalue)
  {
    fieldE01DDFFIL.setString(newvalue);
  }

  /**
  * Get value of field E01DDFFIL as a String.
  */
  public String getE01DDFFIL()
  {
    return fieldE01DDFFIL.getString();
  }

  /**
  * Set field E01DDFSEQ using a String value.
  */
  public void setE01DDFSEQ(String newvalue)
  {
    fieldE01DDFSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01DDFSEQ as a String.
  */
  public String getE01DDFSEQ()
  {
    return fieldE01DDFSEQ.getString();
  }

  /**
  * Set numeric field E01DDFSEQ using a BigDecimal value.
  */
  public void setE01DDFSEQ(BigDecimal newvalue)
  {
    fieldE01DDFSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDFSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDFSEQ()
  {
    return fieldE01DDFSEQ.getBigDecimal();
  }

  /**
  * Set field E01DDFEXT using a String value.
  */
  public void setE01DDFEXT(String newvalue)
  {
    fieldE01DDFEXT.setString(newvalue);
  }

  /**
  * Get value of field E01DDFEXT as a String.
  */
  public String getE01DDFEXT()
  {
    return fieldE01DDFEXT.getString();
  }

  /**
  * Set field E01DDFTYP using a String value.
  */
  public void setE01DDFTYP(String newvalue)
  {
    fieldE01DDFTYP.setString(newvalue);
  }

  /**
  * Get value of field E01DDFTYP as a String.
  */
  public String getE01DDFTYP()
  {
    return fieldE01DDFTYP.getString();
  }

  /**
  * Set field E01DDFSEP using a String value.
  */
  public void setE01DDFSEP(String newvalue)
  {
    fieldE01DDFSEP.setString(newvalue);
  }

  /**
  * Get value of field E01DDFSEP as a String.
  */
  public String getE01DDFSEP()
  {
    return fieldE01DDFSEP.getString();
  }

  /**
  * Set field E01DDFDS1 using a String value.
  */
  public void setE01DDFDS1(String newvalue)
  {
    fieldE01DDFDS1.setString(newvalue);
  }

  /**
  * Get value of field E01DDFDS1 as a String.
  */
  public String getE01DDFDS1()
  {
    return fieldE01DDFDS1.getString();
  }

  /**
  * Set field E01DDFDS2 using a String value.
  */
  public void setE01DDFDS2(String newvalue)
  {
    fieldE01DDFDS2.setString(newvalue);
  }

  /**
  * Get value of field E01DDFDS2 as a String.
  */
  public String getE01DDFDS2()
  {
    return fieldE01DDFDS2.getString();
  }

  /**
  * Set field E01DDFDS3 using a String value.
  */
  public void setE01DDFDS3(String newvalue)
  {
    fieldE01DDFDS3.setString(newvalue);
  }

  /**
  * Get value of field E01DDFDS3 as a String.
  */
  public String getE01DDFDS3()
  {
    return fieldE01DDFDS3.getString();
  }

  /**
  * Set field E01DDFDIP using a String value.
  */
  public void setE01DDFDIP(String newvalue)
  {
    fieldE01DDFDIP.setString(newvalue);
  }

  /**
  * Get value of field E01DDFDIP as a String.
  */
  public String getE01DDFDIP()
  {
    return fieldE01DDFDIP.getString();
  }

  /**
  * Set field E01DDFINI using a String value.
  */
  public void setE01DDFINI(String newvalue)
  {
    fieldE01DDFINI.setString(newvalue);
  }

  /**
  * Get value of field E01DDFINI as a String.
  */
  public String getE01DDFINI()
  {
    return fieldE01DDFINI.getString();
  }

  /**
  * Set numeric field E01DDFINI using a BigDecimal value.
  */
  public void setE01DDFINI(BigDecimal newvalue)
  {
    fieldE01DDFINI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDFINI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDFINI()
  {
    return fieldE01DDFINI.getBigDecimal();
  }

  /**
  * Set field E01DDFLNG using a String value.
  */
  public void setE01DDFLNG(String newvalue)
  {
    fieldE01DDFLNG.setString(newvalue);
  }

  /**
  * Get value of field E01DDFLNG as a String.
  */
  public String getE01DDFLNG()
  {
    return fieldE01DDFLNG.getString();
  }

  /**
  * Set numeric field E01DDFLNG using a BigDecimal value.
  */
  public void setE01DDFLNG(BigDecimal newvalue)
  {
    fieldE01DDFLNG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDFLNG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDFLNG()
  {
    return fieldE01DDFLNG.getBigDecimal();
  }

  /**
  * Set field E01DDFALF using a String value.
  */
  public void setE01DDFALF(String newvalue)
  {
    fieldE01DDFALF.setString(newvalue);
  }

  /**
  * Get value of field E01DDFALF as a String.
  */
  public String getE01DDFALF()
  {
    return fieldE01DDFALF.getString();
  }

  /**
  * Set field E01DDFADJ using a String value.
  */
  public void setE01DDFADJ(String newvalue)
  {
    fieldE01DDFADJ.setString(newvalue);
  }

  /**
  * Get value of field E01DDFADJ as a String.
  */
  public String getE01DDFADJ()
  {
    return fieldE01DDFADJ.getString();
  }

  /**
  * Set field E01DDFCOD using a String value.
  */
  public void setE01DDFCOD(String newvalue)
  {
    fieldE01DDFCOD.setString(newvalue);
  }

  /**
  * Get value of field E01DDFCOD as a String.
  */
  public String getE01DDFCOD()
  {
    return fieldE01DDFCOD.getString();
  }

  /**
  * Set field E01DDFUSR using a String value.
  */
  public void setE01DDFUSR(String newvalue)
  {
    fieldE01DDFUSR.setString(newvalue);
  }

  /**
  * Get value of field E01DDFUSR as a String.
  */
  public String getE01DDFUSR()
  {
    return fieldE01DDFUSR.getString();
  }

  /**
  * Set field E01DDFTIM using a String value.
  */
  public void setE01DDFTIM(String newvalue)
  {
    fieldE01DDFTIM.setString(newvalue);
  }

  /**
  * Get value of field E01DDFTIM as a String.
  */
  public String getE01DDFTIM()
  {
    return fieldE01DDFTIM.getString();
  }

  /**
  * Set numeric field E01DDFTIM using a BigDecimal value.
  */
  public void setE01DDFTIM(BigDecimal newvalue)
  {
    fieldE01DDFTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDFTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDFTIM()
  {
    return fieldE01DDFTIM.getBigDecimal();
  }

  /**
  * Set field E01DDFDT1 using a String value.
  */
  public void setE01DDFDT1(String newvalue)
  {
    fieldE01DDFDT1.setString(newvalue);
  }

  /**
  * Get value of field E01DDFDT1 as a String.
  */
  public String getE01DDFDT1()
  {
    return fieldE01DDFDT1.getString();
  }

  /**
  * Set numeric field E01DDFDT1 using a BigDecimal value.
  */
  public void setE01DDFDT1(BigDecimal newvalue)
  {
    fieldE01DDFDT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDFDT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDFDT1()
  {
    return fieldE01DDFDT1.getBigDecimal();
  }

}
