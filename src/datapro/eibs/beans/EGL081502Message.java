package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGL081502 physical file definition.
* 
* File level identifier is 1070604155004.
* Record format level identifier is 400BDB6C10367.
*/

public class EGL081502Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02AMOBNK",
                                     "E02AMOBRN",
                                     "E02AMOCCY",
                                     "E02AMOGLN",
                                     "E02AMOACC",
                                     "E02AMOCCN",
                                     "E02AMONAR",
                                     "E02AMOOAM",
                                     "E02AMOVL1",
                                     "E02AMOVL2",
                                     "E02AMOVL3",
                                     "E02AMOMD1",
                                     "E02AMOMD2",
                                     "E02AMOMD3",
                                     "E02AMOMTD",
                                     "E02AMODBC",
                                     "E02OFFBNK",
                                     "E02OFFBRN",
                                     "E02OFFCCY",
                                     "E02OFFGLN",
                                     "E02OFFACC",
                                     "E02AMOTCD"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02AMOBNK",
                                   "E02AMOBRN",
                                   "E02AMOCCY",
                                   "E02AMOGLN",
                                   "E02AMOACC",
                                   "E02AMOCCN",
                                   "E02AMONAR",
                                   "E02AMOOAM",
                                   "E02AMOVL1",
                                   "E02AMOVL2",
                                   "E02AMOVL3",
                                   "E02AMOMD1",
                                   "E02AMOMD2",
                                   "E02AMOMD3",
                                   "E02AMOMTD",
                                   "E02AMODBC",
                                   "E02OFFBNK",
                                   "E02OFFBRN",
                                   "E02OFFCCY",
                                   "E02OFFGLN",
                                   "E02OFFACC",
                                   "E02AMOTCD"
                                 };
  final static String fid = "1070604155004";
  final static String rid = "400BDB6C10367";
  final static String fmtname = "EGL081502";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02AMOBNK = null;
  private DecimalField fieldE02AMOBRN = null;
  private CharacterField fieldE02AMOCCY = null;
  private DecimalField fieldE02AMOGLN = null;
  private DecimalField fieldE02AMOACC = null;
  private DecimalField fieldE02AMOCCN = null;
  private CharacterField fieldE02AMONAR = null;
  private DecimalField fieldE02AMOOAM = null;
  private DecimalField fieldE02AMOVL1 = null;
  private DecimalField fieldE02AMOVL2 = null;
  private DecimalField fieldE02AMOVL3 = null;
  private DecimalField fieldE02AMOMD1 = null;
  private DecimalField fieldE02AMOMD2 = null;
  private DecimalField fieldE02AMOMD3 = null;
  private CharacterField fieldE02AMOMTD = null;
  private CharacterField fieldE02AMODBC = null;
  private CharacterField fieldE02OFFBNK = null;
  private DecimalField fieldE02OFFBRN = null;
  private CharacterField fieldE02OFFCCY = null;
  private DecimalField fieldE02OFFGLN = null;
  private DecimalField fieldE02OFFACC = null;
  private CharacterField fieldE02AMOTCD = null;

  /**
  * Constructor for EGL081502Message.
  */
  public EGL081502Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 198;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02AMOBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E02AMOBNK");
    fields[10] = fieldE02AMOBRN =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "E02AMOBRN");
    fields[11] = fieldE02AMOCCY =
    new CharacterField(message, HEADERSIZE + 48, 3, "E02AMOCCY");
    fields[12] = fieldE02AMOGLN =
    new DecimalField(message, HEADERSIZE + 51, 17, 0, "E02AMOGLN");
    fields[13] = fieldE02AMOACC =
    new DecimalField(message, HEADERSIZE + 68, 13, 0, "E02AMOACC");
    fields[14] = fieldE02AMOCCN =
    new DecimalField(message, HEADERSIZE + 81, 9, 0, "E02AMOCCN");
    fields[15] = fieldE02AMONAR =
    new CharacterField(message, HEADERSIZE + 90, 30, "E02AMONAR");
    fields[16] = fieldE02AMOOAM =
    new DecimalField(message, HEADERSIZE + 120, 17, 2, "E02AMOOAM");
    fields[17] = fieldE02AMOVL1 =
    new DecimalField(message, HEADERSIZE + 137, 3, 0, "E02AMOVL1");
    fields[18] = fieldE02AMOVL2 =
    new DecimalField(message, HEADERSIZE + 140, 3, 0, "E02AMOVL2");
    fields[19] = fieldE02AMOVL3 =
    new DecimalField(message, HEADERSIZE + 143, 3, 0, "E02AMOVL3");
    fields[20] = fieldE02AMOMD1 =
    new DecimalField(message, HEADERSIZE + 146, 3, 0, "E02AMOMD1");
    fields[21] = fieldE02AMOMD2 =
    new DecimalField(message, HEADERSIZE + 149, 3, 0, "E02AMOMD2");
    fields[22] = fieldE02AMOMD3 =
    new DecimalField(message, HEADERSIZE + 152, 3, 0, "E02AMOMD3");
    fields[23] = fieldE02AMOMTD =
    new CharacterField(message, HEADERSIZE + 155, 1, "E02AMOMTD");
    fields[24] = fieldE02AMODBC =
    new CharacterField(message, HEADERSIZE + 156, 1, "E02AMODBC");
    fields[25] = fieldE02OFFBNK =
    new CharacterField(message, HEADERSIZE + 157, 2, "E02OFFBNK");
    fields[26] = fieldE02OFFBRN =
    new DecimalField(message, HEADERSIZE + 159, 4, 0, "E02OFFBRN");
    fields[27] = fieldE02OFFCCY =
    new CharacterField(message, HEADERSIZE + 163, 3, "E02OFFCCY");
    fields[28] = fieldE02OFFGLN =
    new DecimalField(message, HEADERSIZE + 166, 17, 0, "E02OFFGLN");
    fields[29] = fieldE02OFFACC =
    new DecimalField(message, HEADERSIZE + 183, 13, 0, "E02OFFACC");
    fields[30] = fieldE02AMOTCD =
    new CharacterField(message, HEADERSIZE + 196, 2, "E02AMOTCD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02AMOBNK using a String value.
  */
  public void setE02AMOBNK(String newvalue)
  {
    fieldE02AMOBNK.setString(newvalue);
  }

  /**
  * Get value of field E02AMOBNK as a String.
  */
  public String getE02AMOBNK()
  {
    return fieldE02AMOBNK.getString();
  }

  /**
  * Set field E02AMOBRN using a String value.
  */
  public void setE02AMOBRN(String newvalue)
  {
    fieldE02AMOBRN.setString(newvalue);
  }

  /**
  * Get value of field E02AMOBRN as a String.
  */
  public String getE02AMOBRN()
  {
    return fieldE02AMOBRN.getString();
  }

  /**
  * Set numeric field E02AMOBRN using a BigDecimal value.
  */
  public void setE02AMOBRN(BigDecimal newvalue)
  {
    fieldE02AMOBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOBRN()
  {
    return fieldE02AMOBRN.getBigDecimal();
  }

  /**
  * Set field E02AMOCCY using a String value.
  */
  public void setE02AMOCCY(String newvalue)
  {
    fieldE02AMOCCY.setString(newvalue);
  }

  /**
  * Get value of field E02AMOCCY as a String.
  */
  public String getE02AMOCCY()
  {
    return fieldE02AMOCCY.getString();
  }

  /**
  * Set field E02AMOGLN using a String value.
  */
  public void setE02AMOGLN(String newvalue)
  {
    fieldE02AMOGLN.setString(newvalue);
  }

  /**
  * Get value of field E02AMOGLN as a String.
  */
  public String getE02AMOGLN()
  {
    return fieldE02AMOGLN.getString();
  }

  /**
  * Set numeric field E02AMOGLN using a BigDecimal value.
  */
  public void setE02AMOGLN(BigDecimal newvalue)
  {
    fieldE02AMOGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOGLN()
  {
    return fieldE02AMOGLN.getBigDecimal();
  }

  /**
  * Set field E02AMOACC using a String value.
  */
  public void setE02AMOACC(String newvalue)
  {
    fieldE02AMOACC.setString(newvalue);
  }

  /**
  * Get value of field E02AMOACC as a String.
  */
  public String getE02AMOACC()
  {
    return fieldE02AMOACC.getString();
  }

  /**
  * Set numeric field E02AMOACC using a BigDecimal value.
  */
  public void setE02AMOACC(BigDecimal newvalue)
  {
    fieldE02AMOACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOACC()
  {
    return fieldE02AMOACC.getBigDecimal();
  }

  /**
  * Set field E02AMOCCN using a String value.
  */
  public void setE02AMOCCN(String newvalue)
  {
    fieldE02AMOCCN.setString(newvalue);
  }

  /**
  * Get value of field E02AMOCCN as a String.
  */
  public String getE02AMOCCN()
  {
    return fieldE02AMOCCN.getString();
  }

  /**
  * Set numeric field E02AMOCCN using a BigDecimal value.
  */
  public void setE02AMOCCN(BigDecimal newvalue)
  {
    fieldE02AMOCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOCCN()
  {
    return fieldE02AMOCCN.getBigDecimal();
  }

  /**
  * Set field E02AMONAR using a String value.
  */
  public void setE02AMONAR(String newvalue)
  {
    fieldE02AMONAR.setString(newvalue);
  }

  /**
  * Get value of field E02AMONAR as a String.
  */
  public String getE02AMONAR()
  {
    return fieldE02AMONAR.getString();
  }

  /**
  * Set field E02AMOOAM using a String value.
  */
  public void setE02AMOOAM(String newvalue)
  {
    fieldE02AMOOAM.setString(newvalue);
  }

  /**
  * Get value of field E02AMOOAM as a String.
  */
  public String getE02AMOOAM()
  {
    return fieldE02AMOOAM.getString();
  }

  /**
  * Set numeric field E02AMOOAM using a BigDecimal value.
  */
  public void setE02AMOOAM(BigDecimal newvalue)
  {
    fieldE02AMOOAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOOAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOOAM()
  {
    return fieldE02AMOOAM.getBigDecimal();
  }

  /**
  * Set field E02AMOVL1 using a String value.
  */
  public void setE02AMOVL1(String newvalue)
  {
    fieldE02AMOVL1.setString(newvalue);
  }

  /**
  * Get value of field E02AMOVL1 as a String.
  */
  public String getE02AMOVL1()
  {
    return fieldE02AMOVL1.getString();
  }

  /**
  * Set numeric field E02AMOVL1 using a BigDecimal value.
  */
  public void setE02AMOVL1(BigDecimal newvalue)
  {
    fieldE02AMOVL1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOVL1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOVL1()
  {
    return fieldE02AMOVL1.getBigDecimal();
  }

  /**
  * Set field E02AMOVL2 using a String value.
  */
  public void setE02AMOVL2(String newvalue)
  {
    fieldE02AMOVL2.setString(newvalue);
  }

  /**
  * Get value of field E02AMOVL2 as a String.
  */
  public String getE02AMOVL2()
  {
    return fieldE02AMOVL2.getString();
  }

  /**
  * Set numeric field E02AMOVL2 using a BigDecimal value.
  */
  public void setE02AMOVL2(BigDecimal newvalue)
  {
    fieldE02AMOVL2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOVL2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOVL2()
  {
    return fieldE02AMOVL2.getBigDecimal();
  }

  /**
  * Set field E02AMOVL3 using a String value.
  */
  public void setE02AMOVL3(String newvalue)
  {
    fieldE02AMOVL3.setString(newvalue);
  }

  /**
  * Get value of field E02AMOVL3 as a String.
  */
  public String getE02AMOVL3()
  {
    return fieldE02AMOVL3.getString();
  }

  /**
  * Set numeric field E02AMOVL3 using a BigDecimal value.
  */
  public void setE02AMOVL3(BigDecimal newvalue)
  {
    fieldE02AMOVL3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOVL3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOVL3()
  {
    return fieldE02AMOVL3.getBigDecimal();
  }

  /**
  * Set field E02AMOMD1 using a String value.
  */
  public void setE02AMOMD1(String newvalue)
  {
    fieldE02AMOMD1.setString(newvalue);
  }

  /**
  * Get value of field E02AMOMD1 as a String.
  */
  public String getE02AMOMD1()
  {
    return fieldE02AMOMD1.getString();
  }

  /**
  * Set numeric field E02AMOMD1 using a BigDecimal value.
  */
  public void setE02AMOMD1(BigDecimal newvalue)
  {
    fieldE02AMOMD1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOMD1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOMD1()
  {
    return fieldE02AMOMD1.getBigDecimal();
  }

  /**
  * Set field E02AMOMD2 using a String value.
  */
  public void setE02AMOMD2(String newvalue)
  {
    fieldE02AMOMD2.setString(newvalue);
  }

  /**
  * Get value of field E02AMOMD2 as a String.
  */
  public String getE02AMOMD2()
  {
    return fieldE02AMOMD2.getString();
  }

  /**
  * Set numeric field E02AMOMD2 using a BigDecimal value.
  */
  public void setE02AMOMD2(BigDecimal newvalue)
  {
    fieldE02AMOMD2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOMD2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOMD2()
  {
    return fieldE02AMOMD2.getBigDecimal();
  }

  /**
  * Set field E02AMOMD3 using a String value.
  */
  public void setE02AMOMD3(String newvalue)
  {
    fieldE02AMOMD3.setString(newvalue);
  }

  /**
  * Get value of field E02AMOMD3 as a String.
  */
  public String getE02AMOMD3()
  {
    return fieldE02AMOMD3.getString();
  }

  /**
  * Set numeric field E02AMOMD3 using a BigDecimal value.
  */
  public void setE02AMOMD3(BigDecimal newvalue)
  {
    fieldE02AMOMD3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02AMOMD3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02AMOMD3()
  {
    return fieldE02AMOMD3.getBigDecimal();
  }

  /**
  * Set field E02AMOMTD using a String value.
  */
  public void setE02AMOMTD(String newvalue)
  {
    fieldE02AMOMTD.setString(newvalue);
  }

  /**
  * Get value of field E02AMOMTD as a String.
  */
  public String getE02AMOMTD()
  {
    return fieldE02AMOMTD.getString();
  }

  /**
  * Set field E02AMODBC using a String value.
  */
  public void setE02AMODBC(String newvalue)
  {
    fieldE02AMODBC.setString(newvalue);
  }

  /**
  * Get value of field E02AMODBC as a String.
  */
  public String getE02AMODBC()
  {
    return fieldE02AMODBC.getString();
  }

  /**
  * Set field E02OFFBNK using a String value.
  */
  public void setE02OFFBNK(String newvalue)
  {
    fieldE02OFFBNK.setString(newvalue);
  }

  /**
  * Get value of field E02OFFBNK as a String.
  */
  public String getE02OFFBNK()
  {
    return fieldE02OFFBNK.getString();
  }

  /**
  * Set field E02OFFBRN using a String value.
  */
  public void setE02OFFBRN(String newvalue)
  {
    fieldE02OFFBRN.setString(newvalue);
  }

  /**
  * Get value of field E02OFFBRN as a String.
  */
  public String getE02OFFBRN()
  {
    return fieldE02OFFBRN.getString();
  }

  /**
  * Set numeric field E02OFFBRN using a BigDecimal value.
  */
  public void setE02OFFBRN(BigDecimal newvalue)
  {
    fieldE02OFFBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02OFFBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02OFFBRN()
  {
    return fieldE02OFFBRN.getBigDecimal();
  }

  /**
  * Set field E02OFFCCY using a String value.
  */
  public void setE02OFFCCY(String newvalue)
  {
    fieldE02OFFCCY.setString(newvalue);
  }

  /**
  * Get value of field E02OFFCCY as a String.
  */
  public String getE02OFFCCY()
  {
    return fieldE02OFFCCY.getString();
  }

  /**
  * Set field E02OFFGLN using a String value.
  */
  public void setE02OFFGLN(String newvalue)
  {
    fieldE02OFFGLN.setString(newvalue);
  }

  /**
  * Get value of field E02OFFGLN as a String.
  */
  public String getE02OFFGLN()
  {
    return fieldE02OFFGLN.getString();
  }

  /**
  * Set numeric field E02OFFGLN using a BigDecimal value.
  */
  public void setE02OFFGLN(BigDecimal newvalue)
  {
    fieldE02OFFGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02OFFGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02OFFGLN()
  {
    return fieldE02OFFGLN.getBigDecimal();
  }

  /**
  * Set field E02OFFACC using a String value.
  */
  public void setE02OFFACC(String newvalue)
  {
    fieldE02OFFACC.setString(newvalue);
  }

  /**
  * Get value of field E02OFFACC as a String.
  */
  public String getE02OFFACC()
  {
    return fieldE02OFFACC.getString();
  }

  /**
  * Set numeric field E02OFFACC using a BigDecimal value.
  */
  public void setE02OFFACC(BigDecimal newvalue)
  {
    fieldE02OFFACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02OFFACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02OFFACC()
  {
    return fieldE02OFFACC.getBigDecimal();
  }

  /**
  * Set field E02AMOTCD using a String value.
  */
  public void setE02AMOTCD(String newvalue)
  {
    fieldE02AMOTCD.setString(newvalue);
  }

  /**
  * Get value of field E02AMOTCD as a String.
  */
  public String getE02AMOTCD()
  {
    return fieldE02AMOTCD.getString();
  }

}
