package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELD010003 physical file definition.
* 
* File level identifier is 1050505163703.
* Record format level identifier is 3C407BC0313CB.
*/

public class ELD010003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03LDECUN",
                                     "E03LDEACC",
                                     "E03CUSNA1",
                                     "E03LDESEQ",
                                     "E03LDEBDY",
                                     "E03LDEBDM",
                                     "E03LDETPY",
                                     "E03LDERM1",
                                     "E03LDERM2",
                                     "E03LDERM3",
                                     "E03LDERM4",
                                     "E03LDEOPE"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03LDECUN",
                                   "E03LDEACC",
                                   "E03CUSNA1",
                                   "E03LDESEQ",
                                   "E03LDEBDY",
                                   "E03LDEBDM",
                                   "E03LDETPY",
                                   "E03LDERM1",
                                   "E03LDERM2",
                                   "E03LDERM3",
                                   "E03LDERM4",
                                   "E03LDEOPE"
                                 };
  final static String fid = "1050505163703";
  final static String rid = "3C407BC0313CB";
  final static String fmtname = "ELD010003";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03LDECUN = null;
  private DecimalField fieldE03LDEACC = null;
  private CharacterField fieldE03CUSNA1 = null;
  private DecimalField fieldE03LDESEQ = null;
  private DecimalField fieldE03LDEBDY = null;
  private DecimalField fieldE03LDEBDM = null;
  private CharacterField fieldE03LDETPY = null;
  private CharacterField fieldE03LDERM1 = null;
  private CharacterField fieldE03LDERM2 = null;
  private CharacterField fieldE03LDERM3 = null;
  private CharacterField fieldE03LDERM4 = null;
  private CharacterField fieldE03LDEOPE = null;

  /**
  * Constructor for ELD010003Message.
  */
  public ELD010003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 292;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03LDECUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E03LDECUN");
    fields[10] = fieldE03LDEACC =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "E03LDEACC");
    fields[11] = fieldE03CUSNA1 =
    new CharacterField(message, HEADERSIZE + 65, 45, "E03CUSNA1");
    fields[12] = fieldE03LDESEQ =
    new DecimalField(message, HEADERSIZE + 110, 3, 0, "E03LDESEQ");
    fields[13] = fieldE03LDEBDY =
    new DecimalField(message, HEADERSIZE + 113, 5, 0, "E03LDEBDY");
    fields[14] = fieldE03LDEBDM =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "E03LDEBDM");
    fields[15] = fieldE03LDETPY =
    new CharacterField(message, HEADERSIZE + 121, 30, "E03LDETPY");
    fields[16] = fieldE03LDERM1 =
    new CharacterField(message, HEADERSIZE + 151, 35, "E03LDERM1");
    fields[17] = fieldE03LDERM2 =
    new CharacterField(message, HEADERSIZE + 186, 35, "E03LDERM2");
    fields[18] = fieldE03LDERM3 =
    new CharacterField(message, HEADERSIZE + 221, 35, "E03LDERM3");
    fields[19] = fieldE03LDERM4 =
    new CharacterField(message, HEADERSIZE + 256, 35, "E03LDERM4");
    fields[20] = fieldE03LDEOPE =
    new CharacterField(message, HEADERSIZE + 291, 1, "E03LDEOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03LDECUN using a String value.
  */
  public void setE03LDECUN(String newvalue)
  {
    fieldE03LDECUN.setString(newvalue);
  }

  /**
  * Get value of field E03LDECUN as a String.
  */
  public String getE03LDECUN()
  {
    return fieldE03LDECUN.getString();
  }

  /**
  * Set numeric field E03LDECUN using a BigDecimal value.
  */
  public void setE03LDECUN(BigDecimal newvalue)
  {
    fieldE03LDECUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LDECUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LDECUN()
  {
    return fieldE03LDECUN.getBigDecimal();
  }

  /**
  * Set field E03LDEACC using a String value.
  */
  public void setE03LDEACC(String newvalue)
  {
    fieldE03LDEACC.setString(newvalue);
  }

  /**
  * Get value of field E03LDEACC as a String.
  */
  public String getE03LDEACC()
  {
    return fieldE03LDEACC.getString();
  }

  /**
  * Set numeric field E03LDEACC using a BigDecimal value.
  */
  public void setE03LDEACC(BigDecimal newvalue)
  {
    fieldE03LDEACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LDEACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LDEACC()
  {
    return fieldE03LDEACC.getBigDecimal();
  }

  /**
  * Set field E03CUSNA1 using a String value.
  */
  public void setE03CUSNA1(String newvalue)
  {
    fieldE03CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSNA1 as a String.
  */
  public String getE03CUSNA1()
  {
    return fieldE03CUSNA1.getString();
  }

  /**
  * Set field E03LDESEQ using a String value.
  */
  public void setE03LDESEQ(String newvalue)
  {
    fieldE03LDESEQ.setString(newvalue);
  }

  /**
  * Get value of field E03LDESEQ as a String.
  */
  public String getE03LDESEQ()
  {
    return fieldE03LDESEQ.getString();
  }

  /**
  * Set numeric field E03LDESEQ using a BigDecimal value.
  */
  public void setE03LDESEQ(BigDecimal newvalue)
  {
    fieldE03LDESEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LDESEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LDESEQ()
  {
    return fieldE03LDESEQ.getBigDecimal();
  }

  /**
  * Set field E03LDEBDY using a String value.
  */
  public void setE03LDEBDY(String newvalue)
  {
    fieldE03LDEBDY.setString(newvalue);
  }

  /**
  * Get value of field E03LDEBDY as a String.
  */
  public String getE03LDEBDY()
  {
    return fieldE03LDEBDY.getString();
  }

  /**
  * Set numeric field E03LDEBDY using a BigDecimal value.
  */
  public void setE03LDEBDY(BigDecimal newvalue)
  {
    fieldE03LDEBDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LDEBDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LDEBDY()
  {
    return fieldE03LDEBDY.getBigDecimal();
  }

  /**
  * Set field E03LDEBDM using a String value.
  */
  public void setE03LDEBDM(String newvalue)
  {
    fieldE03LDEBDM.setString(newvalue);
  }

  /**
  * Get value of field E03LDEBDM as a String.
  */
  public String getE03LDEBDM()
  {
    return fieldE03LDEBDM.getString();
  }

  /**
  * Set numeric field E03LDEBDM using a BigDecimal value.
  */
  public void setE03LDEBDM(BigDecimal newvalue)
  {
    fieldE03LDEBDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03LDEBDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03LDEBDM()
  {
    return fieldE03LDEBDM.getBigDecimal();
  }

  /**
  * Set field E03LDETPY using a String value.
  */
  public void setE03LDETPY(String newvalue)
  {
    fieldE03LDETPY.setString(newvalue);
  }

  /**
  * Get value of field E03LDETPY as a String.
  */
  public String getE03LDETPY()
  {
    return fieldE03LDETPY.getString();
  }

  /**
  * Set field E03LDERM1 using a String value.
  */
  public void setE03LDERM1(String newvalue)
  {
    fieldE03LDERM1.setString(newvalue);
  }

  /**
  * Get value of field E03LDERM1 as a String.
  */
  public String getE03LDERM1()
  {
    return fieldE03LDERM1.getString();
  }

  /**
  * Set field E03LDERM2 using a String value.
  */
  public void setE03LDERM2(String newvalue)
  {
    fieldE03LDERM2.setString(newvalue);
  }

  /**
  * Get value of field E03LDERM2 as a String.
  */
  public String getE03LDERM2()
  {
    return fieldE03LDERM2.getString();
  }

  /**
  * Set field E03LDERM3 using a String value.
  */
  public void setE03LDERM3(String newvalue)
  {
    fieldE03LDERM3.setString(newvalue);
  }

  /**
  * Get value of field E03LDERM3 as a String.
  */
  public String getE03LDERM3()
  {
    return fieldE03LDERM3.getString();
  }

  /**
  * Set field E03LDERM4 using a String value.
  */
  public void setE03LDERM4(String newvalue)
  {
    fieldE03LDERM4.setString(newvalue);
  }

  /**
  * Get value of field E03LDERM4 as a String.
  */
  public String getE03LDERM4()
  {
    return fieldE03LDERM4.getString();
  }

  /**
  * Set field E03LDEOPE using a String value.
  */
  public void setE03LDEOPE(String newvalue)
  {
    fieldE03LDEOPE.setString(newvalue);
  }

  /**
  * Get value of field E03LDEOPE as a String.
  */
  public String getE03LDEOPE()
  {
    return fieldE03LDEOPE.getString();
  }

}
