package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

/**
* Class generated by AS/400 CRTCLASS command from ECH033501 physical file definition.
* 
* File level identifier is 1020807171803.
* Record format level identifier is 4D6C2750EB784.
*/

public class ECH033501Message extends MessageRecord
{
  final int FIELDCOUNT = 15;
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CKCACC = null;
  private DecimalField fieldE01CKCCKN = null;
  private DecimalField fieldE01CKCAMT = null;
  private CharacterField fieldE01CKCBNF = null;
  private DecimalField fieldE01CUSCUN = null;
  private CharacterField fieldE01CUSNA1 = null;

  /**
  * Constructor for ECH033501Message.
  */
  public ECH033501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 167;
    fileid = "1020807171803";
    recordid = "4D6C2750EB784";
    message = new byte[getByteLength()];
    formatname = "ECH033501";
    fieldnames = new String[FIELDCOUNT];
    tagnames = new String[FIELDCOUNT];
    fields = new MessageField[FIELDCOUNT];

    fieldnames[0] = "H01USERID";
    tagnames[0] = "H01USERID";
    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fieldnames[1] = "H01PROGRM";
    tagnames[1] = "H01PROGRM";
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fieldnames[2] = "H01TIMSYS";
    tagnames[2] = "H01TIMSYS";
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fieldnames[3] = "H01SCRCOD";
    tagnames[3] = "H01SCRCOD";
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fieldnames[4] = "H01OPECOD";
    tagnames[4] = "H01OPECOD";
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fieldnames[5] = "H01FLGMAS";
    tagnames[5] = "H01FLGMAS";
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fieldnames[6] = "H01FLGWK1";
    tagnames[6] = "H01FLGWK1";
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fieldnames[7] = "H01FLGWK2";
    tagnames[7] = "H01FLGWK2";
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fieldnames[8] = "H01FLGWK3";
    tagnames[8] = "H01FLGWK3";
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fieldnames[9] = "E01CKCACC";
    tagnames[9] = "E01CKCACC";
    fields[9] = fieldE01CKCACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01CKCACC");
    fieldnames[10] = "E01CKCCKN";
    tagnames[10] = "E01CKCCKN";
    fields[10] = fieldE01CKCCKN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E01CKCCKN");
    fieldnames[11] = "E01CKCAMT";
    tagnames[11] = "E01CKCAMT";
    fields[11] = fieldE01CKCAMT =
    new DecimalField(message, HEADERSIZE + 65, 17, 2, "E01CKCAMT");
    fieldnames[12] = "E01CKCBNF";
    tagnames[12] = "E01CKCBNF";
    fields[12] = fieldE01CKCBNF =
    new CharacterField(message, HEADERSIZE + 82, 30, "E01CKCBNF");
    fieldnames[13] = "E01CUSCUN";
    tagnames[13] = "E01CUSCUN";
    fields[13] = fieldE01CUSCUN =
    new DecimalField(message, HEADERSIZE + 112, 10, 0, "E01CUSCUN");
    fieldnames[14] = "E01CUSNA1";
    tagnames[14] = "E01CUSNA1";
    fields[14] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 122, 45, "E01CUSNA1");
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CKCACC using a String value.
  */
  public void setE01CKCACC(String newvalue)
  {
    fieldE01CKCACC.setString(newvalue);
  }

  /**
  * Get value of field E01CKCACC as a String.
  */
  public String getE01CKCACC()
  {
    return fieldE01CKCACC.getString();
  }

  /**
  * Set numeric field E01CKCACC using a BigDecimal value.
  */
  public void setE01CKCACC(BigDecimal newvalue)
  {
    fieldE01CKCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CKCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CKCACC()
  {
    return fieldE01CKCACC.getBigDecimal();
  }

  /**
  * Set field E01CKCCKN using a String value.
  */
  public void setE01CKCCKN(String newvalue)
  {
    fieldE01CKCCKN.setString(newvalue);
  }

  /**
  * Get value of field E01CKCCKN as a String.
  */
  public String getE01CKCCKN()
  {
    return fieldE01CKCCKN.getString();
  }

  /**
  * Set numeric field E01CKCCKN using a BigDecimal value.
  */
  public void setE01CKCCKN(BigDecimal newvalue)
  {
    fieldE01CKCCKN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CKCCKN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CKCCKN()
  {
    return fieldE01CKCCKN.getBigDecimal();
  }

  /**
  * Set field E01CKCAMT using a String value.
  */
  public void setE01CKCAMT(String newvalue)
  {
    fieldE01CKCAMT.setString(newvalue);
  }

  /**
  * Get value of field E01CKCAMT as a String.
  */
  public String getE01CKCAMT()
  {
    return fieldE01CKCAMT.getString();
  }

  /**
  * Set numeric field E01CKCAMT using a BigDecimal value.
  */
  public void setE01CKCAMT(BigDecimal newvalue)
  {
    fieldE01CKCAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CKCAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CKCAMT()
  {
    return fieldE01CKCAMT.getBigDecimal();
  }

  /**
  * Set field E01CKCBNF using a String value.
  */
  public void setE01CKCBNF(String newvalue)
  {
    fieldE01CKCBNF.setString(newvalue);
  }

  /**
  * Get value of field E01CKCBNF as a String.
  */
  public String getE01CKCBNF()
  {
    return fieldE01CKCBNF.getString();
  }

  /**
  * Set field E01CUSCUN using a String value.
  */
  public void setE01CUSCUN(String newvalue)
  {
    fieldE01CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSCUN as a String.
  */
  public String getE01CUSCUN()
  {
    return fieldE01CUSCUN.getString();
  }

  /**
  * Set numeric field E01CUSCUN using a BigDecimal value.
  */
  public void setE01CUSCUN(BigDecimal newvalue)
  {
    fieldE01CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSCUN()
  {
    return fieldE01CUSCUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

}
