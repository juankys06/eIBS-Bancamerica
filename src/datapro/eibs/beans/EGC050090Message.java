package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC050090 physical file definition.
* 
* File level identifier is 1030121191927.
* Record format level identifier is 34B6141FACD1C.
*/

public class EGC050090Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H90USERID",
                                     "H90PROGRM",
                                     "H90TIMSYS",
                                     "H90SCRCOD",
                                     "H90OPECOD",
                                     "H90FLGMAS",
                                     "H90FLGWK1",
                                     "H90FLGWK2",
                                     "H90FLGWK3",
                                     "H90CODACC",
                                     "E90GCRUT",
                                     "E90GCNMBC",
                                     "E90GCNOPR",
                                     "E90GCGSLN",
                                     "E90GCGMDA",
                                     "E90GCMAUT",
                                     "E90GCMDSP",
                                     "E90GCFAPY",
                                     "E90GCFAPM",
                                     "E90GCFAMD",
                                     "E90GCVENY",
                                     "E90GCVENM",
                                     "E90GCVEND",
                                     "E90GCSLML",
                                     "E90INDOPE"
                                   };
  final static String tnames[] = {
                                   "H90USERID",
                                   "H90PROGRM",
                                   "H90TIMSYS",
                                   "H90SCRCOD",
                                   "H90OPECOD",
                                   "H90FLGMAS",
                                   "H90FLGWK1",
                                   "H90FLGWK2",
                                   "H90FLGWK3",
                                   "H90CODACC",
                                   "E90GCRUT",
                                   "E90GCNMBC",
                                   "E90GCNOPR",
                                   "E90GCGSLN",
                                   "E90GCGMDA",
                                   "E90GCMAUT",
                                   "E90GCMDSP",
                                   "E90GCFAPY",
                                   "E90GCFAPM",
                                   "E90GCFAMD",
                                   "E90GCVENY",
                                   "E90GCVENM",
                                   "E90GCVEND",
                                   "E90GCSLML",
                                   "E90INDOPE"
                                 };
  final static String fid = "1030121191927";
  final static String rid = "34B6141FACD1C";
  final static String fmtname = "EGC050090";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH90USERID = null;
  private CharacterField fieldH90PROGRM = null;
  private CharacterField fieldH90TIMSYS = null;
  private CharacterField fieldH90SCRCOD = null;
  private CharacterField fieldH90OPECOD = null;
  private CharacterField fieldH90FLGMAS = null;
  private CharacterField fieldH90FLGWK1 = null;
  private CharacterField fieldH90FLGWK2 = null;
  private CharacterField fieldH90FLGWK3 = null;
  private CharacterField fieldH90CODACC = null;
  private CharacterField fieldE90GCRUT = null;
  private CharacterField fieldE90GCNMBC = null;
  private DecimalField fieldE90GCNOPR = null;
  private CharacterField fieldE90GCGSLN = null;
  private CharacterField fieldE90GCGMDA = null;
  private DecimalField fieldE90GCMAUT = null;
  private DecimalField fieldE90GCMDSP = null;
  private DecimalField fieldE90GCFAPY = null;
  private DecimalField fieldE90GCFAPM = null;
  private DecimalField fieldE90GCFAMD = null;
  private DecimalField fieldE90GCVENY = null;
  private DecimalField fieldE90GCVENM = null;
  private DecimalField fieldE90GCVEND = null;
  private DecimalField fieldE90GCSLML = null;
  private CharacterField fieldE90INDOPE = null;

  /**
  * Constructor for EGC050090Message.
  */
  public EGC050090Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 175;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH90USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H90USERID");
    fields[1] = fieldH90PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H90PROGRM");
    fields[2] = fieldH90TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H90TIMSYS");
    fields[3] = fieldH90SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H90SCRCOD");
    fields[4] = fieldH90OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H90OPECOD");
    fields[5] = fieldH90FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H90FLGMAS");
    fields[6] = fieldH90FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H90FLGWK1");
    fields[7] = fieldH90FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H90FLGWK2");
    fields[8] = fieldH90FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H90FLGWK3");
    fields[9] = fieldH90CODACC =
    new CharacterField(message, HEADERSIZE + 42, 4, "H90CODACC");
    fields[10] = fieldE90GCRUT =
    new CharacterField(message, HEADERSIZE + 46, 15, "E90GCRUT");
    fields[11] = fieldE90GCNMBC =
    new CharacterField(message, HEADERSIZE + 61, 45, "E90GCNMBC");
    fields[12] = fieldE90GCNOPR =
    new DecimalField(message, HEADERSIZE + 106, 6, 0, "E90GCNOPR");
    fields[13] = fieldE90GCGSLN =
    new CharacterField(message, HEADERSIZE + 112, 1, "E90GCGSLN");
    fields[14] = fieldE90GCGMDA =
    new CharacterField(message, HEADERSIZE + 113, 3, "E90GCGMDA");
    fields[15] = fieldE90GCMAUT =
    new DecimalField(message, HEADERSIZE + 116, 17, 2, "E90GCMAUT");
    fields[16] = fieldE90GCMDSP =
    new DecimalField(message, HEADERSIZE + 133, 17, 2, "E90GCMDSP");
    fields[17] = fieldE90GCFAPY =
    new DecimalField(message, HEADERSIZE + 150, 3, 0, "E90GCFAPY");
    fields[18] = fieldE90GCFAPM =
    new DecimalField(message, HEADERSIZE + 153, 3, 0, "E90GCFAPM");
    fields[19] = fieldE90GCFAMD =
    new DecimalField(message, HEADERSIZE + 156, 3, 0, "E90GCFAMD");
    fields[20] = fieldE90GCVENY =
    new DecimalField(message, HEADERSIZE + 159, 3, 0, "E90GCVENY");
    fields[21] = fieldE90GCVENM =
    new DecimalField(message, HEADERSIZE + 162, 3, 0, "E90GCVENM");
    fields[22] = fieldE90GCVEND =
    new DecimalField(message, HEADERSIZE + 165, 3, 0, "E90GCVEND");
    fields[23] = fieldE90GCSLML =
    new DecimalField(message, HEADERSIZE + 168, 6, 0, "E90GCSLML");
    fields[24] = fieldE90INDOPE =
    new CharacterField(message, HEADERSIZE + 174, 1, "E90INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H90USERID using a String value.
  */
  public void setH90USERID(String newvalue)
  {
    fieldH90USERID.setString(newvalue);
  }

  /**
  * Get value of field H90USERID as a String.
  */
  public String getH90USERID()
  {
    return fieldH90USERID.getString();
  }

  /**
  * Set field H90PROGRM using a String value.
  */
  public void setH90PROGRM(String newvalue)
  {
    fieldH90PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H90PROGRM as a String.
  */
  public String getH90PROGRM()
  {
    return fieldH90PROGRM.getString();
  }

  /**
  * Set field H90TIMSYS using a String value.
  */
  public void setH90TIMSYS(String newvalue)
  {
    fieldH90TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H90TIMSYS as a String.
  */
  public String getH90TIMSYS()
  {
    return fieldH90TIMSYS.getString();
  }

  /**
  * Set field H90SCRCOD using a String value.
  */
  public void setH90SCRCOD(String newvalue)
  {
    fieldH90SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H90SCRCOD as a String.
  */
  public String getH90SCRCOD()
  {
    return fieldH90SCRCOD.getString();
  }

  /**
  * Set field H90OPECOD using a String value.
  */
  public void setH90OPECOD(String newvalue)
  {
    fieldH90OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H90OPECOD as a String.
  */
  public String getH90OPECOD()
  {
    return fieldH90OPECOD.getString();
  }

  /**
  * Set field H90FLGMAS using a String value.
  */
  public void setH90FLGMAS(String newvalue)
  {
    fieldH90FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H90FLGMAS as a String.
  */
  public String getH90FLGMAS()
  {
    return fieldH90FLGMAS.getString();
  }

  /**
  * Set field H90FLGWK1 using a String value.
  */
  public void setH90FLGWK1(String newvalue)
  {
    fieldH90FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H90FLGWK1 as a String.
  */
  public String getH90FLGWK1()
  {
    return fieldH90FLGWK1.getString();
  }

  /**
  * Set field H90FLGWK2 using a String value.
  */
  public void setH90FLGWK2(String newvalue)
  {
    fieldH90FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H90FLGWK2 as a String.
  */
  public String getH90FLGWK2()
  {
    return fieldH90FLGWK2.getString();
  }

  /**
  * Set field H90FLGWK3 using a String value.
  */
  public void setH90FLGWK3(String newvalue)
  {
    fieldH90FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H90FLGWK3 as a String.
  */
  public String getH90FLGWK3()
  {
    return fieldH90FLGWK3.getString();
  }

  /**
  * Set field H90CODACC using a String value.
  */
  public void setH90CODACC(String newvalue)
  {
    fieldH90CODACC.setString(newvalue);
  }

  /**
  * Get value of field H90CODACC as a String.
  */
  public String getH90CODACC()
  {
    return fieldH90CODACC.getString();
  }

  /**
  * Set field E90GCRUT using a String value.
  */
  public void setE90GCRUT(String newvalue)
  {
    fieldE90GCRUT.setString(newvalue);
  }

  /**
  * Get value of field E90GCRUT as a String.
  */
  public String getE90GCRUT()
  {
    return fieldE90GCRUT.getString();
  }

  /**
  * Set field E90GCNMBC using a String value.
  */
  public void setE90GCNMBC(String newvalue)
  {
    fieldE90GCNMBC.setString(newvalue);
  }

  /**
  * Get value of field E90GCNMBC as a String.
  */
  public String getE90GCNMBC()
  {
    return fieldE90GCNMBC.getString();
  }

  /**
  * Set field E90GCNOPR using a String value.
  */
  public void setE90GCNOPR(String newvalue)
  {
    fieldE90GCNOPR.setString(newvalue);
  }

  /**
  * Get value of field E90GCNOPR as a String.
  */
  public String getE90GCNOPR()
  {
    return fieldE90GCNOPR.getString();
  }

  /**
  * Set numeric field E90GCNOPR using a BigDecimal value.
  */
  public void setE90GCNOPR(BigDecimal newvalue)
  {
    fieldE90GCNOPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCNOPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCNOPR()
  {
    return fieldE90GCNOPR.getBigDecimal();
  }

  /**
  * Set field E90GCGSLN using a String value.
  */
  public void setE90GCGSLN(String newvalue)
  {
    fieldE90GCGSLN.setString(newvalue);
  }

  /**
  * Get value of field E90GCGSLN as a String.
  */
  public String getE90GCGSLN()
  {
    return fieldE90GCGSLN.getString();
  }

  /**
  * Set field E90GCGMDA using a String value.
  */
  public void setE90GCGMDA(String newvalue)
  {
    fieldE90GCGMDA.setString(newvalue);
  }

  /**
  * Get value of field E90GCGMDA as a String.
  */
  public String getE90GCGMDA()
  {
    return fieldE90GCGMDA.getString();
  }

  /**
  * Set field E90GCMAUT using a String value.
  */
  public void setE90GCMAUT(String newvalue)
  {
    fieldE90GCMAUT.setString(newvalue);
  }

  /**
  * Get value of field E90GCMAUT as a String.
  */
  public String getE90GCMAUT()
  {
    return fieldE90GCMAUT.getString();
  }

  /**
  * Set numeric field E90GCMAUT using a BigDecimal value.
  */
  public void setE90GCMAUT(BigDecimal newvalue)
  {
    fieldE90GCMAUT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCMAUT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCMAUT()
  {
    return fieldE90GCMAUT.getBigDecimal();
  }

  /**
  * Set field E90GCMDSP using a String value.
  */
  public void setE90GCMDSP(String newvalue)
  {
    fieldE90GCMDSP.setString(newvalue);
  }

  /**
  * Get value of field E90GCMDSP as a String.
  */
  public String getE90GCMDSP()
  {
    return fieldE90GCMDSP.getString();
  }

  /**
  * Set numeric field E90GCMDSP using a BigDecimal value.
  */
  public void setE90GCMDSP(BigDecimal newvalue)
  {
    fieldE90GCMDSP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCMDSP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCMDSP()
  {
    return fieldE90GCMDSP.getBigDecimal();
  }

  /**
  * Set field E90GCFAPY using a String value.
  */
  public void setE90GCFAPY(String newvalue)
  {
    fieldE90GCFAPY.setString(newvalue);
  }

  /**
  * Get value of field E90GCFAPY as a String.
  */
  public String getE90GCFAPY()
  {
    return fieldE90GCFAPY.getString();
  }

  /**
  * Set numeric field E90GCFAPY using a BigDecimal value.
  */
  public void setE90GCFAPY(BigDecimal newvalue)
  {
    fieldE90GCFAPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCFAPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCFAPY()
  {
    return fieldE90GCFAPY.getBigDecimal();
  }

  /**
  * Set field E90GCFAPM using a String value.
  */
  public void setE90GCFAPM(String newvalue)
  {
    fieldE90GCFAPM.setString(newvalue);
  }

  /**
  * Get value of field E90GCFAPM as a String.
  */
  public String getE90GCFAPM()
  {
    return fieldE90GCFAPM.getString();
  }

  /**
  * Set numeric field E90GCFAPM using a BigDecimal value.
  */
  public void setE90GCFAPM(BigDecimal newvalue)
  {
    fieldE90GCFAPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCFAPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCFAPM()
  {
    return fieldE90GCFAPM.getBigDecimal();
  }

  /**
  * Set field E90GCFAMD using a String value.
  */
  public void setE90GCFAMD(String newvalue)
  {
    fieldE90GCFAMD.setString(newvalue);
  }

  /**
  * Get value of field E90GCFAMD as a String.
  */
  public String getE90GCFAMD()
  {
    return fieldE90GCFAMD.getString();
  }

  /**
  * Set numeric field E90GCFAMD using a BigDecimal value.
  */
  public void setE90GCFAMD(BigDecimal newvalue)
  {
    fieldE90GCFAMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCFAMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCFAMD()
  {
    return fieldE90GCFAMD.getBigDecimal();
  }

  /**
  * Set field E90GCVENY using a String value.
  */
  public void setE90GCVENY(String newvalue)
  {
    fieldE90GCVENY.setString(newvalue);
  }

  /**
  * Get value of field E90GCVENY as a String.
  */
  public String getE90GCVENY()
  {
    return fieldE90GCVENY.getString();
  }

  /**
  * Set numeric field E90GCVENY using a BigDecimal value.
  */
  public void setE90GCVENY(BigDecimal newvalue)
  {
    fieldE90GCVENY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCVENY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCVENY()
  {
    return fieldE90GCVENY.getBigDecimal();
  }

  /**
  * Set field E90GCVENM using a String value.
  */
  public void setE90GCVENM(String newvalue)
  {
    fieldE90GCVENM.setString(newvalue);
  }

  /**
  * Get value of field E90GCVENM as a String.
  */
  public String getE90GCVENM()
  {
    return fieldE90GCVENM.getString();
  }

  /**
  * Set numeric field E90GCVENM using a BigDecimal value.
  */
  public void setE90GCVENM(BigDecimal newvalue)
  {
    fieldE90GCVENM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCVENM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCVENM()
  {
    return fieldE90GCVENM.getBigDecimal();
  }

  /**
  * Set field E90GCVEND using a String value.
  */
  public void setE90GCVEND(String newvalue)
  {
    fieldE90GCVEND.setString(newvalue);
  }

  /**
  * Get value of field E90GCVEND as a String.
  */
  public String getE90GCVEND()
  {
    return fieldE90GCVEND.getString();
  }

  /**
  * Set numeric field E90GCVEND using a BigDecimal value.
  */
  public void setE90GCVEND(BigDecimal newvalue)
  {
    fieldE90GCVEND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCVEND as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCVEND()
  {
    return fieldE90GCVEND.getBigDecimal();
  }

  /**
  * Set field E90GCSLML using a String value.
  */
  public void setE90GCSLML(String newvalue)
  {
    fieldE90GCSLML.setString(newvalue);
  }

  /**
  * Get value of field E90GCSLML as a String.
  */
  public String getE90GCSLML()
  {
    return fieldE90GCSLML.getString();
  }

  /**
  * Set numeric field E90GCSLML using a BigDecimal value.
  */
  public void setE90GCSLML(BigDecimal newvalue)
  {
    fieldE90GCSLML.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E90GCSLML as a BigDecimal.
  */
  public BigDecimal getBigDecimalE90GCSLML()
  {
    return fieldE90GCSLML.getBigDecimal();
  }

  /**
  * Set field E90INDOPE using a String value.
  */
  public void setE90INDOPE(String newvalue)
  {
    fieldE90INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E90INDOPE as a String.
  */
  public String getE90INDOPE()
  {
    return fieldE90INDOPE.getString();
  }

}
