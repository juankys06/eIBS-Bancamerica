package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0515DS physical file definition.
* 
* File level identifier is 1050328133639.
* Record format level identifier is 384A563A351A8.
*/

public class EWD0515DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDCUN",
                                     "EWDMAN",
                                     "EWDMA1",
                                     "EWDJOB",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDCUN",
                                   "EWDMAN",
                                   "EWDMA1",
                                   "EWDJOB",
                                   "EWDOPE"
                                 };
  final static String fid = "1050328133639";
  final static String rid = "384A563A351A8";
  final static String fmtname = "EWD0515DS";
  final int FIELDCOUNT = 5;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldEWDCUN = null;
  private DecimalField fieldEWDMAN = null;
  private CharacterField fieldEWDMA1 = null;
  private CharacterField fieldEWDJOB = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0515DSMessage.
  */
  public EWD0515DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 97;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDCUN =
    new DecimalField(message, HEADERSIZE + 0, 13, 0, "EWDCUN");
    fields[1] = fieldEWDMAN =
    new DecimalField(message, HEADERSIZE + 13, 3, 0, "EWDMAN");
    fields[2] = fieldEWDMA1 =
    new CharacterField(message, HEADERSIZE + 16, 45, "EWDMA1");
    fields[3] = fieldEWDJOB =
    new CharacterField(message, HEADERSIZE + 61, 35, "EWDJOB");
    fields[4] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 96, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDCUN using a String value.
  */
  public void setEWDCUN(String newvalue)
  {
    fieldEWDCUN.setString(newvalue);
  }

  /**
  * Get value of field EWDCUN as a String.
  */
  public String getEWDCUN()
  {
    return fieldEWDCUN.getString();
  }

  /**
  * Set numeric field EWDCUN using a BigDecimal value.
  */
  public void setEWDCUN(BigDecimal newvalue)
  {
    fieldEWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCUN()
  {
    return fieldEWDCUN.getBigDecimal();
  }

  /**
  * Set field EWDMAN using a String value.
  */
  public void setEWDMAN(String newvalue)
  {
    fieldEWDMAN.setString(newvalue);
  }

  /**
  * Get value of field EWDMAN as a String.
  */
  public String getEWDMAN()
  {
    return fieldEWDMAN.getString();
  }

  /**
  * Set numeric field EWDMAN using a BigDecimal value.
  */
  public void setEWDMAN(BigDecimal newvalue)
  {
    fieldEWDMAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDMAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDMAN()
  {
    return fieldEWDMAN.getBigDecimal();
  }

  /**
  * Set field EWDMA1 using a String value.
  */
  public void setEWDMA1(String newvalue)
  {
    fieldEWDMA1.setString(newvalue);
  }

  /**
  * Get value of field EWDMA1 as a String.
  */
  public String getEWDMA1()
  {
    return fieldEWDMA1.getString();
  }

  /**
  * Set field EWDJOB using a String value.
  */
  public void setEWDJOB(String newvalue)
  {
    fieldEWDJOB.setString(newvalue);
  }

  /**
  * Get value of field EWDJOB as a String.
  */
  public String getEWDJOB()
  {
    return fieldEWDJOB.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
