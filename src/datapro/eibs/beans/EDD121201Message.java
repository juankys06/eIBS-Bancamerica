package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD121201 physical file definition.
* 
* File level identifier is 1041022165917.
* Record format level identifier is 34F7F71CCCBB8.
*/

public class EDD121201Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01WTRARF",
                                     "E01OFFOPE",
                                     "E01OFFCON",
                                     "E01OFFBNK",
                                     "E01OFFBRN",
                                     "E01OFFCCY",
                                     "E01OFFGLN",
                                     "E01WTRSEQ",
                                     "E01ACMACC",
                                     "E01CUSNA1",
                                     "E01AMOUNT",
                                     "E01TRNCDE",
                                     "E01NUMCHK",
                                     "E01ACMUSR",
                                     "E01ACMRMK"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01WTRARF",
                                   "E01OFFOPE",
                                   "E01OFFCON",
                                   "E01OFFBNK",
                                   "E01OFFBRN",
                                   "E01OFFCCY",
                                   "E01OFFGLN",
                                   "E01WTRSEQ",
                                   "E01ACMACC",
                                   "E01CUSNA1",
                                   "E01AMOUNT",
                                   "E01TRNCDE",
                                   "E01NUMCHK",
                                   "E01ACMUSR",
                                   "E01ACMRMK"
                                 };
  final static String fid = "1041022165917";
  final static String rid = "34F7F71CCCBB8";
  final static String fmtname = "EDD121201";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01WTRARF = null;
  private CharacterField fieldE01OFFOPE = null;
  private CharacterField fieldE01OFFCON = null;
  private CharacterField fieldE01OFFBNK = null;
  private DecimalField fieldE01OFFBRN = null;
  private CharacterField fieldE01OFFCCY = null;
  private DecimalField fieldE01OFFGLN = null;
  private DecimalField fieldE01WTRSEQ = null;
  private DecimalField fieldE01ACMACC = null;
  private CharacterField fieldE01CUSNA1 = null;
  private DecimalField fieldE01AMOUNT = null;
  private CharacterField fieldE01TRNCDE = null;
  private DecimalField fieldE01NUMCHK = null;
  private CharacterField fieldE01ACMUSR = null;
  private CharacterField fieldE01ACMRMK = null;

  /**
  * Constructor for EDD121201Message.
  */
  public EDD121201Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 220;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01WTRARF =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01WTRARF");
    fields[10] = fieldE01OFFOPE =
    new CharacterField(message, HEADERSIZE + 55, 2, "E01OFFOPE");
    fields[11] = fieldE01OFFCON =
    new CharacterField(message, HEADERSIZE + 57, 25, "E01OFFCON");
    fields[12] = fieldE01OFFBNK =
    new CharacterField(message, HEADERSIZE + 82, 2, "E01OFFBNK");
    fields[13] = fieldE01OFFBRN =
    new DecimalField(message, HEADERSIZE + 84, 4, 0, "E01OFFBRN");
    fields[14] = fieldE01OFFCCY =
    new CharacterField(message, HEADERSIZE + 88, 3, "E01OFFCCY");
    fields[15] = fieldE01OFFGLN =
    new DecimalField(message, HEADERSIZE + 91, 17, 0, "E01OFFGLN");
    fields[16] = fieldE01WTRSEQ =
    new DecimalField(message, HEADERSIZE + 108, 5, 0, "E01WTRSEQ");
    fields[17] = fieldE01ACMACC =
    new DecimalField(message, HEADERSIZE + 113, 13, 0, "E01ACMACC");
    fields[18] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 126, 35, "E01CUSNA1");
    fields[19] = fieldE01AMOUNT =
    new DecimalField(message, HEADERSIZE + 161, 17, 2, "E01AMOUNT");
    fields[20] = fieldE01TRNCDE =
    new CharacterField(message, HEADERSIZE + 178, 2, "E01TRNCDE");
    fields[21] = fieldE01NUMCHK =
    new DecimalField(message, HEADERSIZE + 180, 10, 0, "E01NUMCHK");
    fields[22] = fieldE01ACMUSR =
    new CharacterField(message, HEADERSIZE + 190, 10, "E01ACMUSR");
    fields[23] = fieldE01ACMRMK =
    new CharacterField(message, HEADERSIZE + 200, 20, "E01ACMRMK");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01WTRARF using a String value.
  */
  public void setE01WTRARF(String newvalue)
  {
    fieldE01WTRARF.setString(newvalue);
  }

  /**
  * Get value of field E01WTRARF as a String.
  */
  public String getE01WTRARF()
  {
    return fieldE01WTRARF.getString();
  }

  /**
  * Set numeric field E01WTRARF using a BigDecimal value.
  */
  public void setE01WTRARF(BigDecimal newvalue)
  {
    fieldE01WTRARF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01WTRARF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01WTRARF()
  {
    return fieldE01WTRARF.getBigDecimal();
  }

  /**
  * Set field E01OFFOPE using a String value.
  */
  public void setE01OFFOPE(String newvalue)
  {
    fieldE01OFFOPE.setString(newvalue);
  }

  /**
  * Get value of field E01OFFOPE as a String.
  */
  public String getE01OFFOPE()
  {
    return fieldE01OFFOPE.getString();
  }

  /**
  * Set field E01OFFCON using a String value.
  */
  public void setE01OFFCON(String newvalue)
  {
    fieldE01OFFCON.setString(newvalue);
  }

  /**
  * Get value of field E01OFFCON as a String.
  */
  public String getE01OFFCON()
  {
    return fieldE01OFFCON.getString();
  }

  /**
  * Set field E01OFFBNK using a String value.
  */
  public void setE01OFFBNK(String newvalue)
  {
    fieldE01OFFBNK.setString(newvalue);
  }

  /**
  * Get value of field E01OFFBNK as a String.
  */
  public String getE01OFFBNK()
  {
    return fieldE01OFFBNK.getString();
  }

  /**
  * Set field E01OFFBRN using a String value.
  */
  public void setE01OFFBRN(String newvalue)
  {
    fieldE01OFFBRN.setString(newvalue);
  }

  /**
  * Get value of field E01OFFBRN as a String.
  */
  public String getE01OFFBRN()
  {
    return fieldE01OFFBRN.getString();
  }

  /**
  * Set numeric field E01OFFBRN using a BigDecimal value.
  */
  public void setE01OFFBRN(BigDecimal newvalue)
  {
    fieldE01OFFBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OFFBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OFFBRN()
  {
    return fieldE01OFFBRN.getBigDecimal();
  }

  /**
  * Set field E01OFFCCY using a String value.
  */
  public void setE01OFFCCY(String newvalue)
  {
    fieldE01OFFCCY.setString(newvalue);
  }

  /**
  * Get value of field E01OFFCCY as a String.
  */
  public String getE01OFFCCY()
  {
    return fieldE01OFFCCY.getString();
  }

  /**
  * Set field E01OFFGLN using a String value.
  */
  public void setE01OFFGLN(String newvalue)
  {
    fieldE01OFFGLN.setString(newvalue);
  }

  /**
  * Get value of field E01OFFGLN as a String.
  */
  public String getE01OFFGLN()
  {
    return fieldE01OFFGLN.getString();
  }

  /**
  * Set numeric field E01OFFGLN using a BigDecimal value.
  */
  public void setE01OFFGLN(BigDecimal newvalue)
  {
    fieldE01OFFGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OFFGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OFFGLN()
  {
    return fieldE01OFFGLN.getBigDecimal();
  }

  /**
  * Set field E01WTRSEQ using a String value.
  */
  public void setE01WTRSEQ(String newvalue)
  {
    fieldE01WTRSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01WTRSEQ as a String.
  */
  public String getE01WTRSEQ()
  {
    return fieldE01WTRSEQ.getString();
  }

  /**
  * Set numeric field E01WTRSEQ using a BigDecimal value.
  */
  public void setE01WTRSEQ(BigDecimal newvalue)
  {
    fieldE01WTRSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01WTRSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01WTRSEQ()
  {
    return fieldE01WTRSEQ.getBigDecimal();
  }

  /**
  * Set field E01ACMACC using a String value.
  */
  public void setE01ACMACC(String newvalue)
  {
    fieldE01ACMACC.setString(newvalue);
  }

  /**
  * Get value of field E01ACMACC as a String.
  */
  public String getE01ACMACC()
  {
    return fieldE01ACMACC.getString();
  }

  /**
  * Set numeric field E01ACMACC using a BigDecimal value.
  */
  public void setE01ACMACC(BigDecimal newvalue)
  {
    fieldE01ACMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACMACC()
  {
    return fieldE01ACMACC.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01AMOUNT using a String value.
  */
  public void setE01AMOUNT(String newvalue)
  {
    fieldE01AMOUNT.setString(newvalue);
  }

  /**
  * Get value of field E01AMOUNT as a String.
  */
  public String getE01AMOUNT()
  {
    return fieldE01AMOUNT.getString();
  }

  /**
  * Set numeric field E01AMOUNT using a BigDecimal value.
  */
  public void setE01AMOUNT(BigDecimal newvalue)
  {
    fieldE01AMOUNT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AMOUNT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AMOUNT()
  {
    return fieldE01AMOUNT.getBigDecimal();
  }

  /**
  * Set field E01TRNCDE using a String value.
  */
  public void setE01TRNCDE(String newvalue)
  {
    fieldE01TRNCDE.setString(newvalue);
  }

  /**
  * Get value of field E01TRNCDE as a String.
  */
  public String getE01TRNCDE()
  {
    return fieldE01TRNCDE.getString();
  }

  /**
  * Set field E01NUMCHK using a String value.
  */
  public void setE01NUMCHK(String newvalue)
  {
    fieldE01NUMCHK.setString(newvalue);
  }

  /**
  * Get value of field E01NUMCHK as a String.
  */
  public String getE01NUMCHK()
  {
    return fieldE01NUMCHK.getString();
  }

  /**
  * Set numeric field E01NUMCHK using a BigDecimal value.
  */
  public void setE01NUMCHK(BigDecimal newvalue)
  {
    fieldE01NUMCHK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMCHK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMCHK()
  {
    return fieldE01NUMCHK.getBigDecimal();
  }

  /**
  * Set field E01ACMUSR using a String value.
  */
  public void setE01ACMUSR(String newvalue)
  {
    fieldE01ACMUSR.setString(newvalue);
  }

  /**
  * Get value of field E01ACMUSR as a String.
  */
  public String getE01ACMUSR()
  {
    return fieldE01ACMUSR.getString();
  }

  /**
  * Set field E01ACMRMK using a String value.
  */
  public void setE01ACMRMK(String newvalue)
  {
    fieldE01ACMRMK.setString(newvalue);
  }

  /**
  * Get value of field E01ACMRMK as a String.
  */
  public String getE01ACMRMK()
  {
    return fieldE01ACMRMK.getString();
  }

}
