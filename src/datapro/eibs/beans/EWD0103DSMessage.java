package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0103DS physical file definition.
* 
* File level identifier is 1080410175013.
* Record format level identifier is 509A28D2813F3.
*/

public class EWD0103DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDTBL",
                                     "EWDPRT",
                                     "EWDSRT",
                                     "EWDNME",
                                     "EWDPRD",
                                     "EWDDT1",
                                     "EWDDT2",
                                     "EWDDT3",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDTBL",
                                   "EWDPRT",
                                   "EWDSRT",
                                   "EWDNME",
                                   "EWDPRD",
                                   "EWDDT1",
                                   "EWDDT2",
                                   "EWDDT3",
                                   "EWDOPE"
                                 };
  final static String fid = "1080410175013";
  final static String rid = "509A28D2813F3";
  final static String fmtname = "EWD0103DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDTBL = null;
  private DecimalField fieldEWDPRT = null;
  private DecimalField fieldEWDSRT = null;
  private CharacterField fieldEWDNME = null;
  private CharacterField fieldEWDPRD = null;
  private DecimalField fieldEWDDT1 = null;
  private DecimalField fieldEWDDT2 = null;
  private DecimalField fieldEWDDT3 = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0103DSMessage.
  */
  public EWD0103DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 73;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDTBL =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDTBL");
    fields[1] = fieldEWDPRT =
    new DecimalField(message, HEADERSIZE + 2, 11, 6, "EWDPRT");
    fields[2] = fieldEWDSRT =
    new DecimalField(message, HEADERSIZE + 13, 11, 6, "EWDSRT");
    fields[3] = fieldEWDNME =
    new CharacterField(message, HEADERSIZE + 24, 35, "EWDNME");
    fields[4] = fieldEWDPRD =
    new CharacterField(message, HEADERSIZE + 59, 4, "EWDPRD");
    fields[5] = fieldEWDDT1 =
    new DecimalField(message, HEADERSIZE + 63, 3, 0, "EWDDT1");
    fields[6] = fieldEWDDT2 =
    new DecimalField(message, HEADERSIZE + 66, 3, 0, "EWDDT2");
    fields[7] = fieldEWDDT3 =
    new DecimalField(message, HEADERSIZE + 69, 3, 0, "EWDDT3");
    fields[8] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 72, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDTBL using a String value.
  */
  public void setEWDTBL(String newvalue)
  {
    fieldEWDTBL.setString(newvalue);
  }

  /**
  * Get value of field EWDTBL as a String.
  */
  public String getEWDTBL()
  {
    return fieldEWDTBL.getString();
  }

  /**
  * Set field EWDPRT using a String value.
  */
  public void setEWDPRT(String newvalue)
  {
    fieldEWDPRT.setString(newvalue);
  }

  /**
  * Get value of field EWDPRT as a String.
  */
  public String getEWDPRT()
  {
    return fieldEWDPRT.getString();
  }

  /**
  * Set numeric field EWDPRT using a BigDecimal value.
  */
  public void setEWDPRT(BigDecimal newvalue)
  {
    fieldEWDPRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDPRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDPRT()
  {
    return fieldEWDPRT.getBigDecimal();
  }

  /**
  * Set field EWDSRT using a String value.
  */
  public void setEWDSRT(String newvalue)
  {
    fieldEWDSRT.setString(newvalue);
  }

  /**
  * Get value of field EWDSRT as a String.
  */
  public String getEWDSRT()
  {
    return fieldEWDSRT.getString();
  }

  /**
  * Set numeric field EWDSRT using a BigDecimal value.
  */
  public void setEWDSRT(BigDecimal newvalue)
  {
    fieldEWDSRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDSRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDSRT()
  {
    return fieldEWDSRT.getBigDecimal();
  }

  /**
  * Set field EWDNME using a String value.
  */
  public void setEWDNME(String newvalue)
  {
    fieldEWDNME.setString(newvalue);
  }

  /**
  * Get value of field EWDNME as a String.
  */
  public String getEWDNME()
  {
    return fieldEWDNME.getString();
  }

  /**
  * Set field EWDPRD using a String value.
  */
  public void setEWDPRD(String newvalue)
  {
    fieldEWDPRD.setString(newvalue);
  }

  /**
  * Get value of field EWDPRD as a String.
  */
  public String getEWDPRD()
  {
    return fieldEWDPRD.getString();
  }

  /**
  * Set field EWDDT1 using a String value.
  */
  public void setEWDDT1(String newvalue)
  {
    fieldEWDDT1.setString(newvalue);
  }

  /**
  * Get value of field EWDDT1 as a String.
  */
  public String getEWDDT1()
  {
    return fieldEWDDT1.getString();
  }

  /**
  * Set numeric field EWDDT1 using a BigDecimal value.
  */
  public void setEWDDT1(BigDecimal newvalue)
  {
    fieldEWDDT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDDT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDDT1()
  {
    return fieldEWDDT1.getBigDecimal();
  }

  /**
  * Set field EWDDT2 using a String value.
  */
  public void setEWDDT2(String newvalue)
  {
    fieldEWDDT2.setString(newvalue);
  }

  /**
  * Get value of field EWDDT2 as a String.
  */
  public String getEWDDT2()
  {
    return fieldEWDDT2.getString();
  }

  /**
  * Set numeric field EWDDT2 using a BigDecimal value.
  */
  public void setEWDDT2(BigDecimal newvalue)
  {
    fieldEWDDT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDDT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDDT2()
  {
    return fieldEWDDT2.getBigDecimal();
  }

  /**
  * Set field EWDDT3 using a String value.
  */
  public void setEWDDT3(String newvalue)
  {
    fieldEWDDT3.setString(newvalue);
  }

  /**
  * Get value of field EWDDT3 as a String.
  */
  public String getEWDDT3()
  {
    return fieldEWDDT3.getString();
  }

  /**
  * Set numeric field EWDDT3 using a BigDecimal value.
  */
  public void setEWDDT3(BigDecimal newvalue)
  {
    fieldEWDDT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDDT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDDT3()
  {
    return fieldEWDDT3.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
