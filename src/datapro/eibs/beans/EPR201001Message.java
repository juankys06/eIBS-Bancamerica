package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPR201001 physical file definition.
* 
* File level identifier is 1041202170121.
* Record format level identifier is 40BDD3534EF21.
*/

public class EPR201001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PRPUSR",
                                     "E01PRPDBK",
                                     "E01PRPDAC",
                                     "E01PRPNUM",
                                     "E01PRPOPM",
                                     "E01PRPOPD",
                                     "E01PRPOPY",
                                     "E01PRPDSC",
                                     "E01PRPTCY",
                                     "E01PRPAMT",
                                     "E01PRPCAC",
                                     "E01PRPPVI",
                                     "E01PRPORD",
                                     "E01PRPBNF"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PRPUSR",
                                   "E01PRPDBK",
                                   "E01PRPDAC",
                                   "E01PRPNUM",
                                   "E01PRPOPM",
                                   "E01PRPOPD",
                                   "E01PRPOPY",
                                   "E01PRPDSC",
                                   "E01PRPTCY",
                                   "E01PRPAMT",
                                   "E01PRPCAC",
                                   "E01PRPPVI",
                                   "E01PRPORD",
                                   "E01PRPBNF"
                                 };
  final static String fid = "1041202170121";
  final static String rid = "40BDD3534EF21";
  final static String fmtname = "EPR201001";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01PRPUSR = null;
  private CharacterField fieldE01PRPDBK = null;
  private DecimalField fieldE01PRPDAC = null;
  private DecimalField fieldE01PRPNUM = null;
  private DecimalField fieldE01PRPOPM = null;
  private DecimalField fieldE01PRPOPD = null;
  private DecimalField fieldE01PRPOPY = null;
  private CharacterField fieldE01PRPDSC = null;
  private CharacterField fieldE01PRPTCY = null;
  private DecimalField fieldE01PRPAMT = null;
  private DecimalField fieldE01PRPCAC = null;
  private CharacterField fieldE01PRPPVI = null;
  private CharacterField fieldE01PRPORD = null;
  private CharacterField fieldE01PRPBNF = null;

  /**
  * Constructor for EPR201001Message.
  */
  public EPR201001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 220;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PRPUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "E01PRPUSR");
    fields[10] = fieldE01PRPDBK =
    new CharacterField(message, HEADERSIZE + 52, 2, "E01PRPDBK");
    fields[11] = fieldE01PRPDAC =
    new DecimalField(message, HEADERSIZE + 54, 13, 0, "E01PRPDAC");
    fields[12] = fieldE01PRPNUM =
    new DecimalField(message, HEADERSIZE + 67, 10, 0, "E01PRPNUM");
    fields[13] = fieldE01PRPOPM =
    new DecimalField(message, HEADERSIZE + 77, 3, 0, "E01PRPOPM");
    fields[14] = fieldE01PRPOPD =
    new DecimalField(message, HEADERSIZE + 80, 3, 0, "E01PRPOPD");
    fields[15] = fieldE01PRPOPY =
    new DecimalField(message, HEADERSIZE + 83, 3, 0, "E01PRPOPY");
    fields[16] = fieldE01PRPDSC =
    new CharacterField(message, HEADERSIZE + 86, 30, "E01PRPDSC");
    fields[17] = fieldE01PRPTCY =
    new CharacterField(message, HEADERSIZE + 116, 3, "E01PRPTCY");
    fields[18] = fieldE01PRPAMT =
    new DecimalField(message, HEADERSIZE + 119, 17, 2, "E01PRPAMT");
    fields[19] = fieldE01PRPCAC =
    new DecimalField(message, HEADERSIZE + 136, 13, 0, "E01PRPCAC");
    fields[20] = fieldE01PRPPVI =
    new CharacterField(message, HEADERSIZE + 149, 1, "E01PRPPVI");
    fields[21] = fieldE01PRPORD =
    new CharacterField(message, HEADERSIZE + 150, 35, "E01PRPORD");
    fields[22] = fieldE01PRPBNF =
    new CharacterField(message, HEADERSIZE + 185, 35, "E01PRPBNF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PRPUSR using a String value.
  */
  public void setE01PRPUSR(String newvalue)
  {
    fieldE01PRPUSR.setString(newvalue);
  }

  /**
  * Get value of field E01PRPUSR as a String.
  */
  public String getE01PRPUSR()
  {
    return fieldE01PRPUSR.getString();
  }

  /**
  * Set field E01PRPDBK using a String value.
  */
  public void setE01PRPDBK(String newvalue)
  {
    fieldE01PRPDBK.setString(newvalue);
  }

  /**
  * Get value of field E01PRPDBK as a String.
  */
  public String getE01PRPDBK()
  {
    return fieldE01PRPDBK.getString();
  }

  /**
  * Set field E01PRPDAC using a String value.
  */
  public void setE01PRPDAC(String newvalue)
  {
    fieldE01PRPDAC.setString(newvalue);
  }

  /**
  * Get value of field E01PRPDAC as a String.
  */
  public String getE01PRPDAC()
  {
    return fieldE01PRPDAC.getString();
  }

  /**
  * Set numeric field E01PRPDAC using a BigDecimal value.
  */
  public void setE01PRPDAC(BigDecimal newvalue)
  {
    fieldE01PRPDAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPDAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPDAC()
  {
    return fieldE01PRPDAC.getBigDecimal();
  }

  /**
  * Set field E01PRPNUM using a String value.
  */
  public void setE01PRPNUM(String newvalue)
  {
    fieldE01PRPNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PRPNUM as a String.
  */
  public String getE01PRPNUM()
  {
    return fieldE01PRPNUM.getString();
  }

  /**
  * Set numeric field E01PRPNUM using a BigDecimal value.
  */
  public void setE01PRPNUM(BigDecimal newvalue)
  {
    fieldE01PRPNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPNUM()
  {
    return fieldE01PRPNUM.getBigDecimal();
  }

  /**
  * Set field E01PRPOPM using a String value.
  */
  public void setE01PRPOPM(String newvalue)
  {
    fieldE01PRPOPM.setString(newvalue);
  }

  /**
  * Get value of field E01PRPOPM as a String.
  */
  public String getE01PRPOPM()
  {
    return fieldE01PRPOPM.getString();
  }

  /**
  * Set numeric field E01PRPOPM using a BigDecimal value.
  */
  public void setE01PRPOPM(BigDecimal newvalue)
  {
    fieldE01PRPOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPOPM()
  {
    return fieldE01PRPOPM.getBigDecimal();
  }

  /**
  * Set field E01PRPOPD using a String value.
  */
  public void setE01PRPOPD(String newvalue)
  {
    fieldE01PRPOPD.setString(newvalue);
  }

  /**
  * Get value of field E01PRPOPD as a String.
  */
  public String getE01PRPOPD()
  {
    return fieldE01PRPOPD.getString();
  }

  /**
  * Set numeric field E01PRPOPD using a BigDecimal value.
  */
  public void setE01PRPOPD(BigDecimal newvalue)
  {
    fieldE01PRPOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPOPD()
  {
    return fieldE01PRPOPD.getBigDecimal();
  }

  /**
  * Set field E01PRPOPY using a String value.
  */
  public void setE01PRPOPY(String newvalue)
  {
    fieldE01PRPOPY.setString(newvalue);
  }

  /**
  * Get value of field E01PRPOPY as a String.
  */
  public String getE01PRPOPY()
  {
    return fieldE01PRPOPY.getString();
  }

  /**
  * Set numeric field E01PRPOPY using a BigDecimal value.
  */
  public void setE01PRPOPY(BigDecimal newvalue)
  {
    fieldE01PRPOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPOPY()
  {
    return fieldE01PRPOPY.getBigDecimal();
  }

  /**
  * Set field E01PRPDSC using a String value.
  */
  public void setE01PRPDSC(String newvalue)
  {
    fieldE01PRPDSC.setString(newvalue);
  }

  /**
  * Get value of field E01PRPDSC as a String.
  */
  public String getE01PRPDSC()
  {
    return fieldE01PRPDSC.getString();
  }

  /**
  * Set field E01PRPTCY using a String value.
  */
  public void setE01PRPTCY(String newvalue)
  {
    fieldE01PRPTCY.setString(newvalue);
  }

  /**
  * Get value of field E01PRPTCY as a String.
  */
  public String getE01PRPTCY()
  {
    return fieldE01PRPTCY.getString();
  }

  /**
  * Set field E01PRPAMT using a String value.
  */
  public void setE01PRPAMT(String newvalue)
  {
    fieldE01PRPAMT.setString(newvalue);
  }

  /**
  * Get value of field E01PRPAMT as a String.
  */
  public String getE01PRPAMT()
  {
    return fieldE01PRPAMT.getString();
  }

  /**
  * Set numeric field E01PRPAMT using a BigDecimal value.
  */
  public void setE01PRPAMT(BigDecimal newvalue)
  {
    fieldE01PRPAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPAMT()
  {
    return fieldE01PRPAMT.getBigDecimal();
  }

  /**
  * Set field E01PRPCAC using a String value.
  */
  public void setE01PRPCAC(String newvalue)
  {
    fieldE01PRPCAC.setString(newvalue);
  }

  /**
  * Get value of field E01PRPCAC as a String.
  */
  public String getE01PRPCAC()
  {
    return fieldE01PRPCAC.getString();
  }

  /**
  * Set numeric field E01PRPCAC using a BigDecimal value.
  */
  public void setE01PRPCAC(BigDecimal newvalue)
  {
    fieldE01PRPCAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PRPCAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PRPCAC()
  {
    return fieldE01PRPCAC.getBigDecimal();
  }

  /**
  * Set field E01PRPPVI using a String value.
  */
  public void setE01PRPPVI(String newvalue)
  {
    fieldE01PRPPVI.setString(newvalue);
  }

  /**
  * Get value of field E01PRPPVI as a String.
  */
  public String getE01PRPPVI()
  {
    return fieldE01PRPPVI.getString();
  }

  /**
  * Set field E01PRPORD using a String value.
  */
  public void setE01PRPORD(String newvalue)
  {
    fieldE01PRPORD.setString(newvalue);
  }

  /**
  * Get value of field E01PRPORD as a String.
  */
  public String getE01PRPORD()
  {
    return fieldE01PRPORD.getString();
  }

  /**
  * Set field E01PRPBNF using a String value.
  */
  public void setE01PRPBNF(String newvalue)
  {
    fieldE01PRPBNF.setString(newvalue);
  }

  /**
  * Get value of field E01PRPBNF as a String.
  */
  public String getE01PRPBNF()
  {
    return fieldE01PRPBNF.getString();
  }

}
