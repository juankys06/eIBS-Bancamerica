package datapro.eibs.beans; 

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELN0115DS physical file definition.
* 
* File level identifier is 1060809170931.
* Record format level identifier is 49A7906438C38.
*/

public class ELN0115DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01FLUBNK",
                                     "E01FLUTYP",
                                     "E01FLUTNR",
                                     "E01FLUTNU",
                                     "E01FLUPER",
                                     "D01FLUDSC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01FLUBNK",
                                   "E01FLUTYP",
                                   "E01FLUTNR",
                                   "E01FLUTNU",
                                   "E01FLUPER",
                                   "D01FLUDSC"
                                 };
  final static String fid = "1060809170931";
  final static String rid = "49A7906438C38";
  final static String fmtname = "ELN0115DS";
  final int FIELDCOUNT = 15;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01FLUBNK = null;
  private CharacterField fieldE01FLUTYP = null;
  private DecimalField fieldE01FLUTNR = null;
  private DecimalField fieldE01FLUTNU = null;
  private DecimalField fieldE01FLUPER = null;
  private CharacterField fieldD01FLUDSC = null;

  /**
  * Constructor for ELN0115DSMessage.
  */
  public ELN0115DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 101;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01FLUBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01FLUBNK");
    fields[10] = fieldE01FLUTYP =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01FLUTYP");
    fields[11] = fieldE01FLUTNR =
    new DecimalField(message, HEADERSIZE + 48, 5, 0, "E01FLUTNR");
    fields[12] = fieldE01FLUTNU =
    new DecimalField(message, HEADERSIZE + 53, 5, 0, "E01FLUTNU");
    fields[13] = fieldE01FLUPER =
    new DecimalField(message, HEADERSIZE + 58, 8, 3, "E01FLUPER");
    fields[14] = fieldD01FLUDSC =
    new CharacterField(message, HEADERSIZE + 66, 35, "D01FLUDSC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01FLUBNK using a String value.
  */
  public void setE01FLUBNK(String newvalue)
  {
    fieldE01FLUBNK.setString(newvalue);
  }

  /**
  * Get value of field E01FLUBNK as a String.
  */
  public String getE01FLUBNK()
  {
    return fieldE01FLUBNK.getString();
  }

  /**
  * Set field E01FLUTYP using a String value.
  */
  public void setE01FLUTYP(String newvalue)
  {
    fieldE01FLUTYP.setString(newvalue);
  }

  /**
  * Get value of field E01FLUTYP as a String.
  */
  public String getE01FLUTYP()
  {
    return fieldE01FLUTYP.getString();
  }

  /**
  * Set field E01FLUTNR using a String value.
  */
  public void setE01FLUTNR(String newvalue)
  {
    fieldE01FLUTNR.setString(newvalue);
  }

  /**
  * Get value of field E01FLUTNR as a String.
  */
  public String getE01FLUTNR()
  {
    return fieldE01FLUTNR.getString();
  }

  /**
  * Set numeric field E01FLUTNR using a BigDecimal value.
  */
  public void setE01FLUTNR(BigDecimal newvalue)
  {
    fieldE01FLUTNR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FLUTNR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FLUTNR()
  {
    return fieldE01FLUTNR.getBigDecimal();
  }

  /**
  * Set field E01FLUTNU using a String value.
  */
  public void setE01FLUTNU(String newvalue)
  {
    fieldE01FLUTNU.setString(newvalue);
  }

  /**
  * Get value of field E01FLUTNU as a String.
  */
  public String getE01FLUTNU()
  {
    return fieldE01FLUTNU.getString();
  }

  /**
  * Set numeric field E01FLUTNU using a BigDecimal value.
  */
  public void setE01FLUTNU(BigDecimal newvalue)
  {
    fieldE01FLUTNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FLUTNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FLUTNU()
  {
    return fieldE01FLUTNU.getBigDecimal();
  }

  /**
  * Set field E01FLUPER using a String value.
  */
  public void setE01FLUPER(String newvalue)
  {
    fieldE01FLUPER.setString(newvalue);
  }

  /**
  * Get value of field E01FLUPER as a String.
  */
  public String getE01FLUPER()
  {
    return fieldE01FLUPER.getString();
  }

  /**
  * Set numeric field E01FLUPER using a BigDecimal value.
  */
  public void setE01FLUPER(BigDecimal newvalue)
  {
    fieldE01FLUPER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FLUPER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FLUPER()
  {
    return fieldE01FLUPER.getBigDecimal();
  }

  /**
  * Set field D01FLUDSC using a String value.
  */
  public void setD01FLUDSC(String newvalue)
  {
    fieldD01FLUDSC.setString(newvalue);
  }

  /**
  * Get value of field D01FLUDSC as a String.
  */
  public String getD01FLUDSC()
  {
    return fieldD01FLUDSC.getString();
  }

}
