package datapro.eibs.beans; 

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECC006002 physical file definition.
* 
* File level identifier is 1040803115119.
* Record format level identifier is 38BAB34E0B54B.
*/

public class ECC006002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CCRCRA",
                                     "E02CCRNUM",
                                     "E02CCRPRO",
                                     "E02CCRCUN",
                                     "E02CUSNA1",
                                     "E02CCRSTS",
                                     "E02CCRLSM",
                                     "E02CCRLSD",
                                     "E02CCRLSY",
                                     "F02CCRAST",
                                     "F02CCRLSM",
                                     "F02CCRLSD",
                                     "F02CCRLSY"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CCRCRA",
                                   "E02CCRNUM",
                                   "E02CCRPRO",
                                   "E02CCRCUN",
                                   "E02CUSNA1",
                                   "E02CCRSTS",
                                   "E02CCRLSM",
                                   "E02CCRLSD",
                                   "E02CCRLSY",
                                   "F02CCRAST",
                                   "F02CCRLSM",
                                   "F02CCRLSD",
                                   "F02CCRLSY"
                                 };
  final static String fid = "1040803115119";
  final static String rid = "38BAB34E0B54B";
  final static String fmtname = "ECC006002";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02CCRCRA = null;
  private CharacterField fieldE02CCRNUM = null;
  private CharacterField fieldE02CCRPRO = null;
  private DecimalField fieldE02CCRCUN = null;
  private CharacterField fieldE02CUSNA1 = null;
  private CharacterField fieldE02CCRSTS = null;
  private DecimalField fieldE02CCRLSM = null;
  private DecimalField fieldE02CCRLSD = null;
  private DecimalField fieldE02CCRLSY = null;
  private CharacterField fieldF02CCRAST = null;
  private CharacterField fieldF02CCRLSM = null;
  private CharacterField fieldF02CCRLSD = null;
  private CharacterField fieldF02CCRLSY = null;

  /**
  * Constructor for ECC006002Message.
  */
  public ECC006002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 150;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CCRCRA =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02CCRCRA");
    fields[10] = fieldE02CCRNUM =
    new CharacterField(message, HEADERSIZE + 55, 20, "E02CCRNUM");
    fields[11] = fieldE02CCRPRO =
    new CharacterField(message, HEADERSIZE + 75, 4, "E02CCRPRO");
    fields[12] = fieldE02CCRCUN =
    new DecimalField(message, HEADERSIZE + 79, 10, 0, "E02CCRCUN");
    fields[13] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 89, 45, "E02CUSNA1");
    fields[14] = fieldE02CCRSTS =
    new CharacterField(message, HEADERSIZE + 134, 1, "E02CCRSTS");
    fields[15] = fieldE02CCRLSM =
    new DecimalField(message, HEADERSIZE + 135, 3, 0, "E02CCRLSM");
    fields[16] = fieldE02CCRLSD =
    new DecimalField(message, HEADERSIZE + 138, 3, 0, "E02CCRLSD");
    fields[17] = fieldE02CCRLSY =
    new DecimalField(message, HEADERSIZE + 141, 5, 0, "E02CCRLSY");
    fields[18] = fieldF02CCRAST =
    new CharacterField(message, HEADERSIZE + 146, 1, "F02CCRAST");
    fields[19] = fieldF02CCRLSM =
    new CharacterField(message, HEADERSIZE + 147, 1, "F02CCRLSM");
    fields[20] = fieldF02CCRLSD =
    new CharacterField(message, HEADERSIZE + 148, 1, "F02CCRLSD");
    fields[21] = fieldF02CCRLSY =
    new CharacterField(message, HEADERSIZE + 149, 1, "F02CCRLSY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CCRCRA using a String value.
  */
  public void setE02CCRCRA(String newvalue)
  {
    fieldE02CCRCRA.setString(newvalue);
  }

  /**
  * Get value of field E02CCRCRA as a String.
  */
  public String getE02CCRCRA()
  {
    return fieldE02CCRCRA.getString();
  }

  /**
  * Set numeric field E02CCRCRA using a BigDecimal value.
  */
  public void setE02CCRCRA(BigDecimal newvalue)
  {
    fieldE02CCRCRA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCRCRA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCRCRA()
  {
    return fieldE02CCRCRA.getBigDecimal();
  }

  /**
  * Set field E02CCRNUM using a String value.
  */
  public void setE02CCRNUM(String newvalue)
  {
    fieldE02CCRNUM.setString(newvalue);
  }

  /**
  * Get value of field E02CCRNUM as a String.
  */
  public String getE02CCRNUM()
  {
    return fieldE02CCRNUM.getString();
  }

  /**
  * Set field E02CCRPRO using a String value.
  */
  public void setE02CCRPRO(String newvalue)
  {
    fieldE02CCRPRO.setString(newvalue);
  }

  /**
  * Get value of field E02CCRPRO as a String.
  */
  public String getE02CCRPRO()
  {
    return fieldE02CCRPRO.getString();
  }

  /**
  * Set field E02CCRCUN using a String value.
  */
  public void setE02CCRCUN(String newvalue)
  {
    fieldE02CCRCUN.setString(newvalue);
  }

  /**
  * Get value of field E02CCRCUN as a String.
  */
  public String getE02CCRCUN()
  {
    return fieldE02CCRCUN.getString();
  }

  /**
  * Set numeric field E02CCRCUN using a BigDecimal value.
  */
  public void setE02CCRCUN(BigDecimal newvalue)
  {
    fieldE02CCRCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCRCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCRCUN()
  {
    return fieldE02CCRCUN.getBigDecimal();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02CCRSTS using a String value.
  */
  public void setE02CCRSTS(String newvalue)
  {
    fieldE02CCRSTS.setString(newvalue);
  }

  /**
  * Get value of field E02CCRSTS as a String.
  */
  public String getE02CCRSTS()
  {
    return fieldE02CCRSTS.getString();
  }

  /**
  * Set field E02CCRLSM using a String value.
  */
  public void setE02CCRLSM(String newvalue)
  {
    fieldE02CCRLSM.setString(newvalue);
  }

  /**
  * Get value of field E02CCRLSM as a String.
  */
  public String getE02CCRLSM()
  {
    return fieldE02CCRLSM.getString();
  }

  /**
  * Set numeric field E02CCRLSM using a BigDecimal value.
  */
  public void setE02CCRLSM(BigDecimal newvalue)
  {
    fieldE02CCRLSM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCRLSM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCRLSM()
  {
    return fieldE02CCRLSM.getBigDecimal();
  }

  /**
  * Set field E02CCRLSD using a String value.
  */
  public void setE02CCRLSD(String newvalue)
  {
    fieldE02CCRLSD.setString(newvalue);
  }

  /**
  * Get value of field E02CCRLSD as a String.
  */
  public String getE02CCRLSD()
  {
    return fieldE02CCRLSD.getString();
  }

  /**
  * Set numeric field E02CCRLSD using a BigDecimal value.
  */
  public void setE02CCRLSD(BigDecimal newvalue)
  {
    fieldE02CCRLSD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCRLSD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCRLSD()
  {
    return fieldE02CCRLSD.getBigDecimal();
  }

  /**
  * Set field E02CCRLSY using a String value.
  */
  public void setE02CCRLSY(String newvalue)
  {
    fieldE02CCRLSY.setString(newvalue);
  }

  /**
  * Get value of field E02CCRLSY as a String.
  */
  public String getE02CCRLSY()
  {
    return fieldE02CCRLSY.getString();
  }

  /**
  * Set numeric field E02CCRLSY using a BigDecimal value.
  */
  public void setE02CCRLSY(BigDecimal newvalue)
  {
    fieldE02CCRLSY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCRLSY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCRLSY()
  {
    return fieldE02CCRLSY.getBigDecimal();
  }

  /**
  * Set field F02CCRAST using a String value.
  */
  public void setF02CCRAST(String newvalue)
  {
    fieldF02CCRAST.setString(newvalue);
  }

  /**
  * Get value of field F02CCRAST as a String.
  */
  public String getF02CCRAST()
  {
    return fieldF02CCRAST.getString();
  }

  /**
  * Set field F02CCRLSM using a String value.
  */
  public void setF02CCRLSM(String newvalue)
  {
    fieldF02CCRLSM.setString(newvalue);
  }

  /**
  * Get value of field F02CCRLSM as a String.
  */
  public String getF02CCRLSM()
  {
    return fieldF02CCRLSM.getString();
  }

  /**
  * Set field F02CCRLSD using a String value.
  */
  public void setF02CCRLSD(String newvalue)
  {
    fieldF02CCRLSD.setString(newvalue);
  }

  /**
  * Get value of field F02CCRLSD as a String.
  */
  public String getF02CCRLSD()
  {
    return fieldF02CCRLSD.getString();
  }

  /**
  * Set field F02CCRLSY using a String value.
  */
  public void setF02CCRLSY(String newvalue)
  {
    fieldF02CCRLSY.setString(newvalue);
  }

  /**
  * Get value of field F02CCRLSY as a String.
  */
  public String getF02CCRLSY()
  {
    return fieldF02CCRLSY.getString();
  }

}
