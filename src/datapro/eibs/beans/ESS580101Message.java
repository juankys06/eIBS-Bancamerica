package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS580101 physical file definition.
* 
* File level identifier is 1100513164420.
* Record format level identifier is 409504172C147.
*/

public class ESS580101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01INPCUN",
                                     "E01INPDAC",
                                     "E01INPPAM",
                                     "E01INPNAV",
                                     "E01INPNAN",
                                     "E01INPNAC",
                                     "E01INPFAM",
                                     "E01INPFAD",
                                     "E01INPFAY",
                                     "E01INPEAM",
                                     "E01INPEAD",
                                     "E01INPEAY",
                                     "E01INPTRA",
                                     "E01INPSE1",
                                     "E01INPSE2",
                                     "E01INPSE3",
                                     "E01INPSEO",
                                     "E01INPFL1",
                                     "E01INPFL2",
                                     "E01INPFL3",
                                     "E01INPFL4",
                                     "E01INPFL5",
                                     "E01INPFL6"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01INPCUN",
                                   "E01INPDAC",
                                   "E01INPPAM",
                                   "E01INPNAV",
                                   "E01INPNAN",
                                   "E01INPNAC",
                                   "E01INPFAM",
                                   "E01INPFAD",
                                   "E01INPFAY",
                                   "E01INPEAM",
                                   "E01INPEAD",
                                   "E01INPEAY",
                                   "E01INPTRA",
                                   "E01INPSE1",
                                   "E01INPSE2",
                                   "E01INPSE3",
                                   "E01INPSEO",
                                   "E01INPFL1",
                                   "E01INPFL2",
                                   "E01INPFL3",
                                   "E01INPFL4",
                                   "E01INPFL5",
                                   "E01INPFL6"
                                 };
  final static String fid = "1100513164420";
  final static String rid = "409504172C147";
  final static String fmtname = "ESS580101";
  final int FIELDCOUNT = 30;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01INPCUN = null;
  private DecimalField fieldE01INPDAC = null;
  private DecimalField fieldE01INPPAM = null;
  private CharacterField fieldE01INPNAV = null;
  private CharacterField fieldE01INPNAN = null;
  private CharacterField fieldE01INPNAC = null;
  private DecimalField fieldE01INPFAM = null;
  private DecimalField fieldE01INPFAD = null;
  private DecimalField fieldE01INPFAY = null;
  private DecimalField fieldE01INPEAM = null;
  private DecimalField fieldE01INPEAD = null;
  private DecimalField fieldE01INPEAY = null;
  private CharacterField fieldE01INPTRA = null;
  private CharacterField fieldE01INPSE1 = null;
  private CharacterField fieldE01INPSE2 = null;
  private CharacterField fieldE01INPSE3 = null;
  private CharacterField fieldE01INPSEO = null;
  private CharacterField fieldE01INPFL1 = null;
  private CharacterField fieldE01INPFL2 = null;
  private CharacterField fieldE01INPFL3 = null;
  private DecimalField fieldE01INPFL4 = null;
  private DecimalField fieldE01INPFL5 = null;
  private DecimalField fieldE01INPFL6 = null;

  /**
  * Constructor for ESS580101Message.
  */
  public ESS580101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 520;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 20, 4, "H01OPECOD");
    fields[3] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 24, 1, "H01FLGMAS");
    fields[4] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 25, 1, "H01FLGWK1");
    fields[5] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 26, 1, "H01FLGWK2");
    fields[6] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 27, 1, "H01FLGWK3");
    fields[7] = fieldE01INPCUN =
    new DecimalField(message, HEADERSIZE + 28, 10, 0, "E01INPCUN");
    fields[8] = fieldE01INPDAC =
    new DecimalField(message, HEADERSIZE + 38, 17, 0, "E01INPDAC");
    fields[9] = fieldE01INPPAM =
    new DecimalField(message, HEADERSIZE + 55, 17, 2, "E01INPPAM");
    fields[10] = fieldE01INPNAV =
    new CharacterField(message, HEADERSIZE + 72, 60, "E01INPNAV");
    fields[11] = fieldE01INPNAN =
    new CharacterField(message, HEADERSIZE + 132, 45, "E01INPNAN");
    fields[12] = fieldE01INPNAC =
    new CharacterField(message, HEADERSIZE + 177, 45, "E01INPNAC");
    fields[13] = fieldE01INPFAM =
    new DecimalField(message, HEADERSIZE + 222, 3, 0, "E01INPFAM");
    fields[14] = fieldE01INPFAD =
    new DecimalField(message, HEADERSIZE + 225, 3, 0, "E01INPFAD");
    fields[15] = fieldE01INPFAY =
    new DecimalField(message, HEADERSIZE + 228, 3, 0, "E01INPFAY");
    fields[16] = fieldE01INPEAM =
    new DecimalField(message, HEADERSIZE + 231, 3, 0, "E01INPEAM");
    fields[17] = fieldE01INPEAD =
    new DecimalField(message, HEADERSIZE + 234, 3, 0, "E01INPEAD");
    fields[18] = fieldE01INPEAY =
    new DecimalField(message, HEADERSIZE + 237, 3, 0, "E01INPEAY");
    fields[19] = fieldE01INPTRA =
    new CharacterField(message, HEADERSIZE + 240, 10, "E01INPTRA");
    fields[20] = fieldE01INPSE1 =
    new CharacterField(message, HEADERSIZE + 250, 1, "E01INPSE1");
    fields[21] = fieldE01INPSE2 =
    new CharacterField(message, HEADERSIZE + 251, 1, "E01INPSE2");
    fields[22] = fieldE01INPSE3 =
    new CharacterField(message, HEADERSIZE + 252, 1, "E01INPSE3");
    fields[23] = fieldE01INPSEO =
    new CharacterField(message, HEADERSIZE + 253, 60, "E01INPSEO");
    fields[24] = fieldE01INPFL1 =
    new CharacterField(message, HEADERSIZE + 313, 60, "E01INPFL1");
    fields[25] = fieldE01INPFL2 =
    new CharacterField(message, HEADERSIZE + 373, 60, "E01INPFL2");
    fields[26] = fieldE01INPFL3 =
    new CharacterField(message, HEADERSIZE + 433, 60, "E01INPFL3");
    fields[27] = fieldE01INPFL4 =
    new DecimalField(message, HEADERSIZE + 493, 9, 0, "E01INPFL4");
    fields[28] = fieldE01INPFL5 =
    new DecimalField(message, HEADERSIZE + 502, 9, 0, "E01INPFL5");
    fields[29] = fieldE01INPFL6 =
    new DecimalField(message, HEADERSIZE + 511, 9, 0, "E01INPFL6");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01INPCUN using a String value.
  */
  public void setE01INPCUN(String newvalue)
  {
    fieldE01INPCUN.setString(newvalue);
  }

  /**
  * Get value of field E01INPCUN as a String.
  */
  public String getE01INPCUN()
  {
    return fieldE01INPCUN.getString();
  }

  /**
  * Set numeric field E01INPCUN using a BigDecimal value.
  */
  public void setE01INPCUN(BigDecimal newvalue)
  {
    fieldE01INPCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPCUN()
  {
    return fieldE01INPCUN.getBigDecimal();
  }

  /**
  * Set field E01INPDAC using a String value.
  */
  public void setE01INPDAC(String newvalue)
  {
    fieldE01INPDAC.setString(newvalue);
  }

  /**
  * Get value of field E01INPDAC as a String.
  */
  public String getE01INPDAC()
  {
    return fieldE01INPDAC.getString();
  }

  /**
  * Set numeric field E01INPDAC using a BigDecimal value.
  */
  public void setE01INPDAC(BigDecimal newvalue)
  {
    fieldE01INPDAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPDAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPDAC()
  {
    return fieldE01INPDAC.getBigDecimal();
  }

  /**
  * Set field E01INPPAM using a String value.
  */
  public void setE01INPPAM(String newvalue)
  {
    fieldE01INPPAM.setString(newvalue);
  }

  /**
  * Get value of field E01INPPAM as a String.
  */
  public String getE01INPPAM()
  {
    return fieldE01INPPAM.getString();
  }

  /**
  * Set numeric field E01INPPAM using a BigDecimal value.
  */
  public void setE01INPPAM(BigDecimal newvalue)
  {
    fieldE01INPPAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPPAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPPAM()
  {
    return fieldE01INPPAM.getBigDecimal();
  }

  /**
  * Set field E01INPNAV using a String value.
  */
  public void setE01INPNAV(String newvalue)
  {
    fieldE01INPNAV.setString(newvalue);
  }

  /**
  * Get value of field E01INPNAV as a String.
  */
  public String getE01INPNAV()
  {
    return fieldE01INPNAV.getString();
  }

  /**
  * Set field E01INPNAN using a String value.
  */
  public void setE01INPNAN(String newvalue)
  {
    fieldE01INPNAN.setString(newvalue);
  }

  /**
  * Get value of field E01INPNAN as a String.
  */
  public String getE01INPNAN()
  {
    return fieldE01INPNAN.getString();
  }

  /**
  * Set field E01INPNAC using a String value.
  */
  public void setE01INPNAC(String newvalue)
  {
    fieldE01INPNAC.setString(newvalue);
  }

  /**
  * Get value of field E01INPNAC as a String.
  */
  public String getE01INPNAC()
  {
    return fieldE01INPNAC.getString();
  }

  /**
  * Set field E01INPFAM using a String value.
  */
  public void setE01INPFAM(String newvalue)
  {
    fieldE01INPFAM.setString(newvalue);
  }

  /**
  * Get value of field E01INPFAM as a String.
  */
  public String getE01INPFAM()
  {
    return fieldE01INPFAM.getString();
  }

  /**
  * Set numeric field E01INPFAM using a BigDecimal value.
  */
  public void setE01INPFAM(BigDecimal newvalue)
  {
    fieldE01INPFAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPFAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPFAM()
  {
    return fieldE01INPFAM.getBigDecimal();
  }

  /**
  * Set field E01INPFAD using a String value.
  */
  public void setE01INPFAD(String newvalue)
  {
    fieldE01INPFAD.setString(newvalue);
  }

  /**
  * Get value of field E01INPFAD as a String.
  */
  public String getE01INPFAD()
  {
    return fieldE01INPFAD.getString();
  }

  /**
  * Set numeric field E01INPFAD using a BigDecimal value.
  */
  public void setE01INPFAD(BigDecimal newvalue)
  {
    fieldE01INPFAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPFAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPFAD()
  {
    return fieldE01INPFAD.getBigDecimal();
  }

  /**
  * Set field E01INPFAY using a String value.
  */
  public void setE01INPFAY(String newvalue)
  {
    fieldE01INPFAY.setString(newvalue);
  }

  /**
  * Get value of field E01INPFAY as a String.
  */
  public String getE01INPFAY()
  {
    return fieldE01INPFAY.getString();
  }

  /**
  * Set numeric field E01INPFAY using a BigDecimal value.
  */
  public void setE01INPFAY(BigDecimal newvalue)
  {
    fieldE01INPFAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPFAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPFAY()
  {
    return fieldE01INPFAY.getBigDecimal();
  }

  /**
  * Set field E01INPEAM using a String value.
  */
  public void setE01INPEAM(String newvalue)
  {
    fieldE01INPEAM.setString(newvalue);
  }

  /**
  * Get value of field E01INPEAM as a String.
  */
  public String getE01INPEAM()
  {
    return fieldE01INPEAM.getString();
  }

  /**
  * Set numeric field E01INPEAM using a BigDecimal value.
  */
  public void setE01INPEAM(BigDecimal newvalue)
  {
    fieldE01INPEAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPEAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPEAM()
  {
    return fieldE01INPEAM.getBigDecimal();
  }

  /**
  * Set field E01INPEAD using a String value.
  */
  public void setE01INPEAD(String newvalue)
  {
    fieldE01INPEAD.setString(newvalue);
  }

  /**
  * Get value of field E01INPEAD as a String.
  */
  public String getE01INPEAD()
  {
    return fieldE01INPEAD.getString();
  }

  /**
  * Set numeric field E01INPEAD using a BigDecimal value.
  */
  public void setE01INPEAD(BigDecimal newvalue)
  {
    fieldE01INPEAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPEAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPEAD()
  {
    return fieldE01INPEAD.getBigDecimal();
  }

  /**
  * Set field E01INPEAY using a String value.
  */
  public void setE01INPEAY(String newvalue)
  {
    fieldE01INPEAY.setString(newvalue);
  }

  /**
  * Get value of field E01INPEAY as a String.
  */
  public String getE01INPEAY()
  {
    return fieldE01INPEAY.getString();
  }

  /**
  * Set numeric field E01INPEAY using a BigDecimal value.
  */
  public void setE01INPEAY(BigDecimal newvalue)
  {
    fieldE01INPEAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPEAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPEAY()
  {
    return fieldE01INPEAY.getBigDecimal();
  }

  /**
  * Set field E01INPTRA using a String value.
  */
  public void setE01INPTRA(String newvalue)
  {
    fieldE01INPTRA.setString(newvalue);
  }

  /**
  * Get value of field E01INPTRA as a String.
  */
  public String getE01INPTRA()
  {
    return fieldE01INPTRA.getString();
  }

  /**
  * Set field E01INPSE1 using a String value.
  */
  public void setE01INPSE1(String newvalue)
  {
    fieldE01INPSE1.setString(newvalue);
  }

  /**
  * Get value of field E01INPSE1 as a String.
  */
  public String getE01INPSE1()
  {
    return fieldE01INPSE1.getString();
  }

  /**
  * Set field E01INPSE2 using a String value.
  */
  public void setE01INPSE2(String newvalue)
  {
    fieldE01INPSE2.setString(newvalue);
  }

  /**
  * Get value of field E01INPSE2 as a String.
  */
  public String getE01INPSE2()
  {
    return fieldE01INPSE2.getString();
  }

  /**
  * Set field E01INPSE3 using a String value.
  */
  public void setE01INPSE3(String newvalue)
  {
    fieldE01INPSE3.setString(newvalue);
  }

  /**
  * Get value of field E01INPSE3 as a String.
  */
  public String getE01INPSE3()
  {
    return fieldE01INPSE3.getString();
  }

  /**
  * Set field E01INPSEO using a String value.
  */
  public void setE01INPSEO(String newvalue)
  {
    fieldE01INPSEO.setString(newvalue);
  }

  /**
  * Get value of field E01INPSEO as a String.
  */
  public String getE01INPSEO()
  {
    return fieldE01INPSEO.getString();
  }

  /**
  * Set field E01INPFL1 using a String value.
  */
  public void setE01INPFL1(String newvalue)
  {
    fieldE01INPFL1.setString(newvalue);
  }

  /**
  * Get value of field E01INPFL1 as a String.
  */
  public String getE01INPFL1()
  {
    return fieldE01INPFL1.getString();
  }

  /**
  * Set field E01INPFL2 using a String value.
  */
  public void setE01INPFL2(String newvalue)
  {
    fieldE01INPFL2.setString(newvalue);
  }

  /**
  * Get value of field E01INPFL2 as a String.
  */
  public String getE01INPFL2()
  {
    return fieldE01INPFL2.getString();
  }

  /**
  * Set field E01INPFL3 using a String value.
  */
  public void setE01INPFL3(String newvalue)
  {
    fieldE01INPFL3.setString(newvalue);
  }

  /**
  * Get value of field E01INPFL3 as a String.
  */
  public String getE01INPFL3()
  {
    return fieldE01INPFL3.getString();
  }

  /**
  * Set field E01INPFL4 using a String value.
  */
  public void setE01INPFL4(String newvalue)
  {
    fieldE01INPFL4.setString(newvalue);
  }

  /**
  * Get value of field E01INPFL4 as a String.
  */
  public String getE01INPFL4()
  {
    return fieldE01INPFL4.getString();
  }

  /**
  * Set numeric field E01INPFL4 using a BigDecimal value.
  */
  public void setE01INPFL4(BigDecimal newvalue)
  {
    fieldE01INPFL4.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPFL4 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPFL4()
  {
    return fieldE01INPFL4.getBigDecimal();
  }

  /**
  * Set field E01INPFL5 using a String value.
  */
  public void setE01INPFL5(String newvalue)
  {
    fieldE01INPFL5.setString(newvalue);
  }

  /**
  * Get value of field E01INPFL5 as a String.
  */
  public String getE01INPFL5()
  {
    return fieldE01INPFL5.getString();
  }

  /**
  * Set numeric field E01INPFL5 using a BigDecimal value.
  */
  public void setE01INPFL5(BigDecimal newvalue)
  {
    fieldE01INPFL5.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPFL5 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPFL5()
  {
    return fieldE01INPFL5.getBigDecimal();
  }

  /**
  * Set field E01INPFL6 using a String value.
  */
  public void setE01INPFL6(String newvalue)
  {
    fieldE01INPFL6.setString(newvalue);
  }

  /**
  * Get value of field E01INPFL6 as a String.
  */
  public String getE01INPFL6()
  {
    return fieldE01INPFL6.getString();
  }

  /**
  * Set numeric field E01INPFL6 using a BigDecimal value.
  */
  public void setE01INPFL6(BigDecimal newvalue)
  {
    fieldE01INPFL6.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01INPFL6 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01INPFL6()
  {
    return fieldE01INPFL6.getBigDecimal();
  }

}
