package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPC013501 physical file definition.
* 
* File level identifier is 1080220203738.
* Record format level identifier is 235473FB85647.
*/

public class EPC013501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PDEACC",
                                     "E01PDEDEA",
                                     "E01PDESEQ",
                                     "E01PDEDSC",
                                     "E01PDECUN",
                                     "E01PDEOPC",
                                     "E01PDEOPM",
                                     "E01PDEOPD",
                                     "E01PDEOPY",
                                     "E01PDETYP",
                                     "E01PDEVAN",
                                     "D01PDESTS",
                                     "D01PDECUN"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PDEACC",
                                   "E01PDEDEA",
                                   "E01PDESEQ",
                                   "E01PDEDSC",
                                   "E01PDECUN",
                                   "E01PDEOPC",
                                   "E01PDEOPM",
                                   "E01PDEOPD",
                                   "E01PDEOPY",
                                   "E01PDETYP",
                                   "E01PDEVAN",
                                   "D01PDESTS",
                                   "D01PDECUN"
                                 };
  final static String fid = "1080220203738";
  final static String rid = "235473FB85647";
  final static String fmtname = "EPC013501";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PDEACC = null;
  private DecimalField fieldE01PDEDEA = null;
  private DecimalField fieldE01PDESEQ = null;
  private CharacterField fieldE01PDEDSC = null;
  private DecimalField fieldE01PDECUN = null;
  private DecimalField fieldE01PDEOPC = null;
  private DecimalField fieldE01PDEOPM = null;
  private DecimalField fieldE01PDEOPD = null;
  private DecimalField fieldE01PDEOPY = null;
  private CharacterField fieldE01PDETYP = null;
  private DecimalField fieldE01PDEVAN = null;
  private CharacterField fieldD01PDESTS = null;
  private CharacterField fieldD01PDECUN = null;

  /**
  * Constructor for EPC013501Message.
  */
  public EPC013501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 225;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PDEACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01PDEACC");
    fields[10] = fieldE01PDEDEA =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E01PDEDEA");
    fields[11] = fieldE01PDESEQ =
    new DecimalField(message, HEADERSIZE + 68, 7, 0, "E01PDESEQ");
    fields[12] = fieldE01PDEDSC =
    new CharacterField(message, HEADERSIZE + 75, 30, "E01PDEDSC");
    fields[13] = fieldE01PDECUN =
    new DecimalField(message, HEADERSIZE + 105, 10, 0, "E01PDECUN");
    fields[14] = fieldE01PDEOPC =
    new DecimalField(message, HEADERSIZE + 115, 2, 0, "E01PDEOPC");
    fields[15] = fieldE01PDEOPM =
    new DecimalField(message, HEADERSIZE + 117, 3, 0, "E01PDEOPM");
    fields[16] = fieldE01PDEOPD =
    new DecimalField(message, HEADERSIZE + 120, 3, 0, "E01PDEOPD");
    fields[17] = fieldE01PDEOPY =
    new DecimalField(message, HEADERSIZE + 123, 3, 0, "E01PDEOPY");
    fields[18] = fieldE01PDETYP =
    new CharacterField(message, HEADERSIZE + 126, 2, "E01PDETYP");
    fields[19] = fieldE01PDEVAN =
    new DecimalField(message, HEADERSIZE + 128, 17, 2, "E01PDEVAN");
    fields[20] = fieldD01PDESTS =
    new CharacterField(message, HEADERSIZE + 145, 35, "D01PDESTS");
    fields[21] = fieldD01PDECUN =
    new CharacterField(message, HEADERSIZE + 180, 45, "D01PDECUN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PDEACC using a String value.
  */
  public void setE01PDEACC(String newvalue)
  {
    fieldE01PDEACC.setString(newvalue);
  }

  /**
  * Get value of field E01PDEACC as a String.
  */
  public String getE01PDEACC()
  {
    return fieldE01PDEACC.getString();
  }

  /**
  * Set numeric field E01PDEACC using a BigDecimal value.
  */
  public void setE01PDEACC(BigDecimal newvalue)
  {
    fieldE01PDEACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEACC()
  {
    return fieldE01PDEACC.getBigDecimal();
  }

  /**
  * Set field E01PDEDEA using a String value.
  */
  public void setE01PDEDEA(String newvalue)
  {
    fieldE01PDEDEA.setString(newvalue);
  }

  /**
  * Get value of field E01PDEDEA as a String.
  */
  public String getE01PDEDEA()
  {
    return fieldE01PDEDEA.getString();
  }

  /**
  * Set numeric field E01PDEDEA using a BigDecimal value.
  */
  public void setE01PDEDEA(BigDecimal newvalue)
  {
    fieldE01PDEDEA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEDEA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEDEA()
  {
    return fieldE01PDEDEA.getBigDecimal();
  }

  /**
  * Set field E01PDESEQ using a String value.
  */
  public void setE01PDESEQ(String newvalue)
  {
    fieldE01PDESEQ.setString(newvalue);
  }

  /**
  * Get value of field E01PDESEQ as a String.
  */
  public String getE01PDESEQ()
  {
    return fieldE01PDESEQ.getString();
  }

  /**
  * Set numeric field E01PDESEQ using a BigDecimal value.
  */
  public void setE01PDESEQ(BigDecimal newvalue)
  {
    fieldE01PDESEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDESEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDESEQ()
  {
    return fieldE01PDESEQ.getBigDecimal();
  }

  /**
  * Set field E01PDEDSC using a String value.
  */
  public void setE01PDEDSC(String newvalue)
  {
    fieldE01PDEDSC.setString(newvalue);
  }

  /**
  * Get value of field E01PDEDSC as a String.
  */
  public String getE01PDEDSC()
  {
    return fieldE01PDEDSC.getString();
  }

  /**
  * Set field E01PDECUN using a String value.
  */
  public void setE01PDECUN(String newvalue)
  {
    fieldE01PDECUN.setString(newvalue);
  }

  /**
  * Get value of field E01PDECUN as a String.
  */
  public String getE01PDECUN()
  {
    return fieldE01PDECUN.getString();
  }

  /**
  * Set numeric field E01PDECUN using a BigDecimal value.
  */
  public void setE01PDECUN(BigDecimal newvalue)
  {
    fieldE01PDECUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDECUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDECUN()
  {
    return fieldE01PDECUN.getBigDecimal();
  }

  /**
  * Set field E01PDEOPC using a String value.
  */
  public void setE01PDEOPC(String newvalue)
  {
    fieldE01PDEOPC.setString(newvalue);
  }

  /**
  * Get value of field E01PDEOPC as a String.
  */
  public String getE01PDEOPC()
  {
    return fieldE01PDEOPC.getString();
  }

  /**
  * Set numeric field E01PDEOPC using a BigDecimal value.
  */
  public void setE01PDEOPC(BigDecimal newvalue)
  {
    fieldE01PDEOPC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEOPC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEOPC()
  {
    return fieldE01PDEOPC.getBigDecimal();
  }

  /**
  * Set field E01PDEOPM using a String value.
  */
  public void setE01PDEOPM(String newvalue)
  {
    fieldE01PDEOPM.setString(newvalue);
  }

  /**
  * Get value of field E01PDEOPM as a String.
  */
  public String getE01PDEOPM()
  {
    return fieldE01PDEOPM.getString();
  }

  /**
  * Set numeric field E01PDEOPM using a BigDecimal value.
  */
  public void setE01PDEOPM(BigDecimal newvalue)
  {
    fieldE01PDEOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEOPM()
  {
    return fieldE01PDEOPM.getBigDecimal();
  }

  /**
  * Set field E01PDEOPD using a String value.
  */
  public void setE01PDEOPD(String newvalue)
  {
    fieldE01PDEOPD.setString(newvalue);
  }

  /**
  * Get value of field E01PDEOPD as a String.
  */
  public String getE01PDEOPD()
  {
    return fieldE01PDEOPD.getString();
  }

  /**
  * Set numeric field E01PDEOPD using a BigDecimal value.
  */
  public void setE01PDEOPD(BigDecimal newvalue)
  {
    fieldE01PDEOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEOPD()
  {
    return fieldE01PDEOPD.getBigDecimal();
  }

  /**
  * Set field E01PDEOPY using a String value.
  */
  public void setE01PDEOPY(String newvalue)
  {
    fieldE01PDEOPY.setString(newvalue);
  }

  /**
  * Get value of field E01PDEOPY as a String.
  */
  public String getE01PDEOPY()
  {
    return fieldE01PDEOPY.getString();
  }

  /**
  * Set numeric field E01PDEOPY using a BigDecimal value.
  */
  public void setE01PDEOPY(BigDecimal newvalue)
  {
    fieldE01PDEOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEOPY()
  {
    return fieldE01PDEOPY.getBigDecimal();
  }

  /**
  * Set field E01PDETYP using a String value.
  */
  public void setE01PDETYP(String newvalue)
  {
    fieldE01PDETYP.setString(newvalue);
  }

  /**
  * Get value of field E01PDETYP as a String.
  */
  public String getE01PDETYP()
  {
    return fieldE01PDETYP.getString();
  }

  /**
  * Set field E01PDEVAN using a String value.
  */
  public void setE01PDEVAN(String newvalue)
  {
    fieldE01PDEVAN.setString(newvalue);
  }

  /**
  * Get value of field E01PDEVAN as a String.
  */
  public String getE01PDEVAN()
  {
    return fieldE01PDEVAN.getString();
  }

  /**
  * Set numeric field E01PDEVAN using a BigDecimal value.
  */
  public void setE01PDEVAN(BigDecimal newvalue)
  {
    fieldE01PDEVAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDEVAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDEVAN()
  {
    return fieldE01PDEVAN.getBigDecimal();
  }

  /**
  * Set field D01PDESTS using a String value.
  */
  public void setD01PDESTS(String newvalue)
  {
    fieldD01PDESTS.setString(newvalue);
  }

  /**
  * Get value of field D01PDESTS as a String.
  */
  public String getD01PDESTS()
  {
    return fieldD01PDESTS.getString();
  }

  /**
  * Set field D01PDECUN using a String value.
  */
  public void setD01PDECUN(String newvalue)
  {
    fieldD01PDECUN.setString(newvalue);
  }

  /**
  * Get value of field D01PDECUN as a String.
  */
  public String getD01PDECUN()
  {
    return fieldD01PDECUN.getString();
  }

}
