package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECRA02001 physical file definition.
* 
* File level identifier is 1041115104116.
* Record format level identifier is 40A2960392969.
*/

public class ECRA02001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CRCCTC",
                                     "E01CRCDSC",
                                     "E01CRCSTC",
                                     "E01CRCSAC",
                                     "E01CRCMSA",
                                     "E01CRCSTS",
                                     "D01STCDSC",
                                     "D01MSADSC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CRCCTC",
                                   "E01CRCDSC",
                                   "E01CRCSTC",
                                   "E01CRCSAC",
                                   "E01CRCMSA",
                                   "E01CRCSTS",
                                   "D01STCDSC",
                                   "D01MSADSC"
                                 };
  final static String fid = "1041115104116";
  final static String rid = "40A2960392969";
  final static String fmtname = "ECRA02001";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CRCCTC = null;
  private CharacterField fieldE01CRCDSC = null;
  private DecimalField fieldE01CRCSTC = null;
  private CharacterField fieldE01CRCSAC = null;
  private CharacterField fieldE01CRCMSA = null;
  private CharacterField fieldE01CRCSTS = null;
  private CharacterField fieldD01STCDSC = null;
  private CharacterField fieldD01MSADSC = null;

  /**
  * Constructor for ECRA02001Message.
  */
  public ECRA02001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 147;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CRCCTC =
    new DecimalField(message, HEADERSIZE + 42, 4, 0, "E01CRCCTC");
    fields[10] = fieldE01CRCDSC =
    new CharacterField(message, HEADERSIZE + 46, 30, "E01CRCDSC");
    fields[11] = fieldE01CRCSTC =
    new DecimalField(message, HEADERSIZE + 76, 3, 0, "E01CRCSTC");
    fields[12] = fieldE01CRCSAC =
    new CharacterField(message, HEADERSIZE + 79, 2, "E01CRCSAC");
    fields[13] = fieldE01CRCMSA =
    new CharacterField(message, HEADERSIZE + 81, 5, "E01CRCMSA");
    fields[14] = fieldE01CRCSTS =
    new CharacterField(message, HEADERSIZE + 86, 1, "E01CRCSTS");
    fields[15] = fieldD01STCDSC =
    new CharacterField(message, HEADERSIZE + 87, 30, "D01STCDSC");
    fields[16] = fieldD01MSADSC =
    new CharacterField(message, HEADERSIZE + 117, 30, "D01MSADSC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CRCCTC using a String value.
  */
  public void setE01CRCCTC(String newvalue)
  {
    fieldE01CRCCTC.setString(newvalue);
  }

  /**
  * Get value of field E01CRCCTC as a String.
  */
  public String getE01CRCCTC()
  {
    return fieldE01CRCCTC.getString();
  }

  /**
  * Set numeric field E01CRCCTC using a BigDecimal value.
  */
  public void setE01CRCCTC(BigDecimal newvalue)
  {
    fieldE01CRCCTC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CRCCTC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CRCCTC()
  {
    return fieldE01CRCCTC.getBigDecimal();
  }

  /**
  * Set field E01CRCDSC using a String value.
  */
  public void setE01CRCDSC(String newvalue)
  {
    fieldE01CRCDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CRCDSC as a String.
  */
  public String getE01CRCDSC()
  {
    return fieldE01CRCDSC.getString();
  }

  /**
  * Set field E01CRCSTC using a String value.
  */
  public void setE01CRCSTC(String newvalue)
  {
    fieldE01CRCSTC.setString(newvalue);
  }

  /**
  * Get value of field E01CRCSTC as a String.
  */
  public String getE01CRCSTC()
  {
    return fieldE01CRCSTC.getString();
  }

  /**
  * Set numeric field E01CRCSTC using a BigDecimal value.
  */
  public void setE01CRCSTC(BigDecimal newvalue)
  {
    fieldE01CRCSTC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CRCSTC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CRCSTC()
  {
    return fieldE01CRCSTC.getBigDecimal();
  }

  /**
  * Set field E01CRCSAC using a String value.
  */
  public void setE01CRCSAC(String newvalue)
  {
    fieldE01CRCSAC.setString(newvalue);
  }

  /**
  * Get value of field E01CRCSAC as a String.
  */
  public String getE01CRCSAC()
  {
    return fieldE01CRCSAC.getString();
  }

  /**
  * Set field E01CRCMSA using a String value.
  */
  public void setE01CRCMSA(String newvalue)
  {
    fieldE01CRCMSA.setString(newvalue);
  }

  /**
  * Get value of field E01CRCMSA as a String.
  */
  public String getE01CRCMSA()
  {
    return fieldE01CRCMSA.getString();
  }

  /**
  * Set field E01CRCSTS using a String value.
  */
  public void setE01CRCSTS(String newvalue)
  {
    fieldE01CRCSTS.setString(newvalue);
  }

  /**
  * Get value of field E01CRCSTS as a String.
  */
  public String getE01CRCSTS()
  {
    return fieldE01CRCSTS.getString();
  }

  /**
  * Set field D01STCDSC using a String value.
  */
  public void setD01STCDSC(String newvalue)
  {
    fieldD01STCDSC.setString(newvalue);
  }

  /**
  * Get value of field D01STCDSC as a String.
  */
  public String getD01STCDSC()
  {
    return fieldD01STCDSC.getString();
  }

  /**
  * Set field D01MSADSC using a String value.
  */
  public void setD01MSADSC(String newvalue)
  {
    fieldD01MSADSC.setString(newvalue);
  }

  /**
  * Get value of field D01MSADSC as a String.
  */
  public String getD01MSADSC()
  {
    return fieldD01MSADSC.getString();
  }

}
