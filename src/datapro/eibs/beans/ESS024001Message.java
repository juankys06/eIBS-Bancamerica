package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS024001 physical file definition.
* 
* File level identifier is 1060804175723.
* Record format level identifier is 45030CCEB4CB9.
*/

public class ESS024001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01FLGFLE",
                                     "E01FLGPRO",
                                     "E01FRDTE1",
                                     "E01FRDTE2",
                                     "E01FRDTE3",
                                     "E01TODTE1",
                                     "E01TODTE2",
                                     "E01TODTE3",
                                     "E01SELUSR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01FLGFLE",
                                   "E01FLGPRO",
                                   "E01FRDTE1",
                                   "E01FRDTE2",
                                   "E01FRDTE3",
                                   "E01TODTE1",
                                   "E01TODTE2",
                                   "E01TODTE3",
                                   "E01SELUSR"
                                 };
  final static String fid = "1060804175723";
  final static String rid = "45030CCEB4CB9";
  final static String fmtname = "ESS024001";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01FLGFLE = null;
  private CharacterField fieldE01FLGPRO = null;
  private DecimalField fieldE01FRDTE1 = null;
  private DecimalField fieldE01FRDTE2 = null;
  private DecimalField fieldE01FRDTE3 = null;
  private DecimalField fieldE01TODTE1 = null;
  private DecimalField fieldE01TODTE2 = null;
  private DecimalField fieldE01TODTE3 = null;
  private CharacterField fieldE01SELUSR = null;

  /**
  * Constructor for ESS024001Message.
  */
  public ESS024001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 72;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01FLGFLE =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01FLGFLE");
    fields[10] = fieldE01FLGPRO =
    new CharacterField(message, HEADERSIZE + 43, 1, "E01FLGPRO");
    fields[11] = fieldE01FRDTE1 =
    new DecimalField(message, HEADERSIZE + 44, 3, 0, "E01FRDTE1");
    fields[12] = fieldE01FRDTE2 =
    new DecimalField(message, HEADERSIZE + 47, 3, 0, "E01FRDTE2");
    fields[13] = fieldE01FRDTE3 =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "E01FRDTE3");
    fields[14] = fieldE01TODTE1 =
    new DecimalField(message, HEADERSIZE + 53, 3, 0, "E01TODTE1");
    fields[15] = fieldE01TODTE2 =
    new DecimalField(message, HEADERSIZE + 56, 3, 0, "E01TODTE2");
    fields[16] = fieldE01TODTE3 =
    new DecimalField(message, HEADERSIZE + 59, 3, 0, "E01TODTE3");
    fields[17] = fieldE01SELUSR =
    new CharacterField(message, HEADERSIZE + 62, 10, "E01SELUSR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01FLGFLE using a String value.
  */
  public void setE01FLGFLE(String newvalue)
  {
    fieldE01FLGFLE.setString(newvalue);
  }

  /**
  * Get value of field E01FLGFLE as a String.
  */
  public String getE01FLGFLE()
  {
    return fieldE01FLGFLE.getString();
  }

  /**
  * Set field E01FLGPRO using a String value.
  */
  public void setE01FLGPRO(String newvalue)
  {
    fieldE01FLGPRO.setString(newvalue);
  }

  /**
  * Get value of field E01FLGPRO as a String.
  */
  public String getE01FLGPRO()
  {
    return fieldE01FLGPRO.getString();
  }

  /**
  * Set field E01FRDTE1 using a String value.
  */
  public void setE01FRDTE1(String newvalue)
  {
    fieldE01FRDTE1.setString(newvalue);
  }

  /**
  * Get value of field E01FRDTE1 as a String.
  */
  public String getE01FRDTE1()
  {
    return fieldE01FRDTE1.getString();
  }

  /**
  * Set numeric field E01FRDTE1 using a BigDecimal value.
  */
  public void setE01FRDTE1(BigDecimal newvalue)
  {
    fieldE01FRDTE1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FRDTE1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FRDTE1()
  {
    return fieldE01FRDTE1.getBigDecimal();
  }

  /**
  * Set field E01FRDTE2 using a String value.
  */
  public void setE01FRDTE2(String newvalue)
  {
    fieldE01FRDTE2.setString(newvalue);
  }

  /**
  * Get value of field E01FRDTE2 as a String.
  */
  public String getE01FRDTE2()
  {
    return fieldE01FRDTE2.getString();
  }

  /**
  * Set numeric field E01FRDTE2 using a BigDecimal value.
  */
  public void setE01FRDTE2(BigDecimal newvalue)
  {
    fieldE01FRDTE2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FRDTE2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FRDTE2()
  {
    return fieldE01FRDTE2.getBigDecimal();
  }

  /**
  * Set field E01FRDTE3 using a String value.
  */
  public void setE01FRDTE3(String newvalue)
  {
    fieldE01FRDTE3.setString(newvalue);
  }

  /**
  * Get value of field E01FRDTE3 as a String.
  */
  public String getE01FRDTE3()
  {
    return fieldE01FRDTE3.getString();
  }

  /**
  * Set numeric field E01FRDTE3 using a BigDecimal value.
  */
  public void setE01FRDTE3(BigDecimal newvalue)
  {
    fieldE01FRDTE3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FRDTE3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FRDTE3()
  {
    return fieldE01FRDTE3.getBigDecimal();
  }

  /**
  * Set field E01TODTE1 using a String value.
  */
  public void setE01TODTE1(String newvalue)
  {
    fieldE01TODTE1.setString(newvalue);
  }

  /**
  * Get value of field E01TODTE1 as a String.
  */
  public String getE01TODTE1()
  {
    return fieldE01TODTE1.getString();
  }

  /**
  * Set numeric field E01TODTE1 using a BigDecimal value.
  */
  public void setE01TODTE1(BigDecimal newvalue)
  {
    fieldE01TODTE1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TODTE1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TODTE1()
  {
    return fieldE01TODTE1.getBigDecimal();
  }

  /**
  * Set field E01TODTE2 using a String value.
  */
  public void setE01TODTE2(String newvalue)
  {
    fieldE01TODTE2.setString(newvalue);
  }

  /**
  * Get value of field E01TODTE2 as a String.
  */
  public String getE01TODTE2()
  {
    return fieldE01TODTE2.getString();
  }

  /**
  * Set numeric field E01TODTE2 using a BigDecimal value.
  */
  public void setE01TODTE2(BigDecimal newvalue)
  {
    fieldE01TODTE2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TODTE2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TODTE2()
  {
    return fieldE01TODTE2.getBigDecimal();
  }

  /**
  * Set field E01TODTE3 using a String value.
  */
  public void setE01TODTE3(String newvalue)
  {
    fieldE01TODTE3.setString(newvalue);
  }

  /**
  * Get value of field E01TODTE3 as a String.
  */
  public String getE01TODTE3()
  {
    return fieldE01TODTE3.getString();
  }

  /**
  * Set numeric field E01TODTE3 using a BigDecimal value.
  */
  public void setE01TODTE3(BigDecimal newvalue)
  {
    fieldE01TODTE3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TODTE3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TODTE3()
  {
    return fieldE01TODTE3.getBigDecimal();
  }

  /**
  * Set field E01SELUSR using a String value.
  */
  public void setE01SELUSR(String newvalue)
  {
    fieldE01SELUSR.setString(newvalue);
  }

  /**
  * Get value of field E01SELUSR as a String.
  */
  public String getE01SELUSR()
  {
    return fieldE01SELUSR.getString();
  }

}
